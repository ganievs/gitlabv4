// Code generated by go generate; DO NOT EDIT.
// This file was generated from GraphQL schema

package gitlabv4

type EnumVisibilityLevelsEnum string

const EnumVisibilityLevelsEnuminternal EnumVisibilityLevelsEnum = "internal"
const EnumVisibilityLevelsEnumprivate EnumVisibilityLevelsEnum = "private"
const EnumVisibilityLevelsEnumpublic EnumVisibilityLevelsEnum = "public"

type EnumVulnerabilityGrade string

const EnumVulnerabilityGradeA EnumVulnerabilityGrade = "A"
const EnumVulnerabilityGradeB EnumVulnerabilityGrade = "B"
const EnumVulnerabilityGradeC EnumVulnerabilityGrade = "C"
const EnumVulnerabilityGradeD EnumVulnerabilityGrade = "D"
const EnumVulnerabilityGradeF EnumVulnerabilityGrade = "F"

type EnumCommitEncoding string

const EnumCommitEncodingBASE64 EnumCommitEncoding = "BASE64"
const EnumCommitEncodingTEXT EnumCommitEncoding = "TEXT"

type EnumGroupReleaseSort string

const EnumGroupReleaseSortRELEASED_AT_ASC EnumGroupReleaseSort = "RELEASED_AT_ASC"
const EnumGroupReleaseSortRELEASED_AT_DESC EnumGroupReleaseSort = "RELEASED_AT_DESC"

type EnumOncallRotationUnitEnum string

const EnumOncallRotationUnitEnumDAYS EnumOncallRotationUnitEnum = "DAYS"
const EnumOncallRotationUnitEnumHOURS EnumOncallRotationUnitEnum = "HOURS"
const EnumOncallRotationUnitEnumWEEKS EnumOncallRotationUnitEnum = "WEEKS"

type EnumRefType string

const EnumRefTypeHEADS EnumRefType = "HEADS"
const EnumRefTypeTAGS EnumRefType = "TAGS"

type EnumCiRunnerUpgradeStatus string

const EnumCiRunnerUpgradeStatusAVAILABLE EnumCiRunnerUpgradeStatus = "AVAILABLE"
const EnumCiRunnerUpgradeStatusINVALID EnumCiRunnerUpgradeStatus = "INVALID"
const EnumCiRunnerUpgradeStatusNOT_AVAILABLE EnumCiRunnerUpgradeStatus = "NOT_AVAILABLE"
const EnumCiRunnerUpgradeStatusRECOMMENDED EnumCiRunnerUpgradeStatus = "RECOMMENDED"

type EnumComplianceFrameworkPresenceFilter string

const EnumComplianceFrameworkPresenceFilterANY EnumComplianceFrameworkPresenceFilter = "ANY"
const EnumComplianceFrameworkPresenceFilterNONE EnumComplianceFrameworkPresenceFilter = "NONE"

type EnumDastSiteProfileValidationStatusEnum string

const EnumDastSiteProfileValidationStatusEnumFAILED_VALIDATION EnumDastSiteProfileValidationStatusEnum = "FAILED_VALIDATION"
const EnumDastSiteProfileValidationStatusEnumINPROGRESS_VALIDATION EnumDastSiteProfileValidationStatusEnum = "INPROGRESS_VALIDATION"
const EnumDastSiteProfileValidationStatusEnumNONE EnumDastSiteProfileValidationStatusEnum = "NONE"
const EnumDastSiteProfileValidationStatusEnumPASSED_VALIDATION EnumDastSiteProfileValidationStatusEnum = "PASSED_VALIDATION"
const EnumDastSiteProfileValidationStatusEnumPENDING_VALIDATION EnumDastSiteProfileValidationStatusEnum = "PENDING_VALIDATION"

type EnumPipelineScopeEnum string

const EnumPipelineScopeEnumBRANCHES EnumPipelineScopeEnum = "BRANCHES"
const EnumPipelineScopeEnumFINISHED EnumPipelineScopeEnum = "FINISHED"
const EnumPipelineScopeEnumPENDING EnumPipelineScopeEnum = "PENDING"
const EnumPipelineScopeEnumRUNNING EnumPipelineScopeEnum = "RUNNING"
const EnumPipelineScopeEnumTAGS EnumPipelineScopeEnum = "TAGS"

type EnumSort string

const EnumSortCREATED_ASC EnumSort = "CREATED_ASC"
const EnumSortCREATED_DESC EnumSort = "CREATED_DESC"
const EnumSortUPDATED_ASC EnumSort = "UPDATED_ASC"
const EnumSortUPDATED_DESC EnumSort = "UPDATED_DESC"
const EnumSortcreated_asc EnumSort = "created_asc"
const EnumSortcreated_desc EnumSort = "created_desc"
const EnumSortupdated_asc EnumSort = "updated_asc"
const EnumSortupdated_desc EnumSort = "updated_desc"

type EnumVulnerabilityExternalIssueLinkType string

const EnumVulnerabilityExternalIssueLinkTypeCREATED EnumVulnerabilityExternalIssueLinkType = "CREATED"

type EnumCiRunnerJobExecutionStatus string

const EnumCiRunnerJobExecutionStatusIDLE EnumCiRunnerJobExecutionStatus = "IDLE"
const EnumCiRunnerJobExecutionStatusRUNNING EnumCiRunnerJobExecutionStatus = "RUNNING"

type EnumDoraMetricBucketingInterval string

const EnumDoraMetricBucketingIntervalALL EnumDoraMetricBucketingInterval = "ALL"
const EnumDoraMetricBucketingIntervalDAILY EnumDoraMetricBucketingInterval = "DAILY"
const EnumDoraMetricBucketingIntervalMONTHLY EnumDoraMetricBucketingInterval = "MONTHLY"

type EnumIterationSearchableField string

const EnumIterationSearchableFieldCADENCE_TITLE EnumIterationSearchableField = "CADENCE_TITLE"
const EnumIterationSearchableFieldTITLE EnumIterationSearchableField = "TITLE"

type EnumDeploymentsApprovalStatus string

const EnumDeploymentsApprovalStatusAPPROVED EnumDeploymentsApprovalStatus = "APPROVED"
const EnumDeploymentsApprovalStatusREJECTED EnumDeploymentsApprovalStatus = "REJECTED"

type EnumMeasurementIdentifier string

const EnumMeasurementIdentifierGROUPS EnumMeasurementIdentifier = "GROUPS"
const EnumMeasurementIdentifierISSUES EnumMeasurementIdentifier = "ISSUES"
const EnumMeasurementIdentifierMERGE_REQUESTS EnumMeasurementIdentifier = "MERGE_REQUESTS"
const EnumMeasurementIdentifierPIPELINES EnumMeasurementIdentifier = "PIPELINES"
const EnumMeasurementIdentifierPIPELINES_CANCELED EnumMeasurementIdentifier = "PIPELINES_CANCELED"
const EnumMeasurementIdentifierPIPELINES_FAILED EnumMeasurementIdentifier = "PIPELINES_FAILED"
const EnumMeasurementIdentifierPIPELINES_SKIPPED EnumMeasurementIdentifier = "PIPELINES_SKIPPED"
const EnumMeasurementIdentifierPIPELINES_SUCCEEDED EnumMeasurementIdentifier = "PIPELINES_SUCCEEDED"
const EnumMeasurementIdentifierPROJECTS EnumMeasurementIdentifier = "PROJECTS"
const EnumMeasurementIdentifierUSERS EnumMeasurementIdentifier = "USERS"

type EnumRequirementStatusFilter string

const EnumRequirementStatusFilterFAILED EnumRequirementStatusFilter = "FAILED"
const EnumRequirementStatusFilterMISSING EnumRequirementStatusFilter = "MISSING"
const EnumRequirementStatusFilterPASSED EnumRequirementStatusFilter = "PASSED"

type EnumAvailabilityEnum string

const EnumAvailabilityEnumBUSY EnumAvailabilityEnum = "BUSY"
const EnumAvailabilityEnumNOT_SET EnumAvailabilityEnum = "NOT_SET"

type EnumCiConfigStatus string

const EnumCiConfigStatusINVALID EnumCiConfigStatus = "INVALID"
const EnumCiConfigStatusVALID EnumCiConfigStatus = "VALID"

type EnumComplianceStandardsAdherenceStandard string

const EnumComplianceStandardsAdherenceStandardGITLAB EnumComplianceStandardsAdherenceStandard = "GITLAB"

type EnumMergeRequestNewState string

const EnumMergeRequestNewStateCLOSED EnumMergeRequestNewState = "CLOSED"
const EnumMergeRequestNewStateOPEN EnumMergeRequestNewState = "OPEN"

type EnumMutationOperationMode string

const EnumMutationOperationModeAPPEND EnumMutationOperationMode = "APPEND"
const EnumMutationOperationModeREMOVE EnumMutationOperationMode = "REMOVE"
const EnumMutationOperationModeREPLACE EnumMutationOperationMode = "REPLACE"

type EnumAlertManagementSeverity string

const EnumAlertManagementSeverityCRITICAL EnumAlertManagementSeverity = "CRITICAL"
const EnumAlertManagementSeverityHIGH EnumAlertManagementSeverity = "HIGH"
const EnumAlertManagementSeverityINFO EnumAlertManagementSeverity = "INFO"
const EnumAlertManagementSeverityLOW EnumAlertManagementSeverity = "LOW"
const EnumAlertManagementSeverityMEDIUM EnumAlertManagementSeverity = "MEDIUM"
const EnumAlertManagementSeverityUNKNOWN EnumAlertManagementSeverity = "UNKNOWN"

type EnumContactSort string

const EnumContactSortCREATED_ASC EnumContactSort = "CREATED_ASC"
const EnumContactSortCREATED_DESC EnumContactSort = "CREATED_DESC"
const EnumContactSortDESCRIPTION_ASC EnumContactSort = "DESCRIPTION_ASC"
const EnumContactSortDESCRIPTION_DESC EnumContactSort = "DESCRIPTION_DESC"
const EnumContactSortEMAIL_ASC EnumContactSort = "EMAIL_ASC"
const EnumContactSortEMAIL_DESC EnumContactSort = "EMAIL_DESC"
const EnumContactSortFIRST_NAME_ASC EnumContactSort = "FIRST_NAME_ASC"
const EnumContactSortFIRST_NAME_DESC EnumContactSort = "FIRST_NAME_DESC"
const EnumContactSortLAST_NAME_ASC EnumContactSort = "LAST_NAME_ASC"
const EnumContactSortLAST_NAME_DESC EnumContactSort = "LAST_NAME_DESC"
const EnumContactSortORGANIZATION_ASC EnumContactSort = "ORGANIZATION_ASC"
const EnumContactSortORGANIZATION_DESC EnumContactSort = "ORGANIZATION_DESC"
const EnumContactSortPHONE_ASC EnumContactSort = "PHONE_ASC"
const EnumContactSortPHONE_DESC EnumContactSort = "PHONE_DESC"
const EnumContactSortUPDATED_ASC EnumContactSort = "UPDATED_ASC"
const EnumContactSortUPDATED_DESC EnumContactSort = "UPDATED_DESC"
const EnumContactSortcreated_asc EnumContactSort = "created_asc"
const EnumContactSortcreated_desc EnumContactSort = "created_desc"
const EnumContactSortupdated_asc EnumContactSort = "updated_asc"
const EnumContactSortupdated_desc EnumContactSort = "updated_desc"

type EnumDastSiteValidationStatusEnum string

const EnumDastSiteValidationStatusEnumFAILED_VALIDATION EnumDastSiteValidationStatusEnum = "FAILED_VALIDATION"
const EnumDastSiteValidationStatusEnumINPROGRESS_VALIDATION EnumDastSiteValidationStatusEnum = "INPROGRESS_VALIDATION"
const EnumDastSiteValidationStatusEnumPASSED_VALIDATION EnumDastSiteValidationStatusEnum = "PASSED_VALIDATION"
const EnumDastSiteValidationStatusEnumPENDING_VALIDATION EnumDastSiteValidationStatusEnum = "PENDING_VALIDATION"

type EnumPipelineMergeRequestEventType string

const EnumPipelineMergeRequestEventTypeDETACHED EnumPipelineMergeRequestEventType = "DETACHED"
const EnumPipelineMergeRequestEventTypeMERGED_RESULT EnumPipelineMergeRequestEventType = "MERGED_RESULT"
const EnumPipelineMergeRequestEventTypeMERGE_TRAIN EnumPipelineMergeRequestEventType = "MERGE_TRAIN"

type EnumTodoActionEnum string

const EnumTodoActionEnumapproval_required EnumTodoActionEnum = "approval_required"
const EnumTodoActionEnumassigned EnumTodoActionEnum = "assigned"
const EnumTodoActionEnumbuild_failed EnumTodoActionEnum = "build_failed"
const EnumTodoActionEnumdirectly_addressed EnumTodoActionEnum = "directly_addressed"
const EnumTodoActionEnummarked EnumTodoActionEnum = "marked"
const EnumTodoActionEnummember_access_requested EnumTodoActionEnum = "member_access_requested"
const EnumTodoActionEnummentioned EnumTodoActionEnum = "mentioned"
const EnumTodoActionEnummerge_train_removed EnumTodoActionEnum = "merge_train_removed"
const EnumTodoActionEnumreview_requested EnumTodoActionEnum = "review_requested"
const EnumTodoActionEnumreview_submitted EnumTodoActionEnum = "review_submitted"
const EnumTodoActionEnumunmergeable EnumTodoActionEnum = "unmergeable"

type EnumTrainingUrlRequestStatus string

const EnumTrainingUrlRequestStatusCOMPLETED EnumTrainingUrlRequestStatus = "COMPLETED"
const EnumTrainingUrlRequestStatusPENDING EnumTrainingUrlRequestStatus = "PENDING"

type EnumCiRunnerType string

const EnumCiRunnerTypeGROUP_TYPE EnumCiRunnerType = "GROUP_TYPE"
const EnumCiRunnerTypeINSTANCE_TYPE EnumCiRunnerType = "INSTANCE_TYPE"
const EnumCiRunnerTypePROJECT_TYPE EnumCiRunnerType = "PROJECT_TYPE"

type EnumDataVisualizationColorEnum string

const EnumDataVisualizationColorEnumAQUA EnumDataVisualizationColorEnum = "AQUA"
const EnumDataVisualizationColorEnumBLUE EnumDataVisualizationColorEnum = "BLUE"
const EnumDataVisualizationColorEnumGREEN EnumDataVisualizationColorEnum = "GREEN"
const EnumDataVisualizationColorEnumMAGENTA EnumDataVisualizationColorEnum = "MAGENTA"
const EnumDataVisualizationColorEnumORANGE EnumDataVisualizationColorEnum = "ORANGE"

type EnumIssuableSubscriptionEvent string

const EnumIssuableSubscriptionEventSUBSCRIBE EnumIssuableSubscriptionEvent = "SUBSCRIBE"
const EnumIssuableSubscriptionEventUNSUBSCRIBE EnumIssuableSubscriptionEvent = "UNSUBSCRIBE"

type EnumCiVariableSort string

const EnumCiVariableSortKEY_ASC EnumCiVariableSort = "KEY_ASC"
const EnumCiVariableSortKEY_DESC EnumCiVariableSort = "KEY_DESC"

type EnumCustomerRelationsContactState string

const EnumCustomerRelationsContactStateactive EnumCustomerRelationsContactState = "active"
const EnumCustomerRelationsContactStateall EnumCustomerRelationsContactState = "all"
const EnumCustomerRelationsContactStateinactive EnumCustomerRelationsContactState = "inactive"

type EnumDependencyProxyManifestStatus string

const EnumDependencyProxyManifestStatusDEFAULT EnumDependencyProxyManifestStatus = "DEFAULT"
const EnumDependencyProxyManifestStatusERROR EnumDependencyProxyManifestStatus = "ERROR"
const EnumDependencyProxyManifestStatusPENDING_DESTRUCTION EnumDependencyProxyManifestStatus = "PENDING_DESTRUCTION"
const EnumDependencyProxyManifestStatusPROCESSING EnumDependencyProxyManifestStatus = "PROCESSING"

type EnumEpicStateEvent string

const EnumEpicStateEventCLOSE EnumEpicStateEvent = "CLOSE"
const EnumEpicStateEventREOPEN EnumEpicStateEvent = "REOPEN"

type EnumIssueState string

const EnumIssueStateall EnumIssueState = "all"
const EnumIssueStateclosed EnumIssueState = "closed"
const EnumIssueStatelocked EnumIssueState = "locked"
const EnumIssueStateopened EnumIssueState = "opened"

type Enum__TypeKind string

const Enum__TypeKindSCALAR Enum__TypeKind = "SCALAR"
const Enum__TypeKindOBJECT Enum__TypeKind = "OBJECT"
const Enum__TypeKindINTERFACE Enum__TypeKind = "INTERFACE"
const Enum__TypeKindUNION Enum__TypeKind = "UNION"
const Enum__TypeKindENUM Enum__TypeKind = "ENUM"
const Enum__TypeKindINPUT_OBJECT Enum__TypeKind = "INPUT_OBJECT"
const Enum__TypeKindLIST Enum__TypeKind = "LIST"
const Enum__TypeKindNON_NULL Enum__TypeKind = "NON_NULL"

type EnumCiGroupVariablesSort string

const EnumCiGroupVariablesSortCREATED_ASC EnumCiGroupVariablesSort = "CREATED_ASC"
const EnumCiGroupVariablesSortCREATED_DESC EnumCiGroupVariablesSort = "CREATED_DESC"
const EnumCiGroupVariablesSortKEY_ASC EnumCiGroupVariablesSort = "KEY_ASC"
const EnumCiGroupVariablesSortKEY_DESC EnumCiGroupVariablesSort = "KEY_DESC"

type EnumCiRunnerSort string

const EnumCiRunnerSortCONTACTED_ASC EnumCiRunnerSort = "CONTACTED_ASC"
const EnumCiRunnerSortCONTACTED_DESC EnumCiRunnerSort = "CONTACTED_DESC"
const EnumCiRunnerSortCREATED_ASC EnumCiRunnerSort = "CREATED_ASC"
const EnumCiRunnerSortCREATED_DESC EnumCiRunnerSort = "CREATED_DESC"
const EnumCiRunnerSortMOST_ACTIVE_DESC EnumCiRunnerSort = "MOST_ACTIVE_DESC"
const EnumCiRunnerSortTOKEN_EXPIRES_AT_ASC EnumCiRunnerSort = "TOKEN_EXPIRES_AT_ASC"
const EnumCiRunnerSortTOKEN_EXPIRES_AT_DESC EnumCiRunnerSort = "TOKEN_EXPIRES_AT_DESC"

type EnumVulnerabilityReportType string

const EnumVulnerabilityReportTypeAPI_FUZZING EnumVulnerabilityReportType = "API_FUZZING"
const EnumVulnerabilityReportTypeCLUSTER_IMAGE_SCANNING EnumVulnerabilityReportType = "CLUSTER_IMAGE_SCANNING"
const EnumVulnerabilityReportTypeCONTAINER_SCANNING EnumVulnerabilityReportType = "CONTAINER_SCANNING"
const EnumVulnerabilityReportTypeCOVERAGE_FUZZING EnumVulnerabilityReportType = "COVERAGE_FUZZING"
const EnumVulnerabilityReportTypeDAST EnumVulnerabilityReportType = "DAST"
const EnumVulnerabilityReportTypeDEPENDENCY_SCANNING EnumVulnerabilityReportType = "DEPENDENCY_SCANNING"
const EnumVulnerabilityReportTypeGENERIC EnumVulnerabilityReportType = "GENERIC"
const EnumVulnerabilityReportTypeSAST EnumVulnerabilityReportType = "SAST"
const EnumVulnerabilityReportTypeSECRET_DETECTION EnumVulnerabilityReportType = "SECRET_DETECTION"

type EnumWorkItemStateEvent string

const EnumWorkItemStateEventCLOSE EnumWorkItemStateEvent = "CLOSE"
const EnumWorkItemStateEventREOPEN EnumWorkItemStateEvent = "REOPEN"

type EnumComparableSecurityReportType string

const EnumComparableSecurityReportTypeAPI_FUZZING EnumComparableSecurityReportType = "API_FUZZING"
const EnumComparableSecurityReportTypeCONTAINER_SCANNING EnumComparableSecurityReportType = "CONTAINER_SCANNING"
const EnumComparableSecurityReportTypeCOVERAGE_FUZZING EnumComparableSecurityReportType = "COVERAGE_FUZZING"
const EnumComparableSecurityReportTypeDAST EnumComparableSecurityReportType = "DAST"
const EnumComparableSecurityReportTypeDEPENDENCY_SCANNING EnumComparableSecurityReportType = "DEPENDENCY_SCANNING"
const EnumComparableSecurityReportTypeSAST EnumComparableSecurityReportType = "SAST"
const EnumComparableSecurityReportTypeSECRET_DETECTION EnumComparableSecurityReportType = "SECRET_DETECTION"

type EnumIssueCreationIterationWildcardId string

const EnumIssueCreationIterationWildcardIdCURRENT EnumIssueCreationIterationWildcardId = "CURRENT"

type EnumPackageGroupSort string

const EnumPackageGroupSortCREATED_ASC EnumPackageGroupSort = "CREATED_ASC"
const EnumPackageGroupSortCREATED_DESC EnumPackageGroupSort = "CREATED_DESC"
const EnumPackageGroupSortNAME_ASC EnumPackageGroupSort = "NAME_ASC"
const EnumPackageGroupSortNAME_DESC EnumPackageGroupSort = "NAME_DESC"
const EnumPackageGroupSortPROJECT_PATH_ASC EnumPackageGroupSort = "PROJECT_PATH_ASC"
const EnumPackageGroupSortPROJECT_PATH_DESC EnumPackageGroupSort = "PROJECT_PATH_DESC"
const EnumPackageGroupSortTYPE_ASC EnumPackageGroupSort = "TYPE_ASC"
const EnumPackageGroupSortTYPE_DESC EnumPackageGroupSort = "TYPE_DESC"
const EnumPackageGroupSortVERSION_ASC EnumPackageGroupSort = "VERSION_ASC"
const EnumPackageGroupSortVERSION_DESC EnumPackageGroupSort = "VERSION_DESC"

type EnumVulnerabilityExternalIssueLinkExternalTracker string

const EnumVulnerabilityExternalIssueLinkExternalTrackerJIRA EnumVulnerabilityExternalIssueLinkExternalTracker = "JIRA"

type EnumVulnerabilitySeverity string

const EnumVulnerabilitySeverityCRITICAL EnumVulnerabilitySeverity = "CRITICAL"
const EnumVulnerabilitySeverityHIGH EnumVulnerabilitySeverity = "HIGH"
const EnumVulnerabilitySeverityINFO EnumVulnerabilitySeverity = "INFO"
const EnumVulnerabilitySeverityLOW EnumVulnerabilitySeverity = "LOW"
const EnumVulnerabilitySeverityMEDIUM EnumVulnerabilitySeverity = "MEDIUM"
const EnumVulnerabilitySeverityUNKNOWN EnumVulnerabilitySeverity = "UNKNOWN"

type EnumCiConfigIncludeType string

const EnumCiConfigIncludeTypecomponent EnumCiConfigIncludeType = "component"
const EnumCiConfigIncludeTypefile EnumCiConfigIncludeType = "file"
const EnumCiConfigIncludeTypelocal EnumCiConfigIncludeType = "local"
const EnumCiConfigIncludeTyperemote EnumCiConfigIncludeType = "remote"
const EnumCiConfigIncludeTypetemplate EnumCiConfigIncludeType = "template"

type EnumCiRunnerAccessLevel string

const EnumCiRunnerAccessLevelNOT_PROTECTED EnumCiRunnerAccessLevel = "NOT_PROTECTED"
const EnumCiRunnerAccessLevelREF_PROTECTED EnumCiRunnerAccessLevel = "REF_PROTECTED"

type EnumCodeQualityDegradationSeverity string

const EnumCodeQualityDegradationSeverityBLOCKER EnumCodeQualityDegradationSeverity = "BLOCKER"
const EnumCodeQualityDegradationSeverityCRITICAL EnumCodeQualityDegradationSeverity = "CRITICAL"
const EnumCodeQualityDegradationSeverityINFO EnumCodeQualityDegradationSeverity = "INFO"
const EnumCodeQualityDegradationSeverityMAJOR EnumCodeQualityDegradationSeverity = "MAJOR"
const EnumCodeQualityDegradationSeverityMINOR EnumCodeQualityDegradationSeverity = "MINOR"
const EnumCodeQualityDegradationSeverityUNKNOWN EnumCodeQualityDegradationSeverity = "UNKNOWN"

type EnumProductAnalyticsState string

const EnumProductAnalyticsStateCOMPLETE EnumProductAnalyticsState = "COMPLETE"
const EnumProductAnalyticsStateCREATE_INSTANCE EnumProductAnalyticsState = "CREATE_INSTANCE"
const EnumProductAnalyticsStateLOADING_INSTANCE EnumProductAnalyticsState = "LOADING_INSTANCE"
const EnumProductAnalyticsStateWAITING_FOR_EVENTS EnumProductAnalyticsState = "WAITING_FOR_EVENTS"

type EnumReleaseSort string

const EnumReleaseSortCREATED_ASC EnumReleaseSort = "CREATED_ASC"
const EnumReleaseSortCREATED_DESC EnumReleaseSort = "CREATED_DESC"
const EnumReleaseSortRELEASED_AT_ASC EnumReleaseSort = "RELEASED_AT_ASC"
const EnumReleaseSortRELEASED_AT_DESC EnumReleaseSort = "RELEASED_AT_DESC"

type EnumSastUiComponentSize string

const EnumSastUiComponentSizeLARGE EnumSastUiComponentSize = "LARGE"
const EnumSastUiComponentSizeMEDIUM EnumSastUiComponentSize = "MEDIUM"
const EnumSastUiComponentSizeSMALL EnumSastUiComponentSize = "SMALL"

type EnumTestReportState string

const EnumTestReportStateFAILED EnumTestReportState = "FAILED"
const EnumTestReportStatePASSED EnumTestReportState = "PASSED"

type EnumUserCalloutFeatureNameEnum string

const EnumUserCalloutFeatureNameEnumACTIVE_USER_COUNT_THRESHOLD EnumUserCalloutFeatureNameEnum = "ACTIVE_USER_COUNT_THRESHOLD"
const EnumUserCalloutFeatureNameEnumARTIFACTS_MANAGEMENT_PAGE_FEEDBACK_BANNER EnumUserCalloutFeatureNameEnum = "ARTIFACTS_MANAGEMENT_PAGE_FEEDBACK_BANNER"
const EnumUserCalloutFeatureNameEnumBRANCH_RULES_INFO_CALLOUT EnumUserCalloutFeatureNameEnum = "BRANCH_RULES_INFO_CALLOUT"
const EnumUserCalloutFeatureNameEnumBUY_PIPELINE_MINUTES_NOTIFICATION_DOT EnumUserCalloutFeatureNameEnum = "BUY_PIPELINE_MINUTES_NOTIFICATION_DOT"
const EnumUserCalloutFeatureNameEnumCANARY_DEPLOYMENT EnumUserCalloutFeatureNameEnum = "CANARY_DEPLOYMENT"
const EnumUserCalloutFeatureNameEnumCI_DEPRECATION_WARNING_FOR_TYPES_KEYWORD EnumUserCalloutFeatureNameEnum = "CI_DEPRECATION_WARNING_FOR_TYPES_KEYWORD"
const EnumUserCalloutFeatureNameEnumCLOUD_LICENSING_SUBSCRIPTION_ACTIVATION_BANNER EnumUserCalloutFeatureNameEnum = "CLOUD_LICENSING_SUBSCRIPTION_ACTIVATION_BANNER"
const EnumUserCalloutFeatureNameEnumCLUSTER_SECURITY_WARNING EnumUserCalloutFeatureNameEnum = "CLUSTER_SECURITY_WARNING"
const EnumUserCalloutFeatureNameEnumCODE_SUGGESTIONS_THIRD_PARTY_CALLOUT EnumUserCalloutFeatureNameEnum = "CODE_SUGGESTIONS_THIRD_PARTY_CALLOUT"
const EnumUserCalloutFeatureNameEnumCREATE_RUNNER_WORKFLOW_BANNER EnumUserCalloutFeatureNameEnum = "CREATE_RUNNER_WORKFLOW_BANNER"
const EnumUserCalloutFeatureNameEnumEOA_BRONZE_PLAN_BANNER EnumUserCalloutFeatureNameEnum = "EOA_BRONZE_PLAN_BANNER"
const EnumUserCalloutFeatureNameEnumFEATURE_FLAGS_NEW_VERSION EnumUserCalloutFeatureNameEnum = "FEATURE_FLAGS_NEW_VERSION"
const EnumUserCalloutFeatureNameEnumGCP_SIGNUP_OFFER EnumUserCalloutFeatureNameEnum = "GCP_SIGNUP_OFFER"
const EnumUserCalloutFeatureNameEnumGEO_ENABLE_HASHED_STORAGE EnumUserCalloutFeatureNameEnum = "GEO_ENABLE_HASHED_STORAGE"
const EnumUserCalloutFeatureNameEnumGEO_MIGRATE_HASHED_STORAGE EnumUserCalloutFeatureNameEnum = "GEO_MIGRATE_HASHED_STORAGE"
const EnumUserCalloutFeatureNameEnumGKE_CLUSTER_INTEGRATION EnumUserCalloutFeatureNameEnum = "GKE_CLUSTER_INTEGRATION"
const EnumUserCalloutFeatureNameEnumGOLD_TRIAL_BILLINGS EnumUserCalloutFeatureNameEnum = "GOLD_TRIAL_BILLINGS"
const EnumUserCalloutFeatureNameEnumMERGE_REQUEST_SETTINGS_MOVED_CALLOUT EnumUserCalloutFeatureNameEnum = "MERGE_REQUEST_SETTINGS_MOVED_CALLOUT"
const EnumUserCalloutFeatureNameEnumMR_EXPERIENCE_SURVEY EnumUserCalloutFeatureNameEnum = "MR_EXPERIENCE_SURVEY"
const EnumUserCalloutFeatureNameEnumNAMESPACE_OVER_STORAGE_USERS_COMBINED_ALERT EnumUserCalloutFeatureNameEnum = "NAMESPACE_OVER_STORAGE_USERS_COMBINED_ALERT"
const EnumUserCalloutFeatureNameEnumNAMESPACE_STORAGE_LIMIT_ALERT_ALERT_THRESHOLD EnumUserCalloutFeatureNameEnum = "NAMESPACE_STORAGE_LIMIT_ALERT_ALERT_THRESHOLD"
const EnumUserCalloutFeatureNameEnumNAMESPACE_STORAGE_LIMIT_ALERT_ERROR_THRESHOLD EnumUserCalloutFeatureNameEnum = "NAMESPACE_STORAGE_LIMIT_ALERT_ERROR_THRESHOLD"
const EnumUserCalloutFeatureNameEnumNAMESPACE_STORAGE_LIMIT_ALERT_WARNING_THRESHOLD EnumUserCalloutFeatureNameEnum = "NAMESPACE_STORAGE_LIMIT_ALERT_WARNING_THRESHOLD"
const EnumUserCalloutFeatureNameEnumNAMESPACE_STORAGE_PRE_ENFORCEMENT_BANNER EnumUserCalloutFeatureNameEnum = "NAMESPACE_STORAGE_PRE_ENFORCEMENT_BANNER"
const EnumUserCalloutFeatureNameEnumNEW_NAVIGATION_CALLOUT EnumUserCalloutFeatureNameEnum = "NEW_NAVIGATION_CALLOUT"
const EnumUserCalloutFeatureNameEnumNEW_TOP_LEVEL_GROUP_ALERT EnumUserCalloutFeatureNameEnum = "NEW_TOP_LEVEL_GROUP_ALERT"
const EnumUserCalloutFeatureNameEnumNEW_USER_SIGNUPS_CAP_REACHED EnumUserCalloutFeatureNameEnum = "NEW_USER_SIGNUPS_CAP_REACHED"
const EnumUserCalloutFeatureNameEnumPERSONAL_ACCESS_TOKEN_EXPIRY EnumUserCalloutFeatureNameEnum = "PERSONAL_ACCESS_TOKEN_EXPIRY"
const EnumUserCalloutFeatureNameEnumPERSONAL_PROJECT_LIMITATIONS_BANNER EnumUserCalloutFeatureNameEnum = "PERSONAL_PROJECT_LIMITATIONS_BANNER"
const EnumUserCalloutFeatureNameEnumPIPELINE_NEEDS_BANNER EnumUserCalloutFeatureNameEnum = "PIPELINE_NEEDS_BANNER"
const EnumUserCalloutFeatureNameEnumPIPELINE_NEEDS_HOVER_TIP EnumUserCalloutFeatureNameEnum = "PIPELINE_NEEDS_HOVER_TIP"
const EnumUserCalloutFeatureNameEnumPREVIEW_USER_OVER_LIMIT_FREE_PLAN_ALERT EnumUserCalloutFeatureNameEnum = "PREVIEW_USER_OVER_LIMIT_FREE_PLAN_ALERT"
const EnumUserCalloutFeatureNameEnumPROFILE_PERSONAL_ACCESS_TOKEN_EXPIRY EnumUserCalloutFeatureNameEnum = "PROFILE_PERSONAL_ACCESS_TOKEN_EXPIRY"
const EnumUserCalloutFeatureNameEnumPROJECT_QUALITY_SUMMARY_FEEDBACK EnumUserCalloutFeatureNameEnum = "PROJECT_QUALITY_SUMMARY_FEEDBACK"
const EnumUserCalloutFeatureNameEnumPROJECT_REPOSITORY_LIMIT_ALERT_ALERT_THRESHOLD EnumUserCalloutFeatureNameEnum = "PROJECT_REPOSITORY_LIMIT_ALERT_ALERT_THRESHOLD"
const EnumUserCalloutFeatureNameEnumPROJECT_REPOSITORY_LIMIT_ALERT_ERROR_THRESHOLD EnumUserCalloutFeatureNameEnum = "PROJECT_REPOSITORY_LIMIT_ALERT_ERROR_THRESHOLD"
const EnumUserCalloutFeatureNameEnumPROJECT_REPOSITORY_LIMIT_ALERT_WARNING_THRESHOLD EnumUserCalloutFeatureNameEnum = "PROJECT_REPOSITORY_LIMIT_ALERT_WARNING_THRESHOLD"
const EnumUserCalloutFeatureNameEnumREGISTRATION_ENABLED_CALLOUT EnumUserCalloutFeatureNameEnum = "REGISTRATION_ENABLED_CALLOUT"
const EnumUserCalloutFeatureNameEnumRICH_TEXT_EDITOR EnumUserCalloutFeatureNameEnum = "RICH_TEXT_EDITOR"
const EnumUserCalloutFeatureNameEnumSECURITY_CONFIGURATION_DEVOPS_ALERT EnumUserCalloutFeatureNameEnum = "SECURITY_CONFIGURATION_DEVOPS_ALERT"
const EnumUserCalloutFeatureNameEnumSECURITY_CONFIGURATION_UPGRADE_BANNER EnumUserCalloutFeatureNameEnum = "SECURITY_CONFIGURATION_UPGRADE_BANNER"
const EnumUserCalloutFeatureNameEnumSECURITY_NEWSLETTER_CALLOUT EnumUserCalloutFeatureNameEnum = "SECURITY_NEWSLETTER_CALLOUT"
const EnumUserCalloutFeatureNameEnumSECURITY_TRAINING_FEATURE_PROMOTION EnumUserCalloutFeatureNameEnum = "SECURITY_TRAINING_FEATURE_PROMOTION"
const EnumUserCalloutFeatureNameEnumSUBMIT_LICENSE_USAGE_DATA_BANNER EnumUserCalloutFeatureNameEnum = "SUBMIT_LICENSE_USAGE_DATA_BANNER"
const EnumUserCalloutFeatureNameEnumSUGGEST_PIPELINE EnumUserCalloutFeatureNameEnum = "SUGGEST_PIPELINE"
const EnumUserCalloutFeatureNameEnumSUGGEST_POPOVER_DISMISSED EnumUserCalloutFeatureNameEnum = "SUGGEST_POPOVER_DISMISSED"
const EnumUserCalloutFeatureNameEnumTABS_POSITION_HIGHLIGHT EnumUserCalloutFeatureNameEnum = "TABS_POSITION_HIGHLIGHT"
const EnumUserCalloutFeatureNameEnumTERRAFORM_NOTIFICATION_DISMISSED EnumUserCalloutFeatureNameEnum = "TERRAFORM_NOTIFICATION_DISMISSED"
const EnumUserCalloutFeatureNameEnumTHREAT_MONITORING_INFO EnumUserCalloutFeatureNameEnum = "THREAT_MONITORING_INFO"
const EnumUserCalloutFeatureNameEnumTRIAL_STATUS_REMINDER_D14 EnumUserCalloutFeatureNameEnum = "TRIAL_STATUS_REMINDER_D14"
const EnumUserCalloutFeatureNameEnumTRIAL_STATUS_REMINDER_D3 EnumUserCalloutFeatureNameEnum = "TRIAL_STATUS_REMINDER_D3"
const EnumUserCalloutFeatureNameEnumTWO_FACTOR_AUTH_RECOVERY_SETTINGS_CHECK EnumUserCalloutFeatureNameEnum = "TWO_FACTOR_AUTH_RECOVERY_SETTINGS_CHECK"
const EnumUserCalloutFeatureNameEnumULTIMATE_TRIAL EnumUserCalloutFeatureNameEnum = "ULTIMATE_TRIAL"
const EnumUserCalloutFeatureNameEnumUNFINISHED_TAG_CLEANUP_CALLOUT EnumUserCalloutFeatureNameEnum = "UNFINISHED_TAG_CLEANUP_CALLOUT"
const EnumUserCalloutFeatureNameEnumUSER_REACHED_LIMIT_FREE_PLAN_ALERT EnumUserCalloutFeatureNameEnum = "USER_REACHED_LIMIT_FREE_PLAN_ALERT"
const EnumUserCalloutFeatureNameEnumVERIFICATION_REMINDER EnumUserCalloutFeatureNameEnum = "VERIFICATION_REMINDER"
const EnumUserCalloutFeatureNameEnumWEB_IDE_ALERT_DISMISSED EnumUserCalloutFeatureNameEnum = "WEB_IDE_ALERT_DISMISSED"
const EnumUserCalloutFeatureNameEnumWEB_IDE_CI_ENVIRONMENTS_GUIDANCE EnumUserCalloutFeatureNameEnum = "WEB_IDE_CI_ENVIRONMENTS_GUIDANCE"

type EnumCiRunnerMembershipFilter string

const EnumCiRunnerMembershipFilterALL_AVAILABLE EnumCiRunnerMembershipFilter = "ALL_AVAILABLE"
const EnumCiRunnerMembershipFilterDESCENDANTS EnumCiRunnerMembershipFilter = "DESCENDANTS"
const EnumCiRunnerMembershipFilterDIRECT EnumCiRunnerMembershipFilter = "DIRECT"

type EnumIssueStateEvent string

const EnumIssueStateEventCLOSE EnumIssueStateEvent = "CLOSE"
const EnumIssueStateEventREOPEN EnumIssueStateEvent = "REOPEN"

type EnumMilestoneStateEnum string

const EnumMilestoneStateEnumactive EnumMilestoneStateEnum = "active"
const EnumMilestoneStateEnumclosed EnumMilestoneStateEnum = "closed"

type EnumWorkItemTodoUpdateAction string

const EnumWorkItemTodoUpdateActionADD EnumWorkItemTodoUpdateAction = "ADD"
const EnumWorkItemTodoUpdateActionMARK_AS_DONE EnumWorkItemTodoUpdateAction = "MARK_AS_DONE"

type EnumAlertManagementPayloadAlertFieldType string

const EnumAlertManagementPayloadAlertFieldTypeARRAY EnumAlertManagementPayloadAlertFieldType = "ARRAY"
const EnumAlertManagementPayloadAlertFieldTypeDATETIME EnumAlertManagementPayloadAlertFieldType = "DATETIME"
const EnumAlertManagementPayloadAlertFieldTypeSTRING EnumAlertManagementPayloadAlertFieldType = "STRING"

type EnumDastPreScanVerificationStatus string

const EnumDastPreScanVerificationStatusCOMPLETE EnumDastPreScanVerificationStatus = "COMPLETE"
const EnumDastPreScanVerificationStatusCOMPLETE_WITH_ERRORS EnumDastPreScanVerificationStatus = "COMPLETE_WITH_ERRORS"
const EnumDastPreScanVerificationStatusFAILED EnumDastPreScanVerificationStatus = "FAILED"
const EnumDastPreScanVerificationStatusRUNNING EnumDastPreScanVerificationStatus = "RUNNING"

type EnumHealthStatusFilter string

const EnumHealthStatusFilterANY EnumHealthStatusFilter = "ANY"
const EnumHealthStatusFilterNONE EnumHealthStatusFilter = "NONE"
const EnumHealthStatusFilteratRisk EnumHealthStatusFilter = "atRisk"
const EnumHealthStatusFilterneedsAttention EnumHealthStatusFilter = "needsAttention"
const EnumHealthStatusFilteronTrack EnumHealthStatusFilter = "onTrack"

type EnumRelativePositionType string

const EnumRelativePositionTypeAFTER EnumRelativePositionType = "AFTER"
const EnumRelativePositionTypeBEFORE EnumRelativePositionType = "BEFORE"

type EnumSnippetBlobActionEnum string

const EnumSnippetBlobActionEnumcreate EnumSnippetBlobActionEnum = "create"
const EnumSnippetBlobActionEnumdelete EnumSnippetBlobActionEnum = "delete"
const EnumSnippetBlobActionEnummove EnumSnippetBlobActionEnum = "move"
const EnumSnippetBlobActionEnumupdate EnumSnippetBlobActionEnum = "update"

type EnumAiCachedMessageRole string

const EnumAiCachedMessageRoleASSISTANT EnumAiCachedMessageRole = "ASSISTANT"
const EnumAiCachedMessageRoleUSER EnumAiCachedMessageRole = "USER"

type EnumComplianceViolationSeverity string

const EnumComplianceViolationSeverityCRITICAL EnumComplianceViolationSeverity = "CRITICAL"
const EnumComplianceViolationSeverityHIGH EnumComplianceViolationSeverity = "HIGH"
const EnumComplianceViolationSeverityINFO EnumComplianceViolationSeverity = "INFO"
const EnumComplianceViolationSeverityLOW EnumComplianceViolationSeverity = "LOW"
const EnumComplianceViolationSeverityMEDIUM EnumComplianceViolationSeverity = "MEDIUM"

type EnumIssueType string

const EnumIssueTypeINCIDENT EnumIssueType = "INCIDENT"
const EnumIssueTypeISSUE EnumIssueType = "ISSUE"
const EnumIssueTypeKEY_RESULT EnumIssueType = "KEY_RESULT"
const EnumIssueTypeOBJECTIVE EnumIssueType = "OBJECTIVE"
const EnumIssueTypeREQUIREMENT EnumIssueType = "REQUIREMENT"
const EnumIssueTypeTASK EnumIssueType = "TASK"
const EnumIssueTypeTEST_CASE EnumIssueType = "TEST_CASE"

type EnumMarkupFormat string

const EnumMarkupFormatHTML EnumMarkupFormat = "HTML"
const EnumMarkupFormatMARKDOWN EnumMarkupFormat = "MARKDOWN"
const EnumMarkupFormatRAW EnumMarkupFormat = "RAW"

type EnumSharedRunnersSetting string

const EnumSharedRunnersSettingDISABLED_AND_OVERRIDABLE EnumSharedRunnersSetting = "DISABLED_AND_OVERRIDABLE"
const EnumSharedRunnersSettingDISABLED_AND_UNOVERRIDABLE EnumSharedRunnersSetting = "DISABLED_AND_UNOVERRIDABLE"
const EnumSharedRunnersSettingDISABLED_WITH_OVERRIDE EnumSharedRunnersSetting = "DISABLED_WITH_OVERRIDE"
const EnumSharedRunnersSettingENABLED EnumSharedRunnersSetting = "ENABLED"

type EnumCiFreezePeriodStatus string

const EnumCiFreezePeriodStatusACTIVE EnumCiFreezePeriodStatus = "ACTIVE"
const EnumCiFreezePeriodStatusINACTIVE EnumCiFreezePeriodStatus = "INACTIVE"

type EnumIssuableSearchableField string

const EnumIssuableSearchableFieldDESCRIPTION EnumIssuableSearchableField = "DESCRIPTION"
const EnumIssuableSearchableFieldTITLE EnumIssuableSearchableField = "TITLE"

type EnumIterationState string

const EnumIterationStateall EnumIterationState = "all"
const EnumIterationStateclosed EnumIterationState = "closed"
const EnumIterationStatecurrent EnumIterationState = "current"
const EnumIterationStateopened EnumIterationState = "opened"
const EnumIterationStateupcoming EnumIterationState = "upcoming"

type EnumComplianceViolationSort string

const EnumComplianceViolationSortMERGED_AT_ASC EnumComplianceViolationSort = "MERGED_AT_ASC"
const EnumComplianceViolationSortMERGED_AT_DESC EnumComplianceViolationSort = "MERGED_AT_DESC"
const EnumComplianceViolationSortMERGE_REQUEST_TITLE_ASC EnumComplianceViolationSort = "MERGE_REQUEST_TITLE_ASC"
const EnumComplianceViolationSortMERGE_REQUEST_TITLE_DESC EnumComplianceViolationSort = "MERGE_REQUEST_TITLE_DESC"
const EnumComplianceViolationSortSEVERITY_LEVEL_ASC EnumComplianceViolationSort = "SEVERITY_LEVEL_ASC"
const EnumComplianceViolationSortSEVERITY_LEVEL_DESC EnumComplianceViolationSort = "SEVERITY_LEVEL_DESC"
const EnumComplianceViolationSortVIOLATION_REASON_ASC EnumComplianceViolationSort = "VIOLATION_REASON_ASC"
const EnumComplianceViolationSortVIOLATION_REASON_DESC EnumComplianceViolationSort = "VIOLATION_REASON_DESC"

type EnumDastScanTypeEnum string

const EnumDastScanTypeEnumACTIVE EnumDastScanTypeEnum = "ACTIVE"
const EnumDastScanTypeEnumPASSIVE EnumDastScanTypeEnum = "PASSIVE"

type EnumNegatedMilestoneWildcardId string

const EnumNegatedMilestoneWildcardIdSTARTED EnumNegatedMilestoneWildcardId = "STARTED"
const EnumNegatedMilestoneWildcardIdUPCOMING EnumNegatedMilestoneWildcardId = "UPCOMING"

type EnumUserState string

const EnumUserStateactive EnumUserState = "active"
const EnumUserStateblocked EnumUserState = "blocked"
const EnumUserStatedeactivated EnumUserState = "deactivated"

type EnumVerificationStatus string

const EnumVerificationStatusMULTIPLE_SIGNATURES EnumVerificationStatus = "MULTIPLE_SIGNATURES"
const EnumVerificationStatusOTHER_USER EnumVerificationStatus = "OTHER_USER"
const EnumVerificationStatusREVOKED_KEY EnumVerificationStatus = "REVOKED_KEY"
const EnumVerificationStatusSAME_USER_DIFFERENT_EMAIL EnumVerificationStatus = "SAME_USER_DIFFERENT_EMAIL"
const EnumVerificationStatusUNKNOWN_KEY EnumVerificationStatus = "UNKNOWN_KEY"
const EnumVerificationStatusUNVERIFIED EnumVerificationStatus = "UNVERIFIED"
const EnumVerificationStatusUNVERIFIED_KEY EnumVerificationStatus = "UNVERIFIED_KEY"
const EnumVerificationStatusVERIFIED EnumVerificationStatus = "VERIFIED"
const EnumVerificationStatusVERIFIED_SYSTEM EnumVerificationStatus = "VERIFIED_SYSTEM"

type Enum__DirectiveLocation string

const Enum__DirectiveLocationQUERY Enum__DirectiveLocation = "QUERY"
const Enum__DirectiveLocationMUTATION Enum__DirectiveLocation = "MUTATION"
const Enum__DirectiveLocationSUBSCRIPTION Enum__DirectiveLocation = "SUBSCRIPTION"
const Enum__DirectiveLocationFIELD Enum__DirectiveLocation = "FIELD"
const Enum__DirectiveLocationFRAGMENT_DEFINITION Enum__DirectiveLocation = "FRAGMENT_DEFINITION"
const Enum__DirectiveLocationFRAGMENT_SPREAD Enum__DirectiveLocation = "FRAGMENT_SPREAD"
const Enum__DirectiveLocationINLINE_FRAGMENT Enum__DirectiveLocation = "INLINE_FRAGMENT"
const Enum__DirectiveLocationSCHEMA Enum__DirectiveLocation = "SCHEMA"
const Enum__DirectiveLocationSCALAR Enum__DirectiveLocation = "SCALAR"
const Enum__DirectiveLocationOBJECT Enum__DirectiveLocation = "OBJECT"
const Enum__DirectiveLocationFIELD_DEFINITION Enum__DirectiveLocation = "FIELD_DEFINITION"
const Enum__DirectiveLocationARGUMENT_DEFINITION Enum__DirectiveLocation = "ARGUMENT_DEFINITION"
const Enum__DirectiveLocationINTERFACE Enum__DirectiveLocation = "INTERFACE"
const Enum__DirectiveLocationUNION Enum__DirectiveLocation = "UNION"
const Enum__DirectiveLocationENUM Enum__DirectiveLocation = "ENUM"
const Enum__DirectiveLocationENUM_VALUE Enum__DirectiveLocation = "ENUM_VALUE"
const Enum__DirectiveLocationINPUT_OBJECT Enum__DirectiveLocation = "INPUT_OBJECT"
const Enum__DirectiveLocationINPUT_FIELD_DEFINITION Enum__DirectiveLocation = "INPUT_FIELD_DEFINITION"

type EnumAlertManagementStatus string

const EnumAlertManagementStatusACKNOWLEDGED EnumAlertManagementStatus = "ACKNOWLEDGED"
const EnumAlertManagementStatusIGNORED EnumAlertManagementStatus = "IGNORED"
const EnumAlertManagementStatusRESOLVED EnumAlertManagementStatus = "RESOLVED"
const EnumAlertManagementStatusTRIGGERED EnumAlertManagementStatus = "TRIGGERED"

type EnumCiJobStatus string

const EnumCiJobStatusCANCELED EnumCiJobStatus = "CANCELED"
const EnumCiJobStatusCREATED EnumCiJobStatus = "CREATED"
const EnumCiJobStatusFAILED EnumCiJobStatus = "FAILED"
const EnumCiJobStatusMANUAL EnumCiJobStatus = "MANUAL"
const EnumCiJobStatusPENDING EnumCiJobStatus = "PENDING"
const EnumCiJobStatusPREPARING EnumCiJobStatus = "PREPARING"
const EnumCiJobStatusRUNNING EnumCiJobStatus = "RUNNING"
const EnumCiJobStatusSCHEDULED EnumCiJobStatus = "SCHEDULED"
const EnumCiJobStatusSKIPPED EnumCiJobStatus = "SKIPPED"
const EnumCiJobStatusSUCCESS EnumCiJobStatus = "SUCCESS"
const EnumCiJobStatusWAITING_FOR_RESOURCE EnumCiJobStatus = "WAITING_FOR_RESOURCE"

type EnumReleaseTagWildcardId string

const EnumReleaseTagWildcardIdANY EnumReleaseTagWildcardId = "ANY"
const EnumReleaseTagWildcardIdNONE EnumReleaseTagWildcardId = "NONE"

type EnumSecurityReportTypeEnum string

const EnumSecurityReportTypeEnumAPI_FUZZING EnumSecurityReportTypeEnum = "API_FUZZING"
const EnumSecurityReportTypeEnumBREACH_AND_ATTACK_SIMULATION EnumSecurityReportTypeEnum = "BREACH_AND_ATTACK_SIMULATION"
const EnumSecurityReportTypeEnumCLUSTER_IMAGE_SCANNING EnumSecurityReportTypeEnum = "CLUSTER_IMAGE_SCANNING"
const EnumSecurityReportTypeEnumCONTAINER_SCANNING EnumSecurityReportTypeEnum = "CONTAINER_SCANNING"
const EnumSecurityReportTypeEnumCOVERAGE_FUZZING EnumSecurityReportTypeEnum = "COVERAGE_FUZZING"
const EnumSecurityReportTypeEnumDAST EnumSecurityReportTypeEnum = "DAST"
const EnumSecurityReportTypeEnumDEPENDENCY_SCANNING EnumSecurityReportTypeEnum = "DEPENDENCY_SCANNING"
const EnumSecurityReportTypeEnumSAST EnumSecurityReportTypeEnum = "SAST"
const EnumSecurityReportTypeEnumSAST_IAC EnumSecurityReportTypeEnum = "SAST_IAC"
const EnumSecurityReportTypeEnumSECRET_DETECTION EnumSecurityReportTypeEnum = "SECRET_DETECTION"

type EnumVisibilityScopesEnum string

const EnumVisibilityScopesEnuminternal EnumVisibilityScopesEnum = "internal"
const EnumVisibilityScopesEnumprivate EnumVisibilityScopesEnum = "private"
const EnumVisibilityScopesEnumpublic EnumVisibilityScopesEnum = "public"

type EnumWorkItemWidgetType string

const EnumWorkItemWidgetTypeASSIGNEES EnumWorkItemWidgetType = "ASSIGNEES"
const EnumWorkItemWidgetTypeAWARD_EMOJI EnumWorkItemWidgetType = "AWARD_EMOJI"
const EnumWorkItemWidgetTypeCURRENT_USER_TODOS EnumWorkItemWidgetType = "CURRENT_USER_TODOS"
const EnumWorkItemWidgetTypeDESCRIPTION EnumWorkItemWidgetType = "DESCRIPTION"
const EnumWorkItemWidgetTypeHEALTH_STATUS EnumWorkItemWidgetType = "HEALTH_STATUS"
const EnumWorkItemWidgetTypeHIERARCHY EnumWorkItemWidgetType = "HIERARCHY"
const EnumWorkItemWidgetTypeITERATION EnumWorkItemWidgetType = "ITERATION"
const EnumWorkItemWidgetTypeLABELS EnumWorkItemWidgetType = "LABELS"
const EnumWorkItemWidgetTypeMILESTONE EnumWorkItemWidgetType = "MILESTONE"
const EnumWorkItemWidgetTypeNOTES EnumWorkItemWidgetType = "NOTES"
const EnumWorkItemWidgetTypeNOTIFICATIONS EnumWorkItemWidgetType = "NOTIFICATIONS"
const EnumWorkItemWidgetTypePROGRESS EnumWorkItemWidgetType = "PROGRESS"
const EnumWorkItemWidgetTypeREQUIREMENT_LEGACY EnumWorkItemWidgetType = "REQUIREMENT_LEGACY"
const EnumWorkItemWidgetTypeSTART_AND_DUE_DATE EnumWorkItemWidgetType = "START_AND_DUE_DATE"
const EnumWorkItemWidgetTypeSTATUS EnumWorkItemWidgetType = "STATUS"
const EnumWorkItemWidgetTypeTEST_REPORTS EnumWorkItemWidgetType = "TEST_REPORTS"
const EnumWorkItemWidgetTypeWEIGHT EnumWorkItemWidgetType = "WEIGHT"

type EnumDataVisualizationWeightEnum string

const EnumDataVisualizationWeightEnumWEIGHT_100 EnumDataVisualizationWeightEnum = "WEIGHT_100"
const EnumDataVisualizationWeightEnumWEIGHT_200 EnumDataVisualizationWeightEnum = "WEIGHT_200"
const EnumDataVisualizationWeightEnumWEIGHT_300 EnumDataVisualizationWeightEnum = "WEIGHT_300"
const EnumDataVisualizationWeightEnumWEIGHT_400 EnumDataVisualizationWeightEnum = "WEIGHT_400"
const EnumDataVisualizationWeightEnumWEIGHT_50 EnumDataVisualizationWeightEnum = "WEIGHT_50"
const EnumDataVisualizationWeightEnumWEIGHT_500 EnumDataVisualizationWeightEnum = "WEIGHT_500"
const EnumDataVisualizationWeightEnumWEIGHT_600 EnumDataVisualizationWeightEnum = "WEIGHT_600"
const EnumDataVisualizationWeightEnumWEIGHT_700 EnumDataVisualizationWeightEnum = "WEIGHT_700"
const EnumDataVisualizationWeightEnumWEIGHT_800 EnumDataVisualizationWeightEnum = "WEIGHT_800"
const EnumDataVisualizationWeightEnumWEIGHT_900 EnumDataVisualizationWeightEnum = "WEIGHT_900"
const EnumDataVisualizationWeightEnumWEIGHT_950 EnumDataVisualizationWeightEnum = "WEIGHT_950"

type EnumIterationWildcardId string

const EnumIterationWildcardIdANY EnumIterationWildcardId = "ANY"
const EnumIterationWildcardIdCURRENT EnumIterationWildcardId = "CURRENT"
const EnumIterationWildcardIdNONE EnumIterationWildcardId = "NONE"

type EnumNotesFilterType string

const EnumNotesFilterTypeALL_NOTES EnumNotesFilterType = "ALL_NOTES"
const EnumNotesFilterTypeONLY_ACTIVITY EnumNotesFilterType = "ONLY_ACTIVITY"
const EnumNotesFilterTypeONLY_COMMENTS EnumNotesFilterType = "ONLY_COMMENTS"

type EnumGitlabSubscriptionsUserRole string

const EnumGitlabSubscriptionsUserRoleDEVELOPER EnumGitlabSubscriptionsUserRole = "DEVELOPER"
const EnumGitlabSubscriptionsUserRoleGUEST EnumGitlabSubscriptionsUserRole = "GUEST"
const EnumGitlabSubscriptionsUserRoleMAINTAINER EnumGitlabSubscriptionsUserRole = "MAINTAINER"
const EnumGitlabSubscriptionsUserRoleOWNER EnumGitlabSubscriptionsUserRole = "OWNER"
const EnumGitlabSubscriptionsUserRoleREPORTER EnumGitlabSubscriptionsUserRole = "REPORTER"

type EnumPackageTypeEnum string

const EnumPackageTypeEnumCOMPOSER EnumPackageTypeEnum = "COMPOSER"
const EnumPackageTypeEnumCONAN EnumPackageTypeEnum = "CONAN"
const EnumPackageTypeEnumDEBIAN EnumPackageTypeEnum = "DEBIAN"
const EnumPackageTypeEnumGENERIC EnumPackageTypeEnum = "GENERIC"
const EnumPackageTypeEnumGOLANG EnumPackageTypeEnum = "GOLANG"
const EnumPackageTypeEnumHELM EnumPackageTypeEnum = "HELM"
const EnumPackageTypeEnumMAVEN EnumPackageTypeEnum = "MAVEN"
const EnumPackageTypeEnumML_MODEL EnumPackageTypeEnum = "ML_MODEL"
const EnumPackageTypeEnumNPM EnumPackageTypeEnum = "NPM"
const EnumPackageTypeEnumNUGET EnumPackageTypeEnum = "NUGET"
const EnumPackageTypeEnumPYPI EnumPackageTypeEnum = "PYPI"
const EnumPackageTypeEnumRPM EnumPackageTypeEnum = "RPM"
const EnumPackageTypeEnumRUBYGEMS EnumPackageTypeEnum = "RUBYGEMS"
const EnumPackageTypeEnumTERRAFORM_MODULE EnumPackageTypeEnum = "TERRAFORM_MODULE"

type EnumSortDirectionEnum string

const EnumSortDirectionEnumASC EnumSortDirectionEnum = "ASC"
const EnumSortDirectionEnumDESC EnumSortDirectionEnum = "DESC"

type EnumAccessLevelEnum string

const EnumAccessLevelEnumADMIN EnumAccessLevelEnum = "ADMIN"
const EnumAccessLevelEnumDEVELOPER EnumAccessLevelEnum = "DEVELOPER"
const EnumAccessLevelEnumGUEST EnumAccessLevelEnum = "GUEST"
const EnumAccessLevelEnumMAINTAINER EnumAccessLevelEnum = "MAINTAINER"
const EnumAccessLevelEnumMINIMAL_ACCESS EnumAccessLevelEnum = "MINIMAL_ACCESS"
const EnumAccessLevelEnumNO_ACCESS EnumAccessLevelEnum = "NO_ACCESS"
const EnumAccessLevelEnumOWNER EnumAccessLevelEnum = "OWNER"
const EnumAccessLevelEnumREPORTER EnumAccessLevelEnum = "REPORTER"

type EnumDastTargetTypeEnum string

const EnumDastTargetTypeEnumAPI EnumDastTargetTypeEnum = "API"
const EnumDastTargetTypeEnumWEBSITE EnumDastTargetTypeEnum = "WEBSITE"

type EnumFindingReportsComparerStatus string

const EnumFindingReportsComparerStatusERROR EnumFindingReportsComparerStatus = "ERROR"
const EnumFindingReportsComparerStatusPARSED EnumFindingReportsComparerStatus = "PARSED"
const EnumFindingReportsComparerStatusPARSING EnumFindingReportsComparerStatus = "PARSING"

type EnumShaFormat string

const EnumShaFormatLONG EnumShaFormat = "LONG"
const EnumShaFormatSHORT EnumShaFormat = "SHORT"

type EnumJobArtifactFileType string

const EnumJobArtifactFileTypeACCESSIBILITY EnumJobArtifactFileType = "ACCESSIBILITY"
const EnumJobArtifactFileTypeAPI_FUZZING EnumJobArtifactFileType = "API_FUZZING"
const EnumJobArtifactFileTypeARCHIVE EnumJobArtifactFileType = "ARCHIVE"
const EnumJobArtifactFileTypeBROWSER_PERFORMANCE EnumJobArtifactFileType = "BROWSER_PERFORMANCE"
const EnumJobArtifactFileTypeCLUSTER_APPLICATIONS EnumJobArtifactFileType = "CLUSTER_APPLICATIONS"
const EnumJobArtifactFileTypeCLUSTER_IMAGE_SCANNING EnumJobArtifactFileType = "CLUSTER_IMAGE_SCANNING"
const EnumJobArtifactFileTypeCOBERTURA EnumJobArtifactFileType = "COBERTURA"
const EnumJobArtifactFileTypeCODEQUALITY EnumJobArtifactFileType = "CODEQUALITY"
const EnumJobArtifactFileTypeCONTAINER_SCANNING EnumJobArtifactFileType = "CONTAINER_SCANNING"
const EnumJobArtifactFileTypeCOVERAGE_FUZZING EnumJobArtifactFileType = "COVERAGE_FUZZING"
const EnumJobArtifactFileTypeCYCLONEDX EnumJobArtifactFileType = "CYCLONEDX"
const EnumJobArtifactFileTypeDAST EnumJobArtifactFileType = "DAST"
const EnumJobArtifactFileTypeDEPENDENCY_SCANNING EnumJobArtifactFileType = "DEPENDENCY_SCANNING"
const EnumJobArtifactFileTypeDOTENV EnumJobArtifactFileType = "DOTENV"
const EnumJobArtifactFileTypeJUNIT EnumJobArtifactFileType = "JUNIT"
const EnumJobArtifactFileTypeLICENSE_SCANNING EnumJobArtifactFileType = "LICENSE_SCANNING"
const EnumJobArtifactFileTypeLOAD_PERFORMANCE EnumJobArtifactFileType = "LOAD_PERFORMANCE"
const EnumJobArtifactFileTypeLSIF EnumJobArtifactFileType = "LSIF"
const EnumJobArtifactFileTypeMETADATA EnumJobArtifactFileType = "METADATA"
const EnumJobArtifactFileTypeMETRICS EnumJobArtifactFileType = "METRICS"
const EnumJobArtifactFileTypeMETRICS_REFEREE EnumJobArtifactFileType = "METRICS_REFEREE"
const EnumJobArtifactFileTypeNETWORK_REFEREE EnumJobArtifactFileType = "NETWORK_REFEREE"
const EnumJobArtifactFileTypePERFORMANCE EnumJobArtifactFileType = "PERFORMANCE"
const EnumJobArtifactFileTypeREQUIREMENTS EnumJobArtifactFileType = "REQUIREMENTS"
const EnumJobArtifactFileTypeREQUIREMENTS_V2 EnumJobArtifactFileType = "REQUIREMENTS_V2"
const EnumJobArtifactFileTypeSAST EnumJobArtifactFileType = "SAST"
const EnumJobArtifactFileTypeSECRET_DETECTION EnumJobArtifactFileType = "SECRET_DETECTION"
const EnumJobArtifactFileTypeTERRAFORM EnumJobArtifactFileType = "TERRAFORM"
const EnumJobArtifactFileTypeTRACE EnumJobArtifactFileType = "TRACE"

type EnumPackageManager string

const EnumPackageManagerBUNDLER EnumPackageManager = "BUNDLER"
const EnumPackageManagerCOMPOSER EnumPackageManager = "COMPOSER"
const EnumPackageManagerCONAN EnumPackageManager = "CONAN"
const EnumPackageManagerGO EnumPackageManager = "GO"
const EnumPackageManagerGRADLE EnumPackageManager = "GRADLE"
const EnumPackageManagerMAVEN EnumPackageManager = "MAVEN"
const EnumPackageManagerNPM EnumPackageManager = "NPM"
const EnumPackageManagerNUGET EnumPackageManager = "NUGET"
const EnumPackageManagerPIP EnumPackageManager = "PIP"
const EnumPackageManagerPIPENV EnumPackageManager = "PIPENV"
const EnumPackageManagerPNPM EnumPackageManager = "PNPM"
const EnumPackageManagerSBT EnumPackageManager = "SBT"
const EnumPackageManagerSETUPTOOLS EnumPackageManager = "SETUPTOOLS"
const EnumPackageManagerYARN EnumPackageManager = "YARN"

type EnumPackageStatus string

const EnumPackageStatusDEFAULT EnumPackageStatus = "DEFAULT"
const EnumPackageStatusERROR EnumPackageStatus = "ERROR"
const EnumPackageStatusHIDDEN EnumPackageStatus = "HIDDEN"
const EnumPackageStatusPENDING_DESTRUCTION EnumPackageStatus = "PENDING_DESTRUCTION"
const EnumPackageStatusPROCESSING EnumPackageStatus = "PROCESSING"

type EnumPackagesCleanupKeepDuplicatedPackageFilesEnum string

const EnumPackagesCleanupKeepDuplicatedPackageFilesEnumALL_PACKAGE_FILES EnumPackagesCleanupKeepDuplicatedPackageFilesEnum = "ALL_PACKAGE_FILES"
const EnumPackagesCleanupKeepDuplicatedPackageFilesEnumFIFTY_PACKAGE_FILES EnumPackagesCleanupKeepDuplicatedPackageFilesEnum = "FIFTY_PACKAGE_FILES"
const EnumPackagesCleanupKeepDuplicatedPackageFilesEnumFORTY_PACKAGE_FILES EnumPackagesCleanupKeepDuplicatedPackageFilesEnum = "FORTY_PACKAGE_FILES"
const EnumPackagesCleanupKeepDuplicatedPackageFilesEnumONE_PACKAGE_FILE EnumPackagesCleanupKeepDuplicatedPackageFilesEnum = "ONE_PACKAGE_FILE"
const EnumPackagesCleanupKeepDuplicatedPackageFilesEnumTEN_PACKAGE_FILES EnumPackagesCleanupKeepDuplicatedPackageFilesEnum = "TEN_PACKAGE_FILES"
const EnumPackagesCleanupKeepDuplicatedPackageFilesEnumTHIRTY_PACKAGE_FILES EnumPackagesCleanupKeepDuplicatedPackageFilesEnum = "THIRTY_PACKAGE_FILES"
const EnumPackagesCleanupKeepDuplicatedPackageFilesEnumTWENTY_PACKAGE_FILES EnumPackagesCleanupKeepDuplicatedPackageFilesEnum = "TWENTY_PACKAGE_FILES"

type EnumRegistryState string

const EnumRegistryStateFAILED EnumRegistryState = "FAILED"
const EnumRegistryStatePENDING EnumRegistryState = "PENDING"
const EnumRegistryStateSTARTED EnumRegistryState = "STARTED"
const EnumRegistryStateSYNCED EnumRegistryState = "SYNCED"

type EnumReplicationStateEnum string

const EnumReplicationStateEnumFAILED EnumReplicationStateEnum = "FAILED"
const EnumReplicationStateEnumPENDING EnumReplicationStateEnum = "PENDING"
const EnumReplicationStateEnumSTARTED EnumReplicationStateEnum = "STARTED"
const EnumReplicationStateEnumSYNCED EnumReplicationStateEnum = "SYNCED"

type EnumAlertManagementAlertSort string

const EnumAlertManagementAlertSortCREATED_ASC EnumAlertManagementAlertSort = "CREATED_ASC"
const EnumAlertManagementAlertSortCREATED_DESC EnumAlertManagementAlertSort = "CREATED_DESC"
const EnumAlertManagementAlertSortCREATED_TIME_ASC EnumAlertManagementAlertSort = "CREATED_TIME_ASC"
const EnumAlertManagementAlertSortCREATED_TIME_DESC EnumAlertManagementAlertSort = "CREATED_TIME_DESC"
const EnumAlertManagementAlertSortENDED_AT_ASC EnumAlertManagementAlertSort = "ENDED_AT_ASC"
const EnumAlertManagementAlertSortENDED_AT_DESC EnumAlertManagementAlertSort = "ENDED_AT_DESC"
const EnumAlertManagementAlertSortEVENT_COUNT_ASC EnumAlertManagementAlertSort = "EVENT_COUNT_ASC"
const EnumAlertManagementAlertSortEVENT_COUNT_DESC EnumAlertManagementAlertSort = "EVENT_COUNT_DESC"
const EnumAlertManagementAlertSortSEVERITY_ASC EnumAlertManagementAlertSort = "SEVERITY_ASC"
const EnumAlertManagementAlertSortSEVERITY_DESC EnumAlertManagementAlertSort = "SEVERITY_DESC"
const EnumAlertManagementAlertSortSTARTED_AT_ASC EnumAlertManagementAlertSort = "STARTED_AT_ASC"
const EnumAlertManagementAlertSortSTARTED_AT_DESC EnumAlertManagementAlertSort = "STARTED_AT_DESC"
const EnumAlertManagementAlertSortSTATUS_ASC EnumAlertManagementAlertSort = "STATUS_ASC"
const EnumAlertManagementAlertSortSTATUS_DESC EnumAlertManagementAlertSort = "STATUS_DESC"
const EnumAlertManagementAlertSortUPDATED_ASC EnumAlertManagementAlertSort = "UPDATED_ASC"
const EnumAlertManagementAlertSortUPDATED_DESC EnumAlertManagementAlertSort = "UPDATED_DESC"
const EnumAlertManagementAlertSortUPDATED_TIME_ASC EnumAlertManagementAlertSort = "UPDATED_TIME_ASC"
const EnumAlertManagementAlertSortUPDATED_TIME_DESC EnumAlertManagementAlertSort = "UPDATED_TIME_DESC"
const EnumAlertManagementAlertSortcreated_asc EnumAlertManagementAlertSort = "created_asc"
const EnumAlertManagementAlertSortcreated_desc EnumAlertManagementAlertSort = "created_desc"
const EnumAlertManagementAlertSortupdated_asc EnumAlertManagementAlertSort = "updated_asc"
const EnumAlertManagementAlertSortupdated_desc EnumAlertManagementAlertSort = "updated_desc"

type EnumEpicState string

const EnumEpicStateall EnumEpicState = "all"
const EnumEpicStateclosed EnumEpicState = "closed"
const EnumEpicStateopened EnumEpicState = "opened"

type EnumMergeRequestReviewState string

const EnumMergeRequestReviewStateREVIEWED EnumMergeRequestReviewState = "REVIEWED"
const EnumMergeRequestReviewStateUNREVIEWED EnumMergeRequestReviewState = "UNREVIEWED"

type EnumContainerExpirationPolicyOlderThanEnum string

const EnumContainerExpirationPolicyOlderThanEnumFOURTEEN_DAYS EnumContainerExpirationPolicyOlderThanEnum = "FOURTEEN_DAYS"
const EnumContainerExpirationPolicyOlderThanEnumNINETY_DAYS EnumContainerExpirationPolicyOlderThanEnum = "NINETY_DAYS"
const EnumContainerExpirationPolicyOlderThanEnumSEVEN_DAYS EnumContainerExpirationPolicyOlderThanEnum = "SEVEN_DAYS"
const EnumContainerExpirationPolicyOlderThanEnumSIXTY_DAYS EnumContainerExpirationPolicyOlderThanEnum = "SIXTY_DAYS"
const EnumContainerExpirationPolicyOlderThanEnumTHIRTY_DAYS EnumContainerExpirationPolicyOlderThanEnum = "THIRTY_DAYS"

type EnumEntryType string

const EnumEntryTypeblob EnumEntryType = "blob"
const EnumEntryTypecommit EnumEntryType = "commit"
const EnumEntryTypetree EnumEntryType = "tree"

type EnumEpicSort string

const EnumEpicSortCREATED_AT_ASC EnumEpicSort = "CREATED_AT_ASC"
const EnumEpicSortCREATED_AT_DESC EnumEpicSort = "CREATED_AT_DESC"
const EnumEpicSortEND_DATE_ASC EnumEpicSort = "END_DATE_ASC"
const EnumEpicSortEND_DATE_DESC EnumEpicSort = "END_DATE_DESC"
const EnumEpicSortSTART_DATE_ASC EnumEpicSort = "START_DATE_ASC"
const EnumEpicSortSTART_DATE_DESC EnumEpicSort = "START_DATE_DESC"
const EnumEpicSortTITLE_ASC EnumEpicSort = "TITLE_ASC"
const EnumEpicSortTITLE_DESC EnumEpicSort = "TITLE_DESC"
const EnumEpicSortUPDATED_AT_ASC EnumEpicSort = "UPDATED_AT_ASC"
const EnumEpicSortUPDATED_AT_DESC EnumEpicSort = "UPDATED_AT_DESC"
const EnumEpicSortend_date_asc EnumEpicSort = "end_date_asc"
const EnumEpicSortend_date_desc EnumEpicSort = "end_date_desc"
const EnumEpicSortstart_date_asc EnumEpicSort = "start_date_asc"
const EnumEpicSortstart_date_desc EnumEpicSort = "start_date_desc"

type EnumVisibilityPipelineIdType string

const EnumVisibilityPipelineIdTypeID EnumVisibilityPipelineIdType = "ID"
const EnumVisibilityPipelineIdTypeIID EnumVisibilityPipelineIdType = "IID"

type EnumVulnerabilityIssueLinkType string

const EnumVulnerabilityIssueLinkTypeCREATED EnumVulnerabilityIssueLinkType = "CREATED"
const EnumVulnerabilityIssueLinkTypeRELATED EnumVulnerabilityIssueLinkType = "RELATED"

type EnumApiFuzzingScanMode string

const EnumApiFuzzingScanModeHAR EnumApiFuzzingScanMode = "HAR"
const EnumApiFuzzingScanModeOPENAPI EnumApiFuzzingScanMode = "OPENAPI"
const EnumApiFuzzingScanModePOSTMAN EnumApiFuzzingScanMode = "POSTMAN"

type EnumAssigneeWildcardId string

const EnumAssigneeWildcardIdANY EnumAssigneeWildcardId = "ANY"
const EnumAssigneeWildcardIdNONE EnumAssigneeWildcardId = "NONE"

type EnumAvailableExportFields string

const EnumAvailableExportFieldsAUTHOR EnumAvailableExportFields = "AUTHOR"
const EnumAvailableExportFieldsAUTHOR_USERNAME EnumAvailableExportFields = "AUTHOR_USERNAME"
const EnumAvailableExportFieldsCREATED_AT EnumAvailableExportFields = "CREATED_AT"
const EnumAvailableExportFieldsDESCRIPTION EnumAvailableExportFields = "DESCRIPTION"
const EnumAvailableExportFieldsID EnumAvailableExportFields = "ID"
const EnumAvailableExportFieldsTITLE EnumAvailableExportFields = "TITLE"
const EnumAvailableExportFieldsTYPE EnumAvailableExportFields = "TYPE"

type EnumVulnerabilitySort string

const EnumVulnerabilitySortdetected_asc EnumVulnerabilitySort = "detected_asc"
const EnumVulnerabilitySortdetected_desc EnumVulnerabilitySort = "detected_desc"
const EnumVulnerabilitySortseverity_asc EnumVulnerabilitySort = "severity_asc"
const EnumVulnerabilitySortseverity_desc EnumVulnerabilitySort = "severity_desc"

type EnumProjectMemberRelation string

const EnumProjectMemberRelationDESCENDANTS EnumProjectMemberRelation = "DESCENDANTS"
const EnumProjectMemberRelationDIRECT EnumProjectMemberRelation = "DIRECT"
const EnumProjectMemberRelationINHERITED EnumProjectMemberRelation = "INHERITED"
const EnumProjectMemberRelationINVITED_GROUPS EnumProjectMemberRelation = "INVITED_GROUPS"
const EnumProjectMemberRelationSHARED_INTO_ANCESTORS EnumProjectMemberRelation = "SHARED_INTO_ANCESTORS"

type EnumRequirementState string

const EnumRequirementStateARCHIVED EnumRequirementState = "ARCHIVED"
const EnumRequirementStateOPENED EnumRequirementState = "OPENED"

type EnumVulnerabilityState string

const EnumVulnerabilityStateCONFIRMED EnumVulnerabilityState = "CONFIRMED"
const EnumVulnerabilityStateDETECTED EnumVulnerabilityState = "DETECTED"
const EnumVulnerabilityStateDISMISSED EnumVulnerabilityState = "DISMISSED"
const EnumVulnerabilityStateRESOLVED EnumVulnerabilityState = "RESOLVED"

type EnumAlertManagementIntegrationType string

const EnumAlertManagementIntegrationTypeHTTP EnumAlertManagementIntegrationType = "HTTP"
const EnumAlertManagementIntegrationTypePROMETHEUS EnumAlertManagementIntegrationType = "PROMETHEUS"

type EnumComplianceViolationReason string

const EnumComplianceViolationReasonAPPROVED_BY_COMMITTER EnumComplianceViolationReason = "APPROVED_BY_COMMITTER"
const EnumComplianceViolationReasonAPPROVED_BY_INSUFFICIENT_USERS EnumComplianceViolationReason = "APPROVED_BY_INSUFFICIENT_USERS"
const EnumComplianceViolationReasonAPPROVED_BY_MERGE_REQUEST_AUTHOR EnumComplianceViolationReason = "APPROVED_BY_MERGE_REQUEST_AUTHOR"

type EnumListLimitMetric string

const EnumListLimitMetricall_metrics EnumListLimitMetric = "all_metrics"
const EnumListLimitMetricissue_count EnumListLimitMetric = "issue_count"
const EnumListLimitMetricissue_weights EnumListLimitMetric = "issue_weights"

type EnumSecurityPolicyRelationType string

const EnumSecurityPolicyRelationTypeDIRECT EnumSecurityPolicyRelationType = "DIRECT"
const EnumSecurityPolicyRelationTypeINHERITED EnumSecurityPolicyRelationType = "INHERITED"
const EnumSecurityPolicyRelationTypeINHERITED_ONLY EnumSecurityPolicyRelationType = "INHERITED_ONLY"

type EnumSecurityScannerType string

const EnumSecurityScannerTypeAPI_FUZZING EnumSecurityScannerType = "API_FUZZING"
const EnumSecurityScannerTypeBREACH_AND_ATTACK_SIMULATION EnumSecurityScannerType = "BREACH_AND_ATTACK_SIMULATION"
const EnumSecurityScannerTypeCLUSTER_IMAGE_SCANNING EnumSecurityScannerType = "CLUSTER_IMAGE_SCANNING"
const EnumSecurityScannerTypeCONTAINER_SCANNING EnumSecurityScannerType = "CONTAINER_SCANNING"
const EnumSecurityScannerTypeCOVERAGE_FUZZING EnumSecurityScannerType = "COVERAGE_FUZZING"
const EnumSecurityScannerTypeDAST EnumSecurityScannerType = "DAST"
const EnumSecurityScannerTypeDEPENDENCY_SCANNING EnumSecurityScannerType = "DEPENDENCY_SCANNING"
const EnumSecurityScannerTypeSAST EnumSecurityScannerType = "SAST"
const EnumSecurityScannerTypeSAST_IAC EnumSecurityScannerType = "SAST_IAC"
const EnumSecurityScannerTypeSECRET_DETECTION EnumSecurityScannerType = "SECRET_DETECTION"

type EnumTimelogSort string

const EnumTimelogSortCREATED_ASC EnumTimelogSort = "CREATED_ASC"
const EnumTimelogSortCREATED_DESC EnumTimelogSort = "CREATED_DESC"
const EnumTimelogSortSPENT_AT_ASC EnumTimelogSort = "SPENT_AT_ASC"
const EnumTimelogSortSPENT_AT_DESC EnumTimelogSort = "SPENT_AT_DESC"
const EnumTimelogSortTIME_SPENT_ASC EnumTimelogSort = "TIME_SPENT_ASC"
const EnumTimelogSortTIME_SPENT_DESC EnumTimelogSort = "TIME_SPENT_DESC"
const EnumTimelogSortUPDATED_ASC EnumTimelogSort = "UPDATED_ASC"
const EnumTimelogSortUPDATED_DESC EnumTimelogSort = "UPDATED_DESC"
const EnumTimelogSortcreated_asc EnumTimelogSort = "created_asc"
const EnumTimelogSortcreated_desc EnumTimelogSort = "created_desc"
const EnumTimelogSortupdated_asc EnumTimelogSort = "updated_asc"
const EnumTimelogSortupdated_desc EnumTimelogSort = "updated_desc"

type EnumAgentTokenStatus string

const EnumAgentTokenStatusACTIVE EnumAgentTokenStatus = "ACTIVE"
const EnumAgentTokenStatusREVOKED EnumAgentTokenStatus = "REVOKED"

type EnumCiJobTokenScopeDirection string

const EnumCiJobTokenScopeDirectionINBOUND EnumCiJobTokenScopeDirection = "INBOUND"
const EnumCiJobTokenScopeDirectionOUTBOUND EnumCiJobTokenScopeDirection = "OUTBOUND"

type EnumContainerRepositoryCleanupStatus string

const EnumContainerRepositoryCleanupStatusONGOING EnumContainerRepositoryCleanupStatus = "ONGOING"
const EnumContainerRepositoryCleanupStatusSCHEDULED EnumContainerRepositoryCleanupStatus = "SCHEDULED"
const EnumContainerRepositoryCleanupStatusUNFINISHED EnumContainerRepositoryCleanupStatus = "UNFINISHED"
const EnumContainerRepositoryCleanupStatusUNSCHEDULED EnumContainerRepositoryCleanupStatus = "UNSCHEDULED"

type EnumGroupPermission string

const EnumGroupPermissionCREATE_PROJECTS EnumGroupPermission = "CREATE_PROJECTS"
const EnumGroupPermissionIMPORT_PROJECTS EnumGroupPermission = "IMPORT_PROJECTS"
const EnumGroupPermissionTRANSFER_PROJECTS EnumGroupPermission = "TRANSFER_PROJECTS"

type EnumNetworkPolicyKind string

const EnumNetworkPolicyKindCiliumNetworkPolicy EnumNetworkPolicyKind = "CiliumNetworkPolicy"
const EnumNetworkPolicyKindNetworkPolicy EnumNetworkPolicyKind = "NetworkPolicy"

type EnumTodoStateEnum string

const EnumTodoStateEnumdone EnumTodoStateEnum = "done"
const EnumTodoStateEnumpending EnumTodoStateEnum = "pending"

type EnumTodoTargetEnum string

const EnumTodoTargetEnumALERT EnumTodoTargetEnum = "ALERT"
const EnumTodoTargetEnumCOMMIT EnumTodoTargetEnum = "COMMIT"
const EnumTodoTargetEnumDESIGN EnumTodoTargetEnum = "DESIGN"
const EnumTodoTargetEnumEPIC EnumTodoTargetEnum = "EPIC"
const EnumTodoTargetEnumISSUE EnumTodoTargetEnum = "ISSUE"
const EnumTodoTargetEnumMERGEREQUEST EnumTodoTargetEnum = "MERGEREQUEST"
const EnumTodoTargetEnumWORKITEM EnumTodoTargetEnum = "WORKITEM"

type EnumComplianceStandardsAdherenceCheckName string

const EnumComplianceStandardsAdherenceCheckNamePREVENT_APPROVAL_BY_MERGE_REQUEST_AUTHOR EnumComplianceStandardsAdherenceCheckName = "PREVENT_APPROVAL_BY_MERGE_REQUEST_AUTHOR"

type EnumConanMetadatumFileTypeEnum string

const EnumConanMetadatumFileTypeEnumPACKAGE_FILE EnumConanMetadatumFileTypeEnum = "PACKAGE_FILE"
const EnumConanMetadatumFileTypeEnumRECIPE_FILE EnumConanMetadatumFileTypeEnum = "RECIPE_FILE"

type EnumContainerRepositorySort string

const EnumContainerRepositorySortCREATED_ASC EnumContainerRepositorySort = "CREATED_ASC"
const EnumContainerRepositorySortCREATED_DESC EnumContainerRepositorySort = "CREATED_DESC"
const EnumContainerRepositorySortNAME_ASC EnumContainerRepositorySort = "NAME_ASC"
const EnumContainerRepositorySortNAME_DESC EnumContainerRepositorySort = "NAME_DESC"
const EnumContainerRepositorySortUPDATED_ASC EnumContainerRepositorySort = "UPDATED_ASC"
const EnumContainerRepositorySortUPDATED_DESC EnumContainerRepositorySort = "UPDATED_DESC"
const EnumContainerRepositorySortcreated_asc EnumContainerRepositorySort = "created_asc"
const EnumContainerRepositorySortcreated_desc EnumContainerRepositorySort = "created_desc"
const EnumContainerRepositorySortupdated_asc EnumContainerRepositorySort = "updated_asc"
const EnumContainerRepositorySortupdated_desc EnumContainerRepositorySort = "updated_desc"

type EnumNegatedIterationWildcardId string

const EnumNegatedIterationWildcardIdCURRENT EnumNegatedIterationWildcardId = "CURRENT"

type EnumVerificationStateEnum string

const EnumVerificationStateEnumDISABLED EnumVerificationStateEnum = "DISABLED"
const EnumVerificationStateEnumFAILED EnumVerificationStateEnum = "FAILED"
const EnumVerificationStateEnumPENDING EnumVerificationStateEnum = "PENDING"
const EnumVerificationStateEnumSTARTED EnumVerificationStateEnum = "STARTED"
const EnumVerificationStateEnumSUCCEEDED EnumVerificationStateEnum = "SUCCEEDED"

type EnumGroupMemberRelation string

const EnumGroupMemberRelationDESCENDANTS EnumGroupMemberRelation = "DESCENDANTS"
const EnumGroupMemberRelationDIRECT EnumGroupMemberRelation = "DIRECT"
const EnumGroupMemberRelationINHERITED EnumGroupMemberRelation = "INHERITED"
const EnumGroupMemberRelationSHARED_FROM_GROUPS EnumGroupMemberRelation = "SHARED_FROM_GROUPS"

type EnumHealthStatus string

const EnumHealthStatusatRisk EnumHealthStatus = "atRisk"
const EnumHealthStatusneedsAttention EnumHealthStatus = "needsAttention"
const EnumHealthStatusonTrack EnumHealthStatus = "onTrack"

type EnumMoveType string

const EnumMoveTypeafter EnumMoveType = "after"
const EnumMoveTypebefore EnumMoveType = "before"

type EnumIssuableState string

const EnumIssuableStateall EnumIssuableState = "all"
const EnumIssuableStateclosed EnumIssuableState = "closed"
const EnumIssuableStatelocked EnumIssuableState = "locked"
const EnumIssuableStateopened EnumIssuableState = "opened"

type EnumMemberSort string

const EnumMemberSortACCESS_LEVEL_ASC EnumMemberSort = "ACCESS_LEVEL_ASC"
const EnumMemberSortACCESS_LEVEL_DESC EnumMemberSort = "ACCESS_LEVEL_DESC"
const EnumMemberSortCREATED_ASC EnumMemberSort = "CREATED_ASC"
const EnumMemberSortCREATED_DESC EnumMemberSort = "CREATED_DESC"
const EnumMemberSortUPDATED_ASC EnumMemberSort = "UPDATED_ASC"
const EnumMemberSortUPDATED_DESC EnumMemberSort = "UPDATED_DESC"
const EnumMemberSortUSER_FULL_NAME_ASC EnumMemberSort = "USER_FULL_NAME_ASC"
const EnumMemberSortUSER_FULL_NAME_DESC EnumMemberSort = "USER_FULL_NAME_DESC"
const EnumMemberSortcreated_asc EnumMemberSort = "created_asc"
const EnumMemberSortcreated_desc EnumMemberSort = "created_desc"
const EnumMemberSortupdated_asc EnumMemberSort = "updated_asc"
const EnumMemberSortupdated_desc EnumMemberSort = "updated_desc"

type EnumOrganizationSort string

const EnumOrganizationSortCREATED_ASC EnumOrganizationSort = "CREATED_ASC"
const EnumOrganizationSortCREATED_DESC EnumOrganizationSort = "CREATED_DESC"
const EnumOrganizationSortDEFAULT_RATE_ASC EnumOrganizationSort = "DEFAULT_RATE_ASC"
const EnumOrganizationSortDEFAULT_RATE_DESC EnumOrganizationSort = "DEFAULT_RATE_DESC"
const EnumOrganizationSortDESCRIPTION_ASC EnumOrganizationSort = "DESCRIPTION_ASC"
const EnumOrganizationSortDESCRIPTION_DESC EnumOrganizationSort = "DESCRIPTION_DESC"
const EnumOrganizationSortNAME_ASC EnumOrganizationSort = "NAME_ASC"
const EnumOrganizationSortNAME_DESC EnumOrganizationSort = "NAME_DESC"
const EnumOrganizationSortUPDATED_ASC EnumOrganizationSort = "UPDATED_ASC"
const EnumOrganizationSortUPDATED_DESC EnumOrganizationSort = "UPDATED_DESC"
const EnumOrganizationSortcreated_asc EnumOrganizationSort = "created_asc"
const EnumOrganizationSortcreated_desc EnumOrganizationSort = "created_desc"
const EnumOrganizationSortupdated_asc EnumOrganizationSort = "updated_asc"
const EnumOrganizationSortupdated_desc EnumOrganizationSort = "updated_desc"

type EnumScanStatus string

const EnumScanStatusCREATED EnumScanStatus = "CREATED"
const EnumScanStatusJOB_FAILED EnumScanStatus = "JOB_FAILED"
const EnumScanStatusPREPARATION_FAILED EnumScanStatus = "PREPARATION_FAILED"
const EnumScanStatusPREPARING EnumScanStatus = "PREPARING"
const EnumScanStatusPURGED EnumScanStatus = "PURGED"
const EnumScanStatusREPORT_ERROR EnumScanStatus = "REPORT_ERROR"
const EnumScanStatusSUCCEEDED EnumScanStatus = "SUCCEEDED"

type EnumCiRunnerStatus string

const EnumCiRunnerStatusACTIVE EnumCiRunnerStatus = "ACTIVE"
const EnumCiRunnerStatusNEVER_CONTACTED EnumCiRunnerStatus = "NEVER_CONTACTED"
const EnumCiRunnerStatusOFFLINE EnumCiRunnerStatus = "OFFLINE"
const EnumCiRunnerStatusONLINE EnumCiRunnerStatus = "ONLINE"
const EnumCiRunnerStatusPAUSED EnumCiRunnerStatus = "PAUSED"
const EnumCiRunnerStatusSTALE EnumCiRunnerStatus = "STALE"

type EnumIssuableResourceLinkType string

const EnumIssuableResourceLinkTypegeneral EnumIssuableResourceLinkType = "general"
const EnumIssuableResourceLinkTypepagerduty EnumIssuableResourceLinkType = "pagerduty"
const EnumIssuableResourceLinkTypeslack EnumIssuableResourceLinkType = "slack"
const EnumIssuableResourceLinkTypezoom EnumIssuableResourceLinkType = "zoom"

type EnumIssuableSeverity string

const EnumIssuableSeverityCRITICAL EnumIssuableSeverity = "CRITICAL"
const EnumIssuableSeverityHIGH EnumIssuableSeverity = "HIGH"
const EnumIssuableSeverityLOW EnumIssuableSeverity = "LOW"
const EnumIssuableSeverityMEDIUM EnumIssuableSeverity = "MEDIUM"
const EnumIssuableSeverityUNKNOWN EnumIssuableSeverity = "UNKNOWN"

type EnumCustomerRelationsOrganizationState string

const EnumCustomerRelationsOrganizationStateactive EnumCustomerRelationsOrganizationState = "active"
const EnumCustomerRelationsOrganizationStateall EnumCustomerRelationsOrganizationState = "all"
const EnumCustomerRelationsOrganizationStateinactive EnumCustomerRelationsOrganizationState = "inactive"

type EnumDependencySort string

const EnumDependencySortNAME_ASC EnumDependencySort = "NAME_ASC"
const EnumDependencySortNAME_DESC EnumDependencySort = "NAME_DESC"
const EnumDependencySortPACKAGER_ASC EnumDependencySort = "PACKAGER_ASC"
const EnumDependencySortPACKAGER_DESC EnumDependencySort = "PACKAGER_DESC"

type EnumMemberAccessLevel string

const EnumMemberAccessLevelDEVELOPER EnumMemberAccessLevel = "DEVELOPER"
const EnumMemberAccessLevelGUEST EnumMemberAccessLevel = "GUEST"
const EnumMemberAccessLevelMAINTAINER EnumMemberAccessLevel = "MAINTAINER"
const EnumMemberAccessLevelMINIMAL_ACCESS EnumMemberAccessLevel = "MINIMAL_ACCESS"
const EnumMemberAccessLevelOWNER EnumMemberAccessLevel = "OWNER"
const EnumMemberAccessLevelREPORTER EnumMemberAccessLevel = "REPORTER"

type EnumPipelineScheduleStatus string

const EnumPipelineScheduleStatusACTIVE EnumPipelineScheduleStatus = "ACTIVE"
const EnumPipelineScheduleStatusINACTIVE EnumPipelineScheduleStatus = "INACTIVE"

type EnumCiCatalogResourceSort string

const EnumCiCatalogResourceSortCREATED_ASC EnumCiCatalogResourceSort = "CREATED_ASC"
const EnumCiCatalogResourceSortCREATED_DESC EnumCiCatalogResourceSort = "CREATED_DESC"
const EnumCiCatalogResourceSortNAME_ASC EnumCiCatalogResourceSort = "NAME_ASC"
const EnumCiCatalogResourceSortNAME_DESC EnumCiCatalogResourceSort = "NAME_DESC"
const EnumCiCatalogResourceSortUPDATED_ASC EnumCiCatalogResourceSort = "UPDATED_ASC"
const EnumCiCatalogResourceSortUPDATED_DESC EnumCiCatalogResourceSort = "UPDATED_DESC"
const EnumCiCatalogResourceSortcreated_asc EnumCiCatalogResourceSort = "created_asc"
const EnumCiCatalogResourceSortcreated_desc EnumCiCatalogResourceSort = "created_desc"
const EnumCiCatalogResourceSortupdated_asc EnumCiCatalogResourceSort = "updated_asc"
const EnumCiCatalogResourceSortupdated_desc EnumCiCatalogResourceSort = "updated_desc"

type EnumCiJobKind string

const EnumCiJobKindBRIDGE EnumCiJobKind = "BRIDGE"
const EnumCiJobKindBUILD EnumCiJobKind = "BUILD"

type EnumComplianceStandardsAdherenceStatus string

const EnumComplianceStandardsAdherenceStatusFAIL EnumComplianceStandardsAdherenceStatus = "FAIL"
const EnumComplianceStandardsAdherenceStatusSUCCESS EnumComplianceStandardsAdherenceStatus = "SUCCESS"

type EnumContainerRepositoryStatus string

const EnumContainerRepositoryStatusDELETE_FAILED EnumContainerRepositoryStatus = "DELETE_FAILED"
const EnumContainerRepositoryStatusDELETE_ONGOING EnumContainerRepositoryStatus = "DELETE_ONGOING"
const EnumContainerRepositoryStatusDELETE_SCHEDULED EnumContainerRepositoryStatus = "DELETE_SCHEDULED"

type EnumDeploymentStatus string

const EnumDeploymentStatusBLOCKED EnumDeploymentStatus = "BLOCKED"
const EnumDeploymentStatusCANCELED EnumDeploymentStatus = "CANCELED"
const EnumDeploymentStatusCREATED EnumDeploymentStatus = "CREATED"
const EnumDeploymentStatusFAILED EnumDeploymentStatus = "FAILED"
const EnumDeploymentStatusRUNNING EnumDeploymentStatus = "RUNNING"
const EnumDeploymentStatusSKIPPED EnumDeploymentStatus = "SKIPPED"
const EnumDeploymentStatusSUCCESS EnumDeploymentStatus = "SUCCESS"

type EnumDeploymentTier string

const EnumDeploymentTierDEVELOPMENT EnumDeploymentTier = "DEVELOPMENT"
const EnumDeploymentTierOTHER EnumDeploymentTier = "OTHER"
const EnumDeploymentTierPRODUCTION EnumDeploymentTier = "PRODUCTION"
const EnumDeploymentTierSTAGING EnumDeploymentTier = "STAGING"
const EnumDeploymentTierTESTING EnumDeploymentTier = "TESTING"

type EnumDetailedMergeStatus string

const EnumDetailedMergeStatusBLOCKED_STATUS EnumDetailedMergeStatus = "BLOCKED_STATUS"
const EnumDetailedMergeStatusBROKEN_STATUS EnumDetailedMergeStatus = "BROKEN_STATUS"
const EnumDetailedMergeStatusCHECKING EnumDetailedMergeStatus = "CHECKING"
const EnumDetailedMergeStatusCI_MUST_PASS EnumDetailedMergeStatus = "CI_MUST_PASS"
const EnumDetailedMergeStatusCI_STILL_RUNNING EnumDetailedMergeStatus = "CI_STILL_RUNNING"
const EnumDetailedMergeStatusDISCUSSIONS_NOT_RESOLVED EnumDetailedMergeStatus = "DISCUSSIONS_NOT_RESOLVED"
const EnumDetailedMergeStatusDRAFT_STATUS EnumDetailedMergeStatus = "DRAFT_STATUS"
const EnumDetailedMergeStatusEXTERNAL_STATUS_CHECKS EnumDetailedMergeStatus = "EXTERNAL_STATUS_CHECKS"
const EnumDetailedMergeStatusMERGEABLE EnumDetailedMergeStatus = "MERGEABLE"
const EnumDetailedMergeStatusNOT_APPROVED EnumDetailedMergeStatus = "NOT_APPROVED"
const EnumDetailedMergeStatusNOT_OPEN EnumDetailedMergeStatus = "NOT_OPEN"
const EnumDetailedMergeStatusPOLICIES_DENIED EnumDetailedMergeStatus = "POLICIES_DENIED"
const EnumDetailedMergeStatusPREPARING EnumDetailedMergeStatus = "PREPARING"
const EnumDetailedMergeStatusUNCHECKED EnumDetailedMergeStatus = "UNCHECKED"

type EnumForecastStatus string

const EnumForecastStatusREADY EnumForecastStatus = "READY"
const EnumForecastStatusUNAVAILABLE EnumForecastStatus = "UNAVAILABLE"

type EnumAlertManagementDomainFilter string

const EnumAlertManagementDomainFilteroperations EnumAlertManagementDomainFilter = "operations"
const EnumAlertManagementDomainFilterthreat_monitoring EnumAlertManagementDomainFilter = "threat_monitoring"

type EnumCiVariableType string

const EnumCiVariableTypeENV_VAR EnumCiVariableType = "ENV_VAR"
const EnumCiVariableTypeFILE EnumCiVariableType = "FILE"

type EnumContainerExpirationPolicyKeepEnum string

const EnumContainerExpirationPolicyKeepEnumFIFTY_TAGS EnumContainerExpirationPolicyKeepEnum = "FIFTY_TAGS"
const EnumContainerExpirationPolicyKeepEnumFIVE_TAGS EnumContainerExpirationPolicyKeepEnum = "FIVE_TAGS"
const EnumContainerExpirationPolicyKeepEnumONE_HUNDRED_TAGS EnumContainerExpirationPolicyKeepEnum = "ONE_HUNDRED_TAGS"
const EnumContainerExpirationPolicyKeepEnumONE_TAG EnumContainerExpirationPolicyKeepEnum = "ONE_TAG"
const EnumContainerExpirationPolicyKeepEnumTEN_TAGS EnumContainerExpirationPolicyKeepEnum = "TEN_TAGS"
const EnumContainerExpirationPolicyKeepEnumTWENTY_FIVE_TAGS EnumContainerExpirationPolicyKeepEnum = "TWENTY_FIVE_TAGS"

type EnumMemberAccessLevelName string

const EnumMemberAccessLevelNameDEVELOPER EnumMemberAccessLevelName = "DEVELOPER"
const EnumMemberAccessLevelNameGUEST EnumMemberAccessLevelName = "GUEST"
const EnumMemberAccessLevelNameMAINTAINER EnumMemberAccessLevelName = "MAINTAINER"
const EnumMemberAccessLevelNameOWNER EnumMemberAccessLevelName = "OWNER"
const EnumMemberAccessLevelNameREPORTER EnumMemberAccessLevelName = "REPORTER"

type EnumPipelineStatusEnum string

const EnumPipelineStatusEnumCANCELED EnumPipelineStatusEnum = "CANCELED"
const EnumPipelineStatusEnumCREATED EnumPipelineStatusEnum = "CREATED"
const EnumPipelineStatusEnumFAILED EnumPipelineStatusEnum = "FAILED"
const EnumPipelineStatusEnumMANUAL EnumPipelineStatusEnum = "MANUAL"
const EnumPipelineStatusEnumPENDING EnumPipelineStatusEnum = "PENDING"
const EnumPipelineStatusEnumPREPARING EnumPipelineStatusEnum = "PREPARING"
const EnumPipelineStatusEnumRUNNING EnumPipelineStatusEnum = "RUNNING"
const EnumPipelineStatusEnumSCHEDULED EnumPipelineStatusEnum = "SCHEDULED"
const EnumPipelineStatusEnumSKIPPED EnumPipelineStatusEnum = "SKIPPED"
const EnumPipelineStatusEnumSUCCESS EnumPipelineStatusEnum = "SUCCESS"
const EnumPipelineStatusEnumWAITING_FOR_RESOURCE EnumPipelineStatusEnum = "WAITING_FOR_RESOURCE"

type EnumTestCaseStatus string

const EnumTestCaseStatuserror EnumTestCaseStatus = "error"
const EnumTestCaseStatusfailed EnumTestCaseStatus = "failed"
const EnumTestCaseStatusskipped EnumTestCaseStatus = "skipped"
const EnumTestCaseStatussuccess EnumTestCaseStatus = "success"

type EnumIssueSort string

const EnumIssueSortBLOCKING_ISSUES_ASC EnumIssueSort = "BLOCKING_ISSUES_ASC"
const EnumIssueSortBLOCKING_ISSUES_DESC EnumIssueSort = "BLOCKING_ISSUES_DESC"
const EnumIssueSortCLOSED_AT_ASC EnumIssueSort = "CLOSED_AT_ASC"
const EnumIssueSortCLOSED_AT_DESC EnumIssueSort = "CLOSED_AT_DESC"
const EnumIssueSortCREATED_ASC EnumIssueSort = "CREATED_ASC"
const EnumIssueSortCREATED_DESC EnumIssueSort = "CREATED_DESC"
const EnumIssueSortDUE_DATE_ASC EnumIssueSort = "DUE_DATE_ASC"
const EnumIssueSortDUE_DATE_DESC EnumIssueSort = "DUE_DATE_DESC"
const EnumIssueSortESCALATION_STATUS_ASC EnumIssueSort = "ESCALATION_STATUS_ASC"
const EnumIssueSortESCALATION_STATUS_DESC EnumIssueSort = "ESCALATION_STATUS_DESC"
const EnumIssueSortHEALTH_STATUS_ASC EnumIssueSort = "HEALTH_STATUS_ASC"
const EnumIssueSortHEALTH_STATUS_DESC EnumIssueSort = "HEALTH_STATUS_DESC"
const EnumIssueSortLABEL_PRIORITY_ASC EnumIssueSort = "LABEL_PRIORITY_ASC"
const EnumIssueSortLABEL_PRIORITY_DESC EnumIssueSort = "LABEL_PRIORITY_DESC"
const EnumIssueSortMILESTONE_DUE_ASC EnumIssueSort = "MILESTONE_DUE_ASC"
const EnumIssueSortMILESTONE_DUE_DESC EnumIssueSort = "MILESTONE_DUE_DESC"
const EnumIssueSortPOPULARITY_ASC EnumIssueSort = "POPULARITY_ASC"
const EnumIssueSortPOPULARITY_DESC EnumIssueSort = "POPULARITY_DESC"
const EnumIssueSortPRIORITY_ASC EnumIssueSort = "PRIORITY_ASC"
const EnumIssueSortPRIORITY_DESC EnumIssueSort = "PRIORITY_DESC"
const EnumIssueSortPUBLISHED_ASC EnumIssueSort = "PUBLISHED_ASC"
const EnumIssueSortPUBLISHED_DESC EnumIssueSort = "PUBLISHED_DESC"
const EnumIssueSortRELATIVE_POSITION_ASC EnumIssueSort = "RELATIVE_POSITION_ASC"
const EnumIssueSortSEVERITY_ASC EnumIssueSort = "SEVERITY_ASC"
const EnumIssueSortSEVERITY_DESC EnumIssueSort = "SEVERITY_DESC"
const EnumIssueSortSLA_DUE_AT_ASC EnumIssueSort = "SLA_DUE_AT_ASC"
const EnumIssueSortSLA_DUE_AT_DESC EnumIssueSort = "SLA_DUE_AT_DESC"
const EnumIssueSortTITLE_ASC EnumIssueSort = "TITLE_ASC"
const EnumIssueSortTITLE_DESC EnumIssueSort = "TITLE_DESC"
const EnumIssueSortUPDATED_ASC EnumIssueSort = "UPDATED_ASC"
const EnumIssueSortUPDATED_DESC EnumIssueSort = "UPDATED_DESC"
const EnumIssueSortWEIGHT_ASC EnumIssueSort = "WEIGHT_ASC"
const EnumIssueSortWEIGHT_DESC EnumIssueSort = "WEIGHT_DESC"
const EnumIssueSortcreated_asc EnumIssueSort = "created_asc"
const EnumIssueSortcreated_desc EnumIssueSort = "created_desc"
const EnumIssueSortupdated_asc EnumIssueSort = "updated_asc"
const EnumIssueSortupdated_desc EnumIssueSort = "updated_desc"

type EnumMergeRequestSort string

const EnumMergeRequestSortCLOSED_AT_ASC EnumMergeRequestSort = "CLOSED_AT_ASC"
const EnumMergeRequestSortCLOSED_AT_DESC EnumMergeRequestSort = "CLOSED_AT_DESC"
const EnumMergeRequestSortCREATED_ASC EnumMergeRequestSort = "CREATED_ASC"
const EnumMergeRequestSortCREATED_DESC EnumMergeRequestSort = "CREATED_DESC"
const EnumMergeRequestSortLABEL_PRIORITY_ASC EnumMergeRequestSort = "LABEL_PRIORITY_ASC"
const EnumMergeRequestSortLABEL_PRIORITY_DESC EnumMergeRequestSort = "LABEL_PRIORITY_DESC"
const EnumMergeRequestSortMERGED_AT_ASC EnumMergeRequestSort = "MERGED_AT_ASC"
const EnumMergeRequestSortMERGED_AT_DESC EnumMergeRequestSort = "MERGED_AT_DESC"
const EnumMergeRequestSortMILESTONE_DUE_ASC EnumMergeRequestSort = "MILESTONE_DUE_ASC"
const EnumMergeRequestSortMILESTONE_DUE_DESC EnumMergeRequestSort = "MILESTONE_DUE_DESC"
const EnumMergeRequestSortPRIORITY_ASC EnumMergeRequestSort = "PRIORITY_ASC"
const EnumMergeRequestSortPRIORITY_DESC EnumMergeRequestSort = "PRIORITY_DESC"
const EnumMergeRequestSortTITLE_ASC EnumMergeRequestSort = "TITLE_ASC"
const EnumMergeRequestSortTITLE_DESC EnumMergeRequestSort = "TITLE_DESC"
const EnumMergeRequestSortUPDATED_ASC EnumMergeRequestSort = "UPDATED_ASC"
const EnumMergeRequestSortUPDATED_DESC EnumMergeRequestSort = "UPDATED_DESC"
const EnumMergeRequestSortcreated_asc EnumMergeRequestSort = "created_asc"
const EnumMergeRequestSortcreated_desc EnumMergeRequestSort = "created_desc"
const EnumMergeRequestSortupdated_asc EnumMergeRequestSort = "updated_asc"
const EnumMergeRequestSortupdated_desc EnumMergeRequestSort = "updated_desc"

type EnumSentryErrorStatus string

const EnumSentryErrorStatusIGNORED EnumSentryErrorStatus = "IGNORED"
const EnumSentryErrorStatusRESOLVED EnumSentryErrorStatus = "RESOLVED"
const EnumSentryErrorStatusRESOLVED_IN_NEXT_RELEASE EnumSentryErrorStatus = "RESOLVED_IN_NEXT_RELEASE"
const EnumSentryErrorStatusUNRESOLVED EnumSentryErrorStatus = "UNRESOLVED"

type EnumWorkItemSort string

const EnumWorkItemSortCREATED_ASC EnumWorkItemSort = "CREATED_ASC"
const EnumWorkItemSortCREATED_DESC EnumWorkItemSort = "CREATED_DESC"
const EnumWorkItemSortTITLE_ASC EnumWorkItemSort = "TITLE_ASC"
const EnumWorkItemSortTITLE_DESC EnumWorkItemSort = "TITLE_DESC"
const EnumWorkItemSortUPDATED_ASC EnumWorkItemSort = "UPDATED_ASC"
const EnumWorkItemSortUPDATED_DESC EnumWorkItemSort = "UPDATED_DESC"
const EnumWorkItemSortcreated_asc EnumWorkItemSort = "created_asc"
const EnumWorkItemSortcreated_desc EnumWorkItemSort = "created_desc"
const EnumWorkItemSortupdated_asc EnumWorkItemSort = "updated_asc"
const EnumWorkItemSortupdated_desc EnumWorkItemSort = "updated_desc"

type EnumDesignCollectionCopyState string

const EnumDesignCollectionCopyStateERROR EnumDesignCollectionCopyState = "ERROR"
const EnumDesignCollectionCopyStateIN_PROGRESS EnumDesignCollectionCopyState = "IN_PROGRESS"
const EnumDesignCollectionCopyStateREADY EnumDesignCollectionCopyState = "READY"

type EnumDiffPositionType string

const EnumDiffPositionTypeimage EnumDiffPositionType = "image"
const EnumDiffPositionTypetext EnumDiffPositionType = "text"

type EnumDoraMetricType string

const EnumDoraMetricTypeCHANGE_FAILURE_RATE EnumDoraMetricType = "CHANGE_FAILURE_RATE"
const EnumDoraMetricTypeDEPLOYMENT_FREQUENCY EnumDoraMetricType = "DEPLOYMENT_FREQUENCY"
const EnumDoraMetricTypeLEAD_TIME_FOR_CHANGES EnumDoraMetricType = "LEAD_TIME_FOR_CHANGES"
const EnumDoraMetricTypeTIME_TO_RESTORE_SERVICE EnumDoraMetricType = "TIME_TO_RESTORE_SERVICE"

type EnumDesignVersionEvent string

const EnumDesignVersionEventCREATION EnumDesignVersionEvent = "CREATION"
const EnumDesignVersionEventDELETION EnumDesignVersionEvent = "DELETION"
const EnumDesignVersionEventMODIFICATION EnumDesignVersionEvent = "MODIFICATION"
const EnumDesignVersionEventNONE EnumDesignVersionEvent = "NONE"

type EnumEventAction string

const EnumEventActionAPPROVED EnumEventAction = "APPROVED"
const EnumEventActionCLOSED EnumEventAction = "CLOSED"
const EnumEventActionCOMMENTED EnumEventAction = "COMMENTED"
const EnumEventActionCREATED EnumEventAction = "CREATED"
const EnumEventActionDESTROYED EnumEventAction = "DESTROYED"
const EnumEventActionEXPIRED EnumEventAction = "EXPIRED"
const EnumEventActionJOINED EnumEventAction = "JOINED"
const EnumEventActionLEFT EnumEventAction = "LEFT"
const EnumEventActionMERGED EnumEventAction = "MERGED"
const EnumEventActionPUSHED EnumEventAction = "PUSHED"
const EnumEventActionREOPENED EnumEventAction = "REOPENED"
const EnumEventActionUPDATED EnumEventAction = "UPDATED"

type EnumMergeStatus string

const EnumMergeStatusCANNOT_BE_MERGED EnumMergeStatus = "CANNOT_BE_MERGED"
const EnumMergeStatusCANNOT_BE_MERGED_RECHECK EnumMergeStatus = "CANNOT_BE_MERGED_RECHECK"
const EnumMergeStatusCAN_BE_MERGED EnumMergeStatus = "CAN_BE_MERGED"
const EnumMergeStatusCHECKING EnumMergeStatus = "CHECKING"
const EnumMergeStatusUNCHECKED EnumMergeStatus = "UNCHECKED"

type EnumMilestoneWildcardId string

const EnumMilestoneWildcardIdANY EnumMilestoneWildcardId = "ANY"
const EnumMilestoneWildcardIdNONE EnumMilestoneWildcardId = "NONE"
const EnumMilestoneWildcardIdSTARTED EnumMilestoneWildcardId = "STARTED"
const EnumMilestoneWildcardIdUPCOMING EnumMilestoneWildcardId = "UPCOMING"

type EnumPackageSort string

const EnumPackageSortCREATED_ASC EnumPackageSort = "CREATED_ASC"
const EnumPackageSortCREATED_DESC EnumPackageSort = "CREATED_DESC"
const EnumPackageSortNAME_ASC EnumPackageSort = "NAME_ASC"
const EnumPackageSortNAME_DESC EnumPackageSort = "NAME_DESC"
const EnumPackageSortTYPE_ASC EnumPackageSort = "TYPE_ASC"
const EnumPackageSortTYPE_DESC EnumPackageSort = "TYPE_DESC"
const EnumPackageSortVERSION_ASC EnumPackageSort = "VERSION_ASC"
const EnumPackageSortVERSION_DESC EnumPackageSort = "VERSION_DESC"

type EnumAlertManagementPayloadAlertFieldName string

const EnumAlertManagementPayloadAlertFieldNameDESCRIPTION EnumAlertManagementPayloadAlertFieldName = "DESCRIPTION"
const EnumAlertManagementPayloadAlertFieldNameEND_TIME EnumAlertManagementPayloadAlertFieldName = "END_TIME"
const EnumAlertManagementPayloadAlertFieldNameFINGERPRINT EnumAlertManagementPayloadAlertFieldName = "FINGERPRINT"
const EnumAlertManagementPayloadAlertFieldNameGITLAB_ENVIRONMENT_NAME EnumAlertManagementPayloadAlertFieldName = "GITLAB_ENVIRONMENT_NAME"
const EnumAlertManagementPayloadAlertFieldNameHOSTS EnumAlertManagementPayloadAlertFieldName = "HOSTS"
const EnumAlertManagementPayloadAlertFieldNameMONITORING_TOOL EnumAlertManagementPayloadAlertFieldName = "MONITORING_TOOL"
const EnumAlertManagementPayloadAlertFieldNameSERVICE EnumAlertManagementPayloadAlertFieldName = "SERVICE"
const EnumAlertManagementPayloadAlertFieldNameSEVERITY EnumAlertManagementPayloadAlertFieldName = "SEVERITY"
const EnumAlertManagementPayloadAlertFieldNameSTART_TIME EnumAlertManagementPayloadAlertFieldName = "START_TIME"
const EnumAlertManagementPayloadAlertFieldNameTITLE EnumAlertManagementPayloadAlertFieldName = "TITLE"

type EnumCommitActionMode string

const EnumCommitActionModeCHMOD EnumCommitActionMode = "CHMOD"
const EnumCommitActionModeCREATE EnumCommitActionMode = "CREATE"
const EnumCommitActionModeDELETE EnumCommitActionMode = "DELETE"
const EnumCommitActionModeMOVE EnumCommitActionMode = "MOVE"
const EnumCommitActionModeUPDATE EnumCommitActionMode = "UPDATE"

type EnumContainerRepositoryTagSort string

const EnumContainerRepositoryTagSortNAME_ASC EnumContainerRepositoryTagSort = "NAME_ASC"
const EnumContainerRepositoryTagSortNAME_DESC EnumContainerRepositoryTagSort = "NAME_DESC"

type EnumServiceType string

const EnumServiceTypeAPPLE_APP_STORE_SERVICE EnumServiceType = "APPLE_APP_STORE_SERVICE"
const EnumServiceTypeASANA_SERVICE EnumServiceType = "ASANA_SERVICE"
const EnumServiceTypeASSEMBLA_SERVICE EnumServiceType = "ASSEMBLA_SERVICE"
const EnumServiceTypeBAMBOO_SERVICE EnumServiceType = "BAMBOO_SERVICE"
const EnumServiceTypeBUGZILLA_SERVICE EnumServiceType = "BUGZILLA_SERVICE"
const EnumServiceTypeBUILDKITE_SERVICE EnumServiceType = "BUILDKITE_SERVICE"
const EnumServiceTypeCAMPFIRE_SERVICE EnumServiceType = "CAMPFIRE_SERVICE"
const EnumServiceTypeCLICKUP_SERVICE EnumServiceType = "CLICKUP_SERVICE"
const EnumServiceTypeCONFLUENCE_SERVICE EnumServiceType = "CONFLUENCE_SERVICE"
const EnumServiceTypeCUSTOM_ISSUE_TRACKER_SERVICE EnumServiceType = "CUSTOM_ISSUE_TRACKER_SERVICE"
const EnumServiceTypeDATADOG_SERVICE EnumServiceType = "DATADOG_SERVICE"
const EnumServiceTypeDISCORD_SERVICE EnumServiceType = "DISCORD_SERVICE"
const EnumServiceTypeDRONE_CI_SERVICE EnumServiceType = "DRONE_CI_SERVICE"
const EnumServiceTypeEMAILS_ON_PUSH_SERVICE EnumServiceType = "EMAILS_ON_PUSH_SERVICE"
const EnumServiceTypeEWM_SERVICE EnumServiceType = "EWM_SERVICE"
const EnumServiceTypeEXTERNAL_WIKI_SERVICE EnumServiceType = "EXTERNAL_WIKI_SERVICE"
const EnumServiceTypeGITHUB_SERVICE EnumServiceType = "GITHUB_SERVICE"
const EnumServiceTypeGITLAB_SLACK_APPLICATION_SERVICE EnumServiceType = "GITLAB_SLACK_APPLICATION_SERVICE"
const EnumServiceTypeGOOGLE_PLAY_SERVICE EnumServiceType = "GOOGLE_PLAY_SERVICE"
const EnumServiceTypeHANGOUTS_CHAT_SERVICE EnumServiceType = "HANGOUTS_CHAT_SERVICE"
const EnumServiceTypeHARBOR_SERVICE EnumServiceType = "HARBOR_SERVICE"
const EnumServiceTypeIRKER_SERVICE EnumServiceType = "IRKER_SERVICE"
const EnumServiceTypeJENKINS_SERVICE EnumServiceType = "JENKINS_SERVICE"
const EnumServiceTypeJIRA_SERVICE EnumServiceType = "JIRA_SERVICE"
const EnumServiceTypeMATTERMOST_SERVICE EnumServiceType = "MATTERMOST_SERVICE"
const EnumServiceTypeMATTERMOST_SLASH_COMMANDS_SERVICE EnumServiceType = "MATTERMOST_SLASH_COMMANDS_SERVICE"
const EnumServiceTypeMICROSOFT_TEAMS_SERVICE EnumServiceType = "MICROSOFT_TEAMS_SERVICE"
const EnumServiceTypePACKAGIST_SERVICE EnumServiceType = "PACKAGIST_SERVICE"
const EnumServiceTypePIPELINES_EMAIL_SERVICE EnumServiceType = "PIPELINES_EMAIL_SERVICE"
const EnumServiceTypePIVOTALTRACKER_SERVICE EnumServiceType = "PIVOTALTRACKER_SERVICE"
const EnumServiceTypePROMETHEUS_SERVICE EnumServiceType = "PROMETHEUS_SERVICE"
const EnumServiceTypePUMBLE_SERVICE EnumServiceType = "PUMBLE_SERVICE"
const EnumServiceTypePUSHOVER_SERVICE EnumServiceType = "PUSHOVER_SERVICE"
const EnumServiceTypeREDMINE_SERVICE EnumServiceType = "REDMINE_SERVICE"
const EnumServiceTypeSHIMO_SERVICE EnumServiceType = "SHIMO_SERVICE"
const EnumServiceTypeSLACK_SERVICE EnumServiceType = "SLACK_SERVICE"
const EnumServiceTypeSLACK_SLASH_COMMANDS_SERVICE EnumServiceType = "SLACK_SLASH_COMMANDS_SERVICE"
const EnumServiceTypeSQUASH_TM_SERVICE EnumServiceType = "SQUASH_TM_SERVICE"
const EnumServiceTypeTEAMCITY_SERVICE EnumServiceType = "TEAMCITY_SERVICE"
const EnumServiceTypeTELEGRAM_SERVICE EnumServiceType = "TELEGRAM_SERVICE"
const EnumServiceTypeUNIFY_CIRCUIT_SERVICE EnumServiceType = "UNIFY_CIRCUIT_SERVICE"
const EnumServiceTypeWEBEX_TEAMS_SERVICE EnumServiceType = "WEBEX_TEAMS_SERVICE"
const EnumServiceTypeYOUTRACK_SERVICE EnumServiceType = "YOUTRACK_SERVICE"
const EnumServiceTypeZENTAO_SERVICE EnumServiceType = "ZENTAO_SERVICE"

type EnumEpicWildcardId string

const EnumEpicWildcardIdANY EnumEpicWildcardId = "ANY"
const EnumEpicWildcardIdNONE EnumEpicWildcardId = "NONE"

type EnumIssueEscalationStatus string

const EnumIssueEscalationStatusACKNOWLEDGED EnumIssueEscalationStatus = "ACKNOWLEDGED"
const EnumIssueEscalationStatusIGNORED EnumIssueEscalationStatus = "IGNORED"
const EnumIssueEscalationStatusRESOLVED EnumIssueEscalationStatus = "RESOLVED"
const EnumIssueEscalationStatusTRIGGERED EnumIssueEscalationStatus = "TRIGGERED"

type EnumMilestoneSort string

const EnumMilestoneSortCREATED_ASC EnumMilestoneSort = "CREATED_ASC"
const EnumMilestoneSortCREATED_DESC EnumMilestoneSort = "CREATED_DESC"
const EnumMilestoneSortDUE_DATE_ASC EnumMilestoneSort = "DUE_DATE_ASC"
const EnumMilestoneSortDUE_DATE_DESC EnumMilestoneSort = "DUE_DATE_DESC"
const EnumMilestoneSortEXPIRED_LAST_DUE_DATE_ASC EnumMilestoneSort = "EXPIRED_LAST_DUE_DATE_ASC"
const EnumMilestoneSortEXPIRED_LAST_DUE_DATE_DESC EnumMilestoneSort = "EXPIRED_LAST_DUE_DATE_DESC"
const EnumMilestoneSortUPDATED_ASC EnumMilestoneSort = "UPDATED_ASC"
const EnumMilestoneSortUPDATED_DESC EnumMilestoneSort = "UPDATED_DESC"
const EnumMilestoneSortcreated_asc EnumMilestoneSort = "created_asc"
const EnumMilestoneSortcreated_desc EnumMilestoneSort = "created_desc"
const EnumMilestoneSortupdated_asc EnumMilestoneSort = "updated_asc"
const EnumMilestoneSortupdated_desc EnumMilestoneSort = "updated_desc"

type EnumTypeEnum string

const EnumTypeEnumpersonal EnumTypeEnum = "personal"
const EnumTypeEnumproject EnumTypeEnum = "project"

type EnumVulnerabilityDismissalReason string

const EnumVulnerabilityDismissalReasonACCEPTABLE_RISK EnumVulnerabilityDismissalReason = "ACCEPTABLE_RISK"
const EnumVulnerabilityDismissalReasonFALSE_POSITIVE EnumVulnerabilityDismissalReason = "FALSE_POSITIVE"
const EnumVulnerabilityDismissalReasonMITIGATING_CONTROL EnumVulnerabilityDismissalReason = "MITIGATING_CONTROL"
const EnumVulnerabilityDismissalReasonNOT_APPLICABLE EnumVulnerabilityDismissalReason = "NOT_APPLICABLE"
const EnumVulnerabilityDismissalReasonUSED_IN_TESTS EnumVulnerabilityDismissalReason = "USED_IN_TESTS"

type EnumBlobViewersType string

const EnumBlobViewersTypeauxiliary EnumBlobViewersType = "auxiliary"
const EnumBlobViewersTyperich EnumBlobViewersType = "rich"
const EnumBlobViewersTypesimple EnumBlobViewersType = "simple"

type EnumContainerExpirationPolicyCadenceEnum string

const EnumContainerExpirationPolicyCadenceEnumEVERY_DAY EnumContainerExpirationPolicyCadenceEnum = "EVERY_DAY"
const EnumContainerExpirationPolicyCadenceEnumEVERY_MONTH EnumContainerExpirationPolicyCadenceEnum = "EVERY_MONTH"
const EnumContainerExpirationPolicyCadenceEnumEVERY_THREE_MONTHS EnumContainerExpirationPolicyCadenceEnum = "EVERY_THREE_MONTHS"
const EnumContainerExpirationPolicyCadenceEnumEVERY_TWO_WEEKS EnumContainerExpirationPolicyCadenceEnum = "EVERY_TWO_WEEKS"
const EnumContainerExpirationPolicyCadenceEnumEVERY_WEEK EnumContainerExpirationPolicyCadenceEnum = "EVERY_WEEK"

type EnumDastScanMethodType string

const EnumDastScanMethodTypeGRAPHQL EnumDastScanMethodType = "GRAPHQL"
const EnumDastScanMethodTypeHAR EnumDastScanMethodType = "HAR"
const EnumDastScanMethodTypeOPENAPI EnumDastScanMethodType = "OPENAPI"
const EnumDastScanMethodTypePOSTMAN_COLLECTION EnumDastScanMethodType = "POSTMAN_COLLECTION"
const EnumDastScanMethodTypeWEBSITE EnumDastScanMethodType = "WEBSITE"

type EnumWorkItemAwardEmojiUpdateAction string

const EnumWorkItemAwardEmojiUpdateActionADD EnumWorkItemAwardEmojiUpdateAction = "ADD"
const EnumWorkItemAwardEmojiUpdateActionREMOVE EnumWorkItemAwardEmojiUpdateAction = "REMOVE"

type EnumWeightWildcardId string

const EnumWeightWildcardIdANY EnumWeightWildcardId = "ANY"
const EnumWeightWildcardIdNONE EnumWeightWildcardId = "NONE"

type EnumGeoRegistryClass string

const EnumGeoRegistryClassCI_SECURE_FILE_REGISTRY EnumGeoRegistryClass = "CI_SECURE_FILE_REGISTRY"
const EnumGeoRegistryClassCONTAINER_REPOSITORY_REGISTRY EnumGeoRegistryClass = "CONTAINER_REPOSITORY_REGISTRY"
const EnumGeoRegistryClassDEPENDENCY_PROXY_BLOB_REGISTRY EnumGeoRegistryClass = "DEPENDENCY_PROXY_BLOB_REGISTRY"
const EnumGeoRegistryClassDEPENDENCY_PROXY_MANIFEST_REGISTRY EnumGeoRegistryClass = "DEPENDENCY_PROXY_MANIFEST_REGISTRY"
const EnumGeoRegistryClassDESIGN_MANAGEMENT_REPOSITORY_REGISTRY EnumGeoRegistryClass = "DESIGN_MANAGEMENT_REPOSITORY_REGISTRY"
const EnumGeoRegistryClassGROUP_WIKI_REPOSITORY_REGISTRY EnumGeoRegistryClass = "GROUP_WIKI_REPOSITORY_REGISTRY"
const EnumGeoRegistryClassJOB_ARTIFACT_REGISTRY EnumGeoRegistryClass = "JOB_ARTIFACT_REGISTRY"
const EnumGeoRegistryClassLFS_OBJECT_REGISTRY EnumGeoRegistryClass = "LFS_OBJECT_REGISTRY"
const EnumGeoRegistryClassMERGE_REQUEST_DIFF_REGISTRY EnumGeoRegistryClass = "MERGE_REQUEST_DIFF_REGISTRY"
const EnumGeoRegistryClassPACKAGE_FILE_REGISTRY EnumGeoRegistryClass = "PACKAGE_FILE_REGISTRY"
const EnumGeoRegistryClassPAGES_DEPLOYMENT_REGISTRY EnumGeoRegistryClass = "PAGES_DEPLOYMENT_REGISTRY"
const EnumGeoRegistryClassPIPELINE_ARTIFACT_REGISTRY EnumGeoRegistryClass = "PIPELINE_ARTIFACT_REGISTRY"
const EnumGeoRegistryClassPROJECT_REPOSITORY_REGISTRY EnumGeoRegistryClass = "PROJECT_REPOSITORY_REGISTRY"
const EnumGeoRegistryClassPROJECT_WIKI_REPOSITORY_REGISTRY EnumGeoRegistryClass = "PROJECT_WIKI_REPOSITORY_REGISTRY"
const EnumGeoRegistryClassSNIPPET_REPOSITORY_REGISTRY EnumGeoRegistryClass = "SNIPPET_REPOSITORY_REGISTRY"
const EnumGeoRegistryClassTERRAFORM_STATE_VERSION_REGISTRY EnumGeoRegistryClass = "TERRAFORM_STATE_VERSION_REGISTRY"
const EnumGeoRegistryClassUPLOAD_REGISTRY EnumGeoRegistryClass = "UPLOAD_REGISTRY"

type EnumNamespaceProjectSort string

const EnumNamespaceProjectSortACTIVITY_DESC EnumNamespaceProjectSort = "ACTIVITY_DESC"
const EnumNamespaceProjectSortSIMILARITY EnumNamespaceProjectSort = "SIMILARITY"
const EnumNamespaceProjectSortSTORAGE EnumNamespaceProjectSort = "STORAGE"
const EnumNamespaceProjectSortSTORAGE_SIZE_ASC EnumNamespaceProjectSort = "STORAGE_SIZE_ASC"
const EnumNamespaceProjectSortSTORAGE_SIZE_DESC EnumNamespaceProjectSort = "STORAGE_SIZE_DESC"

type EnumPipelineConfigSourceEnum string

const EnumPipelineConfigSourceEnumAUTO_DEVOPS_SOURCE EnumPipelineConfigSourceEnum = "AUTO_DEVOPS_SOURCE"
const EnumPipelineConfigSourceEnumBRIDGE_SOURCE EnumPipelineConfigSourceEnum = "BRIDGE_SOURCE"
const EnumPipelineConfigSourceEnumCOMPLIANCE_SOURCE EnumPipelineConfigSourceEnum = "COMPLIANCE_SOURCE"
const EnumPipelineConfigSourceEnumEXTERNAL_PROJECT_SOURCE EnumPipelineConfigSourceEnum = "EXTERNAL_PROJECT_SOURCE"
const EnumPipelineConfigSourceEnumPARAMETER_SOURCE EnumPipelineConfigSourceEnum = "PARAMETER_SOURCE"
const EnumPipelineConfigSourceEnumREMOTE_SOURCE EnumPipelineConfigSourceEnum = "REMOTE_SOURCE"
const EnumPipelineConfigSourceEnumREPOSITORY_SOURCE EnumPipelineConfigSourceEnum = "REPOSITORY_SOURCE"
const EnumPipelineConfigSourceEnumSECURITY_POLICIES_DEFAULT_SOURCE EnumPipelineConfigSourceEnum = "SECURITY_POLICIES_DEFAULT_SOURCE"
const EnumPipelineConfigSourceEnumUNKNOWN_SOURCE EnumPipelineConfigSourceEnum = "UNKNOWN_SOURCE"
const EnumPipelineConfigSourceEnumWEBIDE_SOURCE EnumPipelineConfigSourceEnum = "WEBIDE_SOURCE"

type EnumMergeRequestState string

const EnumMergeRequestStateall EnumMergeRequestState = "all"
const EnumMergeRequestStateclosed EnumMergeRequestState = "closed"
const EnumMergeRequestStatelocked EnumMergeRequestState = "locked"
const EnumMergeRequestStatemerged EnumMergeRequestState = "merged"
const EnumMergeRequestStateopened EnumMergeRequestState = "opened"

type EnumMergeStrategyEnum string

const EnumMergeStrategyEnumADD_TO_MERGE_TRAIN_WHEN_PIPELINE_SUCCEEDS EnumMergeStrategyEnum = "ADD_TO_MERGE_TRAIN_WHEN_PIPELINE_SUCCEEDS"
const EnumMergeStrategyEnumMERGE_TRAIN EnumMergeStrategyEnum = "MERGE_TRAIN"
const EnumMergeStrategyEnumMERGE_WHEN_CHECKS_PASS EnumMergeStrategyEnum = "MERGE_WHEN_CHECKS_PASS"
const EnumMergeStrategyEnumMERGE_WHEN_PIPELINE_SUCCEEDS EnumMergeStrategyEnum = "MERGE_WHEN_PIPELINE_SUCCEEDS"

type EnumDastSiteValidationStrategyEnum string

const EnumDastSiteValidationStrategyEnumHEADER EnumDastSiteValidationStrategyEnum = "HEADER"
const EnumDastSiteValidationStrategyEnumMETA_TAG EnumDastSiteValidationStrategyEnum = "META_TAG"
const EnumDastSiteValidationStrategyEnumTEXT_FILE EnumDastSiteValidationStrategyEnum = "TEXT_FILE"

type EnumGeoRegistryAction string

const EnumGeoRegistryActionRESYNC EnumGeoRegistryAction = "RESYNC"
const EnumGeoRegistryActionREVERIFY EnumGeoRegistryAction = "REVERIFY"

type EnumIterationSort string

const EnumIterationSortCADENCE_AND_DUE_DATE_ASC EnumIterationSort = "CADENCE_AND_DUE_DATE_ASC"
const EnumIterationSortCADENCE_AND_DUE_DATE_DESC EnumIterationSort = "CADENCE_AND_DUE_DATE_DESC"

type EnumReleaseAssetLinkType string

const EnumReleaseAssetLinkTypeIMAGE EnumReleaseAssetLinkType = "IMAGE"
const EnumReleaseAssetLinkTypeOTHER EnumReleaseAssetLinkType = "OTHER"
const EnumReleaseAssetLinkTypePACKAGE EnumReleaseAssetLinkType = "PACKAGE"
const EnumReleaseAssetLinkTypeRUNBOOK EnumReleaseAssetLinkType = "RUNBOOK"

type EnumWorkItemState string

const EnumWorkItemStateCLOSED EnumWorkItemState = "CLOSED"
const EnumWorkItemStateOPEN EnumWorkItemState = "OPEN"

type EnumApprovalRuleType string

const EnumApprovalRuleTypeANY_APPROVER EnumApprovalRuleType = "ANY_APPROVER"
const EnumApprovalRuleTypeCODE_OWNER EnumApprovalRuleType = "CODE_OWNER"
const EnumApprovalRuleTypeREGULAR EnumApprovalRuleType = "REGULAR"
const EnumApprovalRuleTypeREPORT_APPROVER EnumApprovalRuleType = "REPORT_APPROVER"

type EnumDastProfileCadenceUnit string

const EnumDastProfileCadenceUnitDAY EnumDastProfileCadenceUnit = "DAY"
const EnumDastProfileCadenceUnitMONTH EnumDastProfileCadenceUnit = "MONTH"
const EnumDastProfileCadenceUnitWEEK EnumDastProfileCadenceUnit = "WEEK"
const EnumDastProfileCadenceUnitYEAR EnumDastProfileCadenceUnit = "YEAR"

type EnumPackageDependencyType string

const EnumPackageDependencyTypeBUNDLE_DEPENDENCIES EnumPackageDependencyType = "BUNDLE_DEPENDENCIES"
const EnumPackageDependencyTypeDEPENDENCIES EnumPackageDependencyType = "DEPENDENCIES"
const EnumPackageDependencyTypeDEV_DEPENDENCIES EnumPackageDependencyType = "DEV_DEPENDENCIES"
const EnumPackageDependencyTypePEER_DEPENDENCIES EnumPackageDependencyType = "PEER_DEPENDENCIES"

type EnumTimeboxReportErrorReason string

const EnumTimeboxReportErrorReasonCREATED_ASC EnumTimeboxReportErrorReason = "CREATED_ASC"
const EnumTimeboxReportErrorReasonCREATED_DESC EnumTimeboxReportErrorReason = "CREATED_DESC"
const EnumTimeboxReportErrorReasonLABEL_PRIORITY_ASC EnumTimeboxReportErrorReason = "LABEL_PRIORITY_ASC"
const EnumTimeboxReportErrorReasonLABEL_PRIORITY_DESC EnumTimeboxReportErrorReason = "LABEL_PRIORITY_DESC"
const EnumTimeboxReportErrorReasonMILESTONE_DUE_ASC EnumTimeboxReportErrorReason = "MILESTONE_DUE_ASC"
const EnumTimeboxReportErrorReasonMILESTONE_DUE_DESC EnumTimeboxReportErrorReason = "MILESTONE_DUE_DESC"
const EnumTimeboxReportErrorReasonMISSING_DATES EnumTimeboxReportErrorReason = "MISSING_DATES"
const EnumTimeboxReportErrorReasonPRIORITY_ASC EnumTimeboxReportErrorReason = "PRIORITY_ASC"
const EnumTimeboxReportErrorReasonPRIORITY_DESC EnumTimeboxReportErrorReason = "PRIORITY_DESC"
const EnumTimeboxReportErrorReasonTOO_MANY_EVENTS EnumTimeboxReportErrorReason = "TOO_MANY_EVENTS"
const EnumTimeboxReportErrorReasonUNSUPPORTED EnumTimeboxReportErrorReason = "UNSUPPORTED"
const EnumTimeboxReportErrorReasonUPDATED_ASC EnumTimeboxReportErrorReason = "UPDATED_ASC"
const EnumTimeboxReportErrorReasonUPDATED_DESC EnumTimeboxReportErrorReason = "UPDATED_DESC"
const EnumTimeboxReportErrorReasoncreated_asc EnumTimeboxReportErrorReason = "created_asc"
const EnumTimeboxReportErrorReasoncreated_desc EnumTimeboxReportErrorReason = "created_desc"
const EnumTimeboxReportErrorReasonupdated_asc EnumTimeboxReportErrorReason = "updated_asc"
const EnumTimeboxReportErrorReasonupdated_desc EnumTimeboxReportErrorReason = "updated_desc"

type EnumVulnerabilityConfidence string

const EnumVulnerabilityConfidenceCONFIRMED EnumVulnerabilityConfidence = "CONFIRMED"
const EnumVulnerabilityConfidenceEXPERIMENTAL EnumVulnerabilityConfidence = "EXPERIMENTAL"
const EnumVulnerabilityConfidenceHIGH EnumVulnerabilityConfidence = "HIGH"
const EnumVulnerabilityConfidenceIGNORE EnumVulnerabilityConfidence = "IGNORE"
const EnumVulnerabilityConfidenceLOW EnumVulnerabilityConfidence = "LOW"
const EnumVulnerabilityConfidenceMEDIUM EnumVulnerabilityConfidence = "MEDIUM"
const EnumVulnerabilityConfidenceUNKNOWN EnumVulnerabilityConfidence = "UNKNOWN"

type EnumDastPreScanVerificationCheckType string

const EnumDastPreScanVerificationCheckTypeAUTHENTICATION EnumDastPreScanVerificationCheckType = "AUTHENTICATION"
const EnumDastPreScanVerificationCheckTypeCONNECTION EnumDastPreScanVerificationCheckType = "CONNECTION"
const EnumDastPreScanVerificationCheckTypeCRAWLING EnumDastPreScanVerificationCheckType = "CRAWLING"

type EnumDeploymentApprovalSummaryStatus string

const EnumDeploymentApprovalSummaryStatusAPPROVED EnumDeploymentApprovalSummaryStatus = "APPROVED"
const EnumDeploymentApprovalSummaryStatusPENDING_APPROVAL EnumDeploymentApprovalSummaryStatus = "PENDING_APPROVAL"
const EnumDeploymentApprovalSummaryStatusREJECTED EnumDeploymentApprovalSummaryStatus = "REJECTED"

type EnumEscalationRuleStatus string

const EnumEscalationRuleStatusACKNOWLEDGED EnumEscalationRuleStatus = "ACKNOWLEDGED"
const EnumEscalationRuleStatusRESOLVED EnumEscalationRuleStatus = "RESOLVED"

type __Schema struct {
	Types            []__Type      `json:"types"`
	QueryType        __Type        `json:"queryType"`
	MutationType     *__Type       `json:"mutationType"`
	SubscriptionType *__Type       `json:"subscriptionType"`
	Directives       []__Directive `json:"directives"`
}

type __Type struct {
	Kind          Enum__TypeKind `json:"kind"`
	Name          *string        `json:"name"`
	Description   *string        `json:"description"`
	Fields        []__Field      `json:"fields"`
	Interfaces    []__Type       `json:"interfaces"`
	PossibleTypes []__Type       `json:"possibleTypes"`
	EnumValues    []__EnumValue  `json:"enumValues"`
	InputFields   []__InputValue `json:"inputFields"`
	OfType        *__Type        `json:"ofType"`
}

type __Field struct {
	Name              string         `json:"name"`
	Description       *string        `json:"description"`
	Args              []__InputValue `json:"args"`
	Type              __Type         `json:"type"`
	IsDeprecated      bool           `json:"isDeprecated"`
	DeprecationReason *string        `json:"deprecationReason"`
}

type __InputValue struct {
	Name         string  `json:"name"`
	Description  *string `json:"description"`
	Type         __Type  `json:"type"`
	DefaultValue *string `json:"defaultValue"`
}

type __EnumValue struct {
	Name              string  `json:"name"`
	Description       *string `json:"description"`
	IsDeprecated      bool    `json:"isDeprecated"`
	DeprecationReason *string `json:"deprecationReason"`
}

type __Directive struct {
	Name        string                    `json:"name"`
	Description *string                   `json:"description"`
	Locations   []Enum__DirectiveLocation `json:"locations"`
	Args        []__InputValue            `json:"args"`
}

type AccessLevel struct {
	IntegerValue *int64               `json:"integerValue"`
	StringValue  *EnumAccessLevelEnum `json:"stringValue"`
}

type AccessLevelDeployKey struct {
	ExpiresAt *Date           `json:"expiresAt"`
	Id        string          `json:"id"`
	Title     string          `json:"title"`
	User      AccessLevelUser `json:"user"`
}

type AccessLevelGroup struct {
	AvatarUrl *string           `json:"avatarUrl"`
	Id        string            `json:"id"`
	Name      string            `json:"name"`
	Parent    *AccessLevelGroup `json:"parent"`
	WebUrl    string            `json:"webUrl"`
}

type AccessLevelUser struct {
	AvatarUrl   *string `json:"avatarUrl"`
	Id          string  `json:"id"`
	Name        string  `json:"name"`
	PublicEmail *string `json:"publicEmail"`
	Username    string  `json:"username"`
	WebPath     string  `json:"webPath"`
	WebUrl      string  `json:"webUrl"`
}

type Achievement struct {
	AvatarUrl        *string                    `json:"avatarUrl"`
	CreatedAt        Time                       `json:"createdAt"`
	Description      *string                    `json:"description"`
	Id               AchievementsAchievementID  `json:"id"`
	Name             string                     `json:"name"`
	Namespace        *Namespace                 `json:"namespace"`
	UpdatedAt        Time                       `json:"updatedAt"`
	UserAchievements *UserAchievementConnection `json:"userAchievements"`
}

type AchievementConnection struct {
	Count    int64              `json:"count"`
	Edges    []*AchievementEdge `json:"edges"`
	Nodes    []*Achievement     `json:"nodes"`
	PageInfo PageInfo           `json:"pageInfo"`
}

type AchievementEdge struct {
	Cursor string       `json:"cursor"`
	Node   *Achievement `json:"node"`
}

type AchievementsAwardInput struct {
	AchievementId    AchievementsAchievementID `json:"achievementId"`
	ClientMutationId *string                   `json:"clientMutationId"`
	UserId           UserID                    `json:"userId"`
}

type AchievementsAwardPayload struct {
	ClientMutationId *string          `json:"clientMutationId"`
	Errors           []string         `json:"errors"`
	UserAchievement  *UserAchievement `json:"userAchievement"`
}

type AchievementsCreateInput struct {
	Avatar           *Upload     `json:"avatar"`
	ClientMutationId *string     `json:"clientMutationId"`
	Description      *string     `json:"description"`
	Name             string      `json:"name"`
	NamespaceId      NamespaceID `json:"namespaceId"`
}

type AchievementsCreatePayload struct {
	Achievement      *Achievement `json:"achievement"`
	ClientMutationId *string      `json:"clientMutationId"`
	Errors           []string     `json:"errors"`
}

type AchievementsDeleteInput struct {
	AchievementId    AchievementsAchievementID `json:"achievementId"`
	ClientMutationId *string                   `json:"clientMutationId"`
}

type AchievementsDeletePayload struct {
	Achievement      *Achievement `json:"achievement"`
	ClientMutationId *string      `json:"clientMutationId"`
	Errors           []string     `json:"errors"`
}

type AchievementsRevokeInput struct {
	ClientMutationId  *string                       `json:"clientMutationId"`
	UserAchievementId AchievementsUserAchievementID `json:"userAchievementId"`
}

type AchievementsRevokePayload struct {
	ClientMutationId *string          `json:"clientMutationId"`
	Errors           []string         `json:"errors"`
	UserAchievement  *UserAchievement `json:"userAchievement"`
}

type AchievementsUpdateInput struct {
	AchievementId    AchievementsAchievementID `json:"achievementId"`
	Avatar           *Upload                   `json:"avatar"`
	ClientMutationId *string                   `json:"clientMutationId"`
	Description      *string                   `json:"description"`
	Name             *string                   `json:"name"`
}

type AchievementsUpdatePayload struct {
	Achievement      *Achievement `json:"achievement"`
	ClientMutationId *string      `json:"clientMutationId"`
	Errors           []string     `json:"errors"`
}

type AddOnPurchase struct {
	AssignedQuantity  int64                              `json:"assignedQuantity"`
	Id                GitlabSubscriptionsAddOnPurchaseID `json:"id"`
	Name              string                             `json:"name"`
	PurchasedQuantity int64                              `json:"purchasedQuantity"`
}

type AddProjectToSecurityDashboardInput struct {
	ClientMutationId *string   `json:"clientMutationId"`
	Id               ProjectID `json:"id"`
}

type AddProjectToSecurityDashboardPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	Project          *Project `json:"project"`
}

type AdminSidekiqQueuesDeleteJobsInput struct {
	AiResource                 *string `json:"aiResource"`
	ArtifactSize               *string `json:"artifactSize"`
	ArtifactUsedCdn            *string `json:"artifactUsedCdn"`
	ArtifactsDependenciesCount *string `json:"artifactsDependenciesCount"`
	ArtifactsDependenciesSize  *string `json:"artifactsDependenciesSize"`
	CallerId                   *string `json:"callerId"`
	ClientId                   *string `json:"clientId"`
	ClientMutationId           *string `json:"clientMutationId"`
	FeatureCategory            *string `json:"featureCategory"`
	JobId                      *string `json:"jobId"`
	MergeActionStatus          *string `json:"mergeActionStatus"`
	PipelineId                 *string `json:"pipelineId"`
	Project                    *string `json:"project"`
	QueueName                  string  `json:"queueName"`
	RelatedClass               *string `json:"relatedClass"`
	RemoteIp                   *string `json:"remoteIp"`
	RootCallerId               *string `json:"rootCallerId"`
	RootNamespace              *string `json:"rootNamespace"`
	SubscriptionPlan           *string `json:"subscriptionPlan"`
	User                       *string `json:"user"`
	UserId                     *string `json:"userId"`
	WorkerClass                *string `json:"workerClass"`
}

type AdminSidekiqQueuesDeleteJobsPayload struct {
	ClientMutationId *string             `json:"clientMutationId"`
	Errors           []string            `json:"errors"`
	Result           *DeleteJobsResponse `json:"result"`
}

type AgentConfiguration struct {
	AgentName *string `json:"agentName"`
}

type AgentConfigurationConnection struct {
	Edges    []*AgentConfigurationEdge `json:"edges"`
	Nodes    []*AgentConfiguration     `json:"nodes"`
	PageInfo PageInfo                  `json:"pageInfo"`
}

type AgentConfigurationEdge struct {
	Cursor string              `json:"cursor"`
	Node   *AgentConfiguration `json:"node"`
}

type AgentMetadata struct {
	Commit       *string `json:"commit"`
	PodName      *string `json:"podName"`
	PodNamespace *string `json:"podNamespace"`
	Version      *string `json:"version"`
}

type AiActionInput struct {
	AnalyzeCiJobFailure        *AnalyzeCiJobFailureInput          `json:"analyzeCiJobFailure"`
	Chat                       *AiChatInput                       `json:"chat"`
	ClientMutationId           *string                            `json:"clientMutationId"`
	ExplainCode                *AiExplainCodeInput                `json:"explainCode"`
	ExplainVulnerability       *AiExplainVulnerabilityInput       `json:"explainVulnerability"`
	FillInMergeRequestTemplate *AiFillInMergeRequestTemplateInput `json:"fillInMergeRequestTemplate"`
	GenerateCommitMessage      *AiGenerateCommitMessageInput      `json:"generateCommitMessage"`
	GenerateDescription        *AiGenerateDescriptionInput        `json:"generateDescription"`
	GenerateTestFile           *GenerateTestFileInput             `json:"generateTestFile"`
	MarkupFormat               *EnumMarkupFormat                  `json:"markupFormat"`
	SummarizeComments          *AiSummarizeCommentsInput          `json:"summarizeComments"`
	SummarizeReview            *AiSummarizeReviewInput            `json:"summarizeReview"`
	TanukiBot                  *AiTanukiBotInput                  `json:"tanukiBot"`
}

type AiActionPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	RequestId        *string  `json:"requestId"`
}

type AiCachedMessageType struct {
	Content   *string                 `json:"content"`
	Errors    []string                `json:"errors"`
	Id        *string                 `json:"id"`
	RequestId *string                 `json:"requestId"`
	Role      EnumAiCachedMessageRole `json:"role"`
	Timestamp Time                    `json:"timestamp"`
}

type AiCachedMessageTypeConnection struct {
	Edges    []*AiCachedMessageTypeEdge `json:"edges"`
	Nodes    []*AiCachedMessageType     `json:"nodes"`
	PageInfo PageInfo                   `json:"pageInfo"`
}

type AiCachedMessageTypeEdge struct {
	Cursor string               `json:"cursor"`
	Node   *AiCachedMessageType `json:"node"`
}

type AiChatInput struct {
	Content     string       `json:"content"`
	NamespaceId *NamespaceID `json:"namespaceId"`
	ResourceId  *AiModelID   `json:"resourceId"`
}

type AiExplainCodeInput struct {
	Messages   []AiExplainCodeMessageInput `json:"messages"`
	ResourceId AiModelID                   `json:"resourceId"`
}

type AiExplainCodeMessageInput struct {
	Content string `json:"content"`
	Role    string `json:"role"`
}

type AiExplainVulnerabilityInput struct {
	IncludeSourceCode *bool     `json:"includeSourceCode"`
	ResourceId        AiModelID `json:"resourceId"`
}

type AiFillInMergeRequestTemplateInput struct {
	Content         string    `json:"content"`
	ResourceId      AiModelID `json:"resourceId"`
	SourceBranch    string    `json:"sourceBranch"`
	SourceProjectId *string   `json:"sourceProjectId"`
	TargetBranch    string    `json:"targetBranch"`
	Title           string    `json:"title"`
}

type AiGenerateCommitMessageInput struct {
	ResourceId AiModelID `json:"resourceId"`
}

type AiGenerateDescriptionInput struct {
	Content                 string    `json:"content"`
	DescriptionTemplateName *string   `json:"descriptionTemplateName"`
	ResourceId              AiModelID `json:"resourceId"`
}

type AiMessageType struct {
	Content    *string  `json:"content"`
	Errors     []string `json:"errors"`
	Id         *string  `json:"id"`
	IsFetching *bool    `json:"isFetching"`
	Role       string   `json:"role"`
}

type AiMessageTypeConnection struct {
	Edges    []*AiMessageTypeEdge `json:"edges"`
	Nodes    []*AiMessageType     `json:"nodes"`
	PageInfo PageInfo             `json:"pageInfo"`
}

type AiMessageTypeEdge struct {
	Cursor string         `json:"cursor"`
	Node   *AiMessageType `json:"node"`
}

type AiResponse struct {
	Errors       []string `json:"errors"`
	RequestId    *string  `json:"requestId"`
	ResponseBody *string  `json:"responseBody"`
}

type AiSummarizeCommentsInput struct {
	ResourceId AiModelID `json:"resourceId"`
}

type AiSummarizeReviewInput struct {
	ResourceId AiModelID `json:"resourceId"`
}

type AiTanukiBotInput struct {
	Question   string    `json:"question"`
	ResourceId AiModelID `json:"resourceId"`
}

type AlertManagementAlert struct {
	Assignees       *UserCoreConnection          `json:"assignees"`
	Commenters      UserCoreConnection           `json:"commenters"`
	CreatedAt       *Time                        `json:"createdAt"`
	Description     *string                      `json:"description"`
	Details         *JSON                        `json:"details"`
	DetailsUrl      string                       `json:"detailsUrl"`
	Discussions     DiscussionConnection         `json:"discussions"`
	EndedAt         *Time                        `json:"endedAt"`
	Environment     *Environment                 `json:"environment"`
	EventCount      *int64                       `json:"eventCount"`
	Hosts           []string                     `json:"hosts"`
	Id              string                       `json:"id"`
	Iid             string                       `json:"iid"`
	Issue           *Issue                       `json:"issue"`
	IssueIid        *string                      `json:"issueIid"`
	MonitoringTool  *string                      `json:"monitoringTool"`
	Notes           NoteConnection               `json:"notes"`
	PrometheusAlert *PrometheusAlert             `json:"prometheusAlert"`
	Runbook         *string                      `json:"runbook"`
	Service         *string                      `json:"service"`
	Severity        *EnumAlertManagementSeverity `json:"severity"`
	StartedAt       *Time                        `json:"startedAt"`
	Status          *EnumAlertManagementStatus   `json:"status"`
	Title           *string                      `json:"title"`
	Todos           *TodoConnection              `json:"todos"`
	UpdatedAt       *Time                        `json:"updatedAt"`
	WebUrl          string                       `json:"webUrl"`
}

type AlertManagementAlertConnection struct {
	Edges    []*AlertManagementAlertEdge `json:"edges"`
	Nodes    []*AlertManagementAlert     `json:"nodes"`
	PageInfo PageInfo                    `json:"pageInfo"`
}

type AlertManagementAlertEdge struct {
	Cursor string                `json:"cursor"`
	Node   *AlertManagementAlert `json:"node"`
}

type AlertManagementAlertStatusCountsType struct {
	Acknowledged *int64 `json:"acknowledged"`
	All          *int64 `json:"all"`
	Ignored      *int64 `json:"ignored"`
	Open         *int64 `json:"open"`
	Resolved     *int64 `json:"resolved"`
	Triggered    *int64 `json:"triggered"`
}

type AlertManagementHttpIntegration struct {
	Active                   *bool                                     `json:"active"`
	ApiUrl                   *string                                   `json:"apiUrl"`
	Id                       string                                    `json:"id"`
	Name                     *string                                   `json:"name"`
	PayloadAlertFields       []AlertManagementPayloadAlertField        `json:"payloadAlertFields"`
	PayloadAttributeMappings []AlertManagementPayloadAlertMappingField `json:"payloadAttributeMappings"`
	PayloadExample           *JsonString                               `json:"payloadExample"`
	Token                    *string                                   `json:"token"`
	Type                     EnumAlertManagementIntegrationType        `json:"type"`
	Url                      *string                                   `json:"url"`
}

type AlertManagementHttpIntegrationConnection struct {
	Edges    []*AlertManagementHttpIntegrationEdge `json:"edges"`
	Nodes    []*AlertManagementHttpIntegration     `json:"nodes"`
	PageInfo PageInfo                              `json:"pageInfo"`
}

type AlertManagementHttpIntegrationEdge struct {
	Cursor string                          `json:"cursor"`
	Node   *AlertManagementHttpIntegration `json:"node"`
}

type AlertManagementIntegrationConnection struct {
	Edges    []*AlertManagementIntegrationEdge `json:"edges"`
	Nodes    []*AlertManagementIntegration     `json:"nodes"`
	PageInfo PageInfo                          `json:"pageInfo"`
}

type AlertManagementIntegrationEdge struct {
	Cursor string                      `json:"cursor"`
	Node   *AlertManagementIntegration `json:"node"`
}

type AlertManagementPayloadAlertField struct {
	Label *string                                   `json:"label"`
	Path  []PayloadAlertFieldPathSegment            `json:"path"`
	Type  *EnumAlertManagementPayloadAlertFieldType `json:"type"`
}

type AlertManagementPayloadAlertFieldInput struct {
	FieldName EnumAlertManagementPayloadAlertFieldName `json:"fieldName"`
	Label     *string                                  `json:"label"`
	Path      []PayloadAlertFieldPathSegment           `json:"path"`
	Type      EnumAlertManagementPayloadAlertFieldType `json:"type"`
}

type AlertManagementPayloadAlertMappingField struct {
	FieldName *EnumAlertManagementPayloadAlertFieldName `json:"fieldName"`
	Label     *string                                   `json:"label"`
	Path      []PayloadAlertFieldPathSegment            `json:"path"`
	Type      *EnumAlertManagementPayloadAlertFieldType `json:"type"`
}

type AlertManagementPrometheusIntegration struct {
	Active *bool                              `json:"active"`
	ApiUrl *string                            `json:"apiUrl"`
	Id     string                             `json:"id"`
	Name   *string                            `json:"name"`
	Token  *string                            `json:"token"`
	Type   EnumAlertManagementIntegrationType `json:"type"`
	Url    *string                            `json:"url"`
}

type AlertSetAssigneesInput struct {
	AssigneeUsernames []string                   `json:"assigneeUsernames"`
	ClientMutationId  *string                    `json:"clientMutationId"`
	Iid               string                     `json:"iid"`
	OperationMode     *EnumMutationOperationMode `json:"operationMode"`
	ProjectPath       string                     `json:"projectPath"`
}

type AlertSetAssigneesPayload struct {
	Alert            *AlertManagementAlert `json:"alert"`
	ClientMutationId *string               `json:"clientMutationId"`
	Errors           []string              `json:"errors"`
	Issue            *Issue                `json:"issue"`
	Todo             *Todo                 `json:"todo"`
}

type AlertTodoCreateInput struct {
	ClientMutationId *string `json:"clientMutationId"`
	Iid              string  `json:"iid"`
	ProjectPath      string  `json:"projectPath"`
}

type AlertTodoCreatePayload struct {
	Alert            *AlertManagementAlert `json:"alert"`
	ClientMutationId *string               `json:"clientMutationId"`
	Errors           []string              `json:"errors"`
	Issue            *Issue                `json:"issue"`
	Todo             *Todo                 `json:"todo"`
}

type AnalyzeCiJobFailureInput struct {
	ResourceId AiModelID `json:"resourceId"`
}

type ApiFuzzingCiConfiguration struct {
	ScanModes    []EnumApiFuzzingScanMode `json:"scanModes"`
	ScanProfiles []ApiFuzzingScanProfile  `json:"scanProfiles"`
}

type ApiFuzzingScanProfile struct {
	Description *string `json:"description"`
	Name        *string `json:"name"`
	Yaml        *string `json:"yaml"`
}

type ApprovalProjectRule struct {
	ApprovalsRequired *int64                `json:"approvalsRequired"`
	EligibleApprovers *UserCoreConnection   `json:"eligibleApprovers"`
	Id                GlobalID              `json:"id"`
	Name              *string               `json:"name"`
	Type              *EnumApprovalRuleType `json:"type"`
}

type ApprovalProjectRuleConnection struct {
	Edges    []*ApprovalProjectRuleEdge `json:"edges"`
	Nodes    []*ApprovalProjectRule     `json:"nodes"`
	PageInfo PageInfo                   `json:"pageInfo"`
}

type ApprovalProjectRuleEdge struct {
	Cursor string               `json:"cursor"`
	Node   *ApprovalProjectRule `json:"node"`
}

type ApprovalRule struct {
	AllowMergeWhenInvalid *bool                 `json:"allowMergeWhenInvalid"`
	ApprovalsRequired     *int64                `json:"approvalsRequired"`
	Approved              *bool                 `json:"approved"`
	ApprovedBy            *UserCoreConnection   `json:"approvedBy"`
	CommentedBy           *UserCoreConnection   `json:"commentedBy"`
	ContainsHiddenGroups  *bool                 `json:"containsHiddenGroups"`
	EligibleApprovers     []UserCore            `json:"eligibleApprovers"`
	Groups                *GroupConnection      `json:"groups"`
	Id                    GlobalID              `json:"id"`
	Invalid               *bool                 `json:"invalid"`
	Name                  *string               `json:"name"`
	Overridden            *bool                 `json:"overridden"`
	Section               *string               `json:"section"`
	SourceRule            *ApprovalRule         `json:"sourceRule"`
	Type                  *EnumApprovalRuleType `json:"type"`
	Users                 *UserCoreConnection   `json:"users"`
}

type ApproveDeploymentInput struct {
	ClientMutationId *string                       `json:"clientMutationId"`
	Comment          *string                       `json:"comment"`
	Id               DeploymentID                  `json:"id"`
	RepresentedAs    *string                       `json:"representedAs"`
	Status           EnumDeploymentsApprovalStatus `json:"status"`
}

type ApproveDeploymentPayload struct {
	ClientMutationId   *string            `json:"clientMutationId"`
	DeploymentApproval DeploymentApproval `json:"deploymentApproval"`
	Errors             []string           `json:"errors"`
}

type ArtifactDestroyInput struct {
	ClientMutationId *string         `json:"clientMutationId"`
	Id               CiJobArtifactID `json:"id"`
}

type ArtifactDestroyPayload struct {
	Artifact         *CiJobArtifact `json:"artifact"`
	ClientMutationId *string        `json:"clientMutationId"`
	Errors           []string       `json:"errors"`
}

type AssetType struct {
	Name string `json:"name"`
	Type string `json:"type"`
	Url  string `json:"url"`
}

type AuditEventDefinition struct {
	Description       string  `json:"description"`
	FeatureCategory   string  `json:"featureCategory"`
	IntroducedByIssue *string `json:"introducedByIssue"`
	IntroducedByMr    *string `json:"introducedByMr"`
	Milestone         string  `json:"milestone"`
	Name              string  `json:"name"`
	SavedToDatabase   bool    `json:"savedToDatabase"`
	Streamed          bool    `json:"streamed"`
}

type AuditEventDefinitionConnection struct {
	Edges    []*AuditEventDefinitionEdge `json:"edges"`
	Nodes    []*AuditEventDefinition     `json:"nodes"`
	PageInfo PageInfo                    `json:"pageInfo"`
}

type AuditEventDefinitionEdge struct {
	Cursor string                `json:"cursor"`
	Node   *AuditEventDefinition `json:"node"`
}

type AuditEventStreamingHeader struct {
	Id    string `json:"id"`
	Key   string `json:"key"`
	Value string `json:"value"`
}

type AuditEventStreamingHeaderConnection struct {
	Edges    []*AuditEventStreamingHeaderEdge `json:"edges"`
	Nodes    []*AuditEventStreamingHeader     `json:"nodes"`
	PageInfo PageInfo                         `json:"pageInfo"`
}

type AuditEventStreamingHeaderEdge struct {
	Cursor string                     `json:"cursor"`
	Node   *AuditEventStreamingHeader `json:"node"`
}

type AuditEventsStreamingDestinationEventsAddInput struct {
	ClientMutationId *string                                    `json:"clientMutationId"`
	DestinationId    AuditEventsExternalAuditEventDestinationID `json:"destinationId"`
	EventTypeFilters []string                                   `json:"eventTypeFilters"`
}

type AuditEventsStreamingDestinationEventsAddPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	EventTypeFilters []string `json:"eventTypeFilters"`
}

type AuditEventsStreamingDestinationEventsRemoveInput struct {
	ClientMutationId *string                                    `json:"clientMutationId"`
	DestinationId    AuditEventsExternalAuditEventDestinationID `json:"destinationId"`
	EventTypeFilters []string                                   `json:"eventTypeFilters"`
}

type AuditEventsStreamingDestinationEventsRemovePayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
}

type AuditEventsStreamingDestinationInstanceEventsAddInput struct {
	ClientMutationId *string                                            `json:"clientMutationId"`
	DestinationId    AuditEventsInstanceExternalAuditEventDestinationID `json:"destinationId"`
	EventTypeFilters []string                                           `json:"eventTypeFilters"`
}

type AuditEventsStreamingDestinationInstanceEventsAddPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	EventTypeFilters []string `json:"eventTypeFilters"`
}

type AuditEventsStreamingDestinationInstanceEventsRemoveInput struct {
	ClientMutationId *string                                            `json:"clientMutationId"`
	DestinationId    AuditEventsInstanceExternalAuditEventDestinationID `json:"destinationId"`
	EventTypeFilters []string                                           `json:"eventTypeFilters"`
}

type AuditEventsStreamingDestinationInstanceEventsRemovePayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
}

type AuditEventsStreamingHeadersCreateInput struct {
	ClientMutationId *string                                    `json:"clientMutationId"`
	DestinationId    AuditEventsExternalAuditEventDestinationID `json:"destinationId"`
	Key              string                                     `json:"key"`
	Value            string                                     `json:"value"`
}

type AuditEventsStreamingHeadersCreatePayload struct {
	ClientMutationId *string                    `json:"clientMutationId"`
	Errors           []string                   `json:"errors"`
	Header           *AuditEventStreamingHeader `json:"header"`
}

type AuditEventsStreamingHeadersDestroyInput struct {
	ClientMutationId *string                      `json:"clientMutationId"`
	HeaderId         AuditEventsStreamingHeaderID `json:"headerId"`
}

type AuditEventsStreamingHeadersDestroyPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
}

type AuditEventsStreamingHeadersUpdateInput struct {
	ClientMutationId *string                      `json:"clientMutationId"`
	HeaderId         AuditEventsStreamingHeaderID `json:"headerId"`
	Key              string                       `json:"key"`
	Value            string                       `json:"value"`
}

type AuditEventsStreamingHeadersUpdatePayload struct {
	ClientMutationId *string                    `json:"clientMutationId"`
	Errors           []string                   `json:"errors"`
	Header           *AuditEventStreamingHeader `json:"header"`
}

type AuditEventsStreamingInstanceHeader struct {
	Id    string `json:"id"`
	Key   string `json:"key"`
	Value string `json:"value"`
}

type AuditEventsStreamingInstanceHeaderConnection struct {
	Edges    []*AuditEventsStreamingInstanceHeaderEdge `json:"edges"`
	Nodes    []*AuditEventsStreamingInstanceHeader     `json:"nodes"`
	PageInfo PageInfo                                  `json:"pageInfo"`
}

type AuditEventsStreamingInstanceHeaderEdge struct {
	Cursor string                              `json:"cursor"`
	Node   *AuditEventsStreamingInstanceHeader `json:"node"`
}

type AuditEventsStreamingInstanceHeadersCreateInput struct {
	ClientMutationId *string                                            `json:"clientMutationId"`
	DestinationId    AuditEventsInstanceExternalAuditEventDestinationID `json:"destinationId"`
	Key              string                                             `json:"key"`
	Value            string                                             `json:"value"`
}

type AuditEventsStreamingInstanceHeadersCreatePayload struct {
	ClientMutationId *string                             `json:"clientMutationId"`
	Errors           []string                            `json:"errors"`
	Header           *AuditEventsStreamingInstanceHeader `json:"header"`
}

type AuditEventsStreamingInstanceHeadersDestroyInput struct {
	ClientMutationId *string                              `json:"clientMutationId"`
	HeaderId         AuditEventsStreamingInstanceHeaderID `json:"headerId"`
}

type AuditEventsStreamingInstanceHeadersDestroyPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
}

type AuditEventsStreamingInstanceHeadersUpdateInput struct {
	ClientMutationId *string                              `json:"clientMutationId"`
	HeaderId         AuditEventsStreamingInstanceHeaderID `json:"headerId"`
	Key              string                               `json:"key"`
	Value            string                               `json:"value"`
}

type AuditEventsStreamingInstanceHeadersUpdatePayload struct {
	ClientMutationId *string                             `json:"clientMutationId"`
	Errors           []string                            `json:"errors"`
	Header           *AuditEventsStreamingInstanceHeader `json:"header"`
}

type AutocompletedUser struct {
	AssignedMergeRequests        *MergeRequestConnection         `json:"assignedMergeRequests"`
	AuthoredMergeRequests        *MergeRequestConnection         `json:"authoredMergeRequests"`
	AvatarUrl                    *string                         `json:"avatarUrl"`
	Bio                          *string                         `json:"bio"`
	Bot                          bool                            `json:"bot"`
	Callouts                     *UserCalloutConnection          `json:"callouts"`
	CommitEmail                  *string                         `json:"commitEmail"`
	CreatedAt                    *Time                           `json:"createdAt"`
	Discord                      *string                         `json:"discord"`
	Email                        *string                         `json:"email"`
	Emails                       *EmailConnection                `json:"emails"`
	GitpodEnabled                *bool                           `json:"gitpodEnabled"`
	GroupCount                   *int64                          `json:"groupCount"`
	GroupMemberships             *GroupMemberConnection          `json:"groupMemberships"`
	Groups                       *GroupConnection                `json:"groups"`
	Id                           string                          `json:"id"`
	Ide                          *Ide                            `json:"ide"`
	JobTitle                     *string                         `json:"jobTitle"`
	Linkedin                     *string                         `json:"linkedin"`
	Location                     *string                         `json:"location"`
	MergeRequestInteraction      *UserMergeRequestInteraction    `json:"mergeRequestInteraction"`
	Name                         string                          `json:"name"`
	Namespace                    *Namespace                      `json:"namespace"`
	NamespaceCommitEmails        *NamespaceCommitEmailConnection `json:"namespaceCommitEmails"`
	Organization                 *string                         `json:"organization"`
	PreferencesGitpodPath        *string                         `json:"preferencesGitpodPath"`
	ProfileEnableGitpodPath      *string                         `json:"profileEnableGitpodPath"`
	ProjectMemberships           *ProjectMemberConnection        `json:"projectMemberships"`
	Pronouns                     *string                         `json:"pronouns"`
	PublicEmail                  *string                         `json:"publicEmail"`
	ReviewRequestedMergeRequests *MergeRequestConnection         `json:"reviewRequestedMergeRequests"`
	SavedReplies                 *SavedReplyConnection           `json:"savedReplies"`
	SavedReply                   *SavedReply                     `json:"savedReply"`
	Snippets                     *SnippetConnection              `json:"snippets"`
	StarredProjects              *ProjectConnection              `json:"starredProjects"`
	State                        EnumUserState                   `json:"state"`
	Status                       *UserStatus                     `json:"status"`
	Timelogs                     *TimelogConnection              `json:"timelogs"`
	Todos                        *TodoConnection                 `json:"todos"`
	Twitter                      *string                         `json:"twitter"`
	UserAchievements             *UserAchievementConnection      `json:"userAchievements"`
	UserPermissions              UserPermissions                 `json:"userPermissions"`
	Username                     string                          `json:"username"`
	WebPath                      string                          `json:"webPath"`
	WebUrl                       string                          `json:"webUrl"`
	Workspaces                   *WorkspaceConnection            `json:"workspaces"`
}

type AwardEmoji struct {
	Description    string   `json:"description"`
	Emoji          string   `json:"emoji"`
	Name           string   `json:"name"`
	Unicode        string   `json:"unicode"`
	UnicodeVersion string   `json:"unicodeVersion"`
	User           UserCore `json:"user"`
}

type AwardEmojiAddInput struct {
	AwardableId      AwardableID `json:"awardableId"`
	ClientMutationId *string     `json:"clientMutationId"`
	Name             string      `json:"name"`
}

type AwardEmojiAddPayload struct {
	AwardEmoji       *AwardEmoji `json:"awardEmoji"`
	ClientMutationId *string     `json:"clientMutationId"`
	Errors           []string    `json:"errors"`
}

type AwardEmojiConnection struct {
	Edges    []*AwardEmojiEdge `json:"edges"`
	Nodes    []*AwardEmoji     `json:"nodes"`
	PageInfo PageInfo          `json:"pageInfo"`
}

type AwardEmojiEdge struct {
	Cursor string      `json:"cursor"`
	Node   *AwardEmoji `json:"node"`
}

type AwardEmojiRemoveInput struct {
	AwardableId      AwardableID `json:"awardableId"`
	ClientMutationId *string     `json:"clientMutationId"`
	Name             string      `json:"name"`
}

type AwardEmojiRemovePayload struct {
	AwardEmoji       *AwardEmoji `json:"awardEmoji"`
	ClientMutationId *string     `json:"clientMutationId"`
	Errors           []string    `json:"errors"`
}

type AwardEmojiToggleInput struct {
	AwardableId      AwardableID `json:"awardableId"`
	ClientMutationId *string     `json:"clientMutationId"`
	Name             string      `json:"name"`
}

type AwardEmojiTogglePayload struct {
	AwardEmoji       *AwardEmoji `json:"awardEmoji"`
	ClientMutationId *string     `json:"clientMutationId"`
	Errors           []string    `json:"errors"`
	ToggledOn        bool        `json:"toggledOn"`
}

type BaseService struct {
	Active      *bool            `json:"active"`
	ServiceType *EnumServiceType `json:"serviceType"`
	Type        *string          `json:"type"`
}

type Blob struct {
	FlatPath string        `json:"flatPath"`
	Id       string        `json:"id"`
	LfsOid   *string       `json:"lfsOid"`
	Mode     *string       `json:"mode"`
	Name     string        `json:"name"`
	Path     string        `json:"path"`
	Sha      string        `json:"sha"`
	Type     EnumEntryType `json:"type"`
	WebPath  *string       `json:"webPath"`
	WebUrl   *string       `json:"webUrl"`
}

type BlobConnection struct {
	Edges    []*BlobEdge `json:"edges"`
	Nodes    []*Blob     `json:"nodes"`
	PageInfo PageInfo    `json:"pageInfo"`
}

type BlobEdge struct {
	Cursor string `json:"cursor"`
	Node   *Blob  `json:"node"`
}

type BlobViewer struct {
	Collapsed          bool                `json:"collapsed"`
	FileType           string              `json:"fileType"`
	LoadAsync          bool                `json:"loadAsync"`
	LoadingPartialName string              `json:"loadingPartialName"`
	RenderError        *string             `json:"renderError"`
	TooLarge           bool                `json:"tooLarge"`
	Type               EnumBlobViewersType `json:"type"`
}

type Board struct {
	Assignee         *UserCore            `json:"assignee"`
	CreatedAt        Time                 `json:"createdAt"`
	Epics            *BoardEpicConnection `json:"epics"`
	HideBacklogList  *bool                `json:"hideBacklogList"`
	HideClosedList   *bool                `json:"hideClosedList"`
	Id               string               `json:"id"`
	Iteration        *Iteration           `json:"iteration"`
	IterationCadence *IterationCadence    `json:"iterationCadence"`
	Labels           *LabelConnection     `json:"labels"`
	Lists            *BoardListConnection `json:"lists"`
	Milestone        *Milestone           `json:"milestone"`
	Name             *string              `json:"name"`
	UpdatedAt        Time                 `json:"updatedAt"`
	WebPath          string               `json:"webPath"`
	WebUrl           string               `json:"webUrl"`
	Weight           *int64               `json:"weight"`
}

type BoardConnection struct {
	Edges    []*BoardEdge `json:"edges"`
	Nodes    []*Board     `json:"nodes"`
	PageInfo PageInfo     `json:"pageInfo"`
}

type BoardEdge struct {
	Cursor string `json:"cursor"`
	Node   *Board `json:"node"`
}

type BoardEpic struct {
	Ancestors                      *EpicConnection           `json:"ancestors"`
	Author                         UserCore                  `json:"author"`
	AwardEmoji                     *AwardEmojiConnection     `json:"awardEmoji"`
	Blocked                        *bool                     `json:"blocked"`
	BlockedByCount                 *int64                    `json:"blockedByCount"`
	BlockedByEpics                 *EpicConnection           `json:"blockedByEpics"`
	BlockingCount                  *int64                    `json:"blockingCount"`
	Children                       *EpicConnection           `json:"children"`
	ClosedAt                       *Time                     `json:"closedAt"`
	Color                          *string                   `json:"color"`
	Commenters                     UserCoreConnection        `json:"commenters"`
	Confidential                   *bool                     `json:"confidential"`
	CreatedAt                      *Time                     `json:"createdAt"`
	CurrentUserTodos               TodoConnection            `json:"currentUserTodos"`
	DefaultProjectForIssueCreation *Project                  `json:"defaultProjectForIssueCreation"`
	DescendantCounts               *EpicDescendantCount      `json:"descendantCounts"`
	DescendantWeightSum            *EpicDescendantWeights    `json:"descendantWeightSum"`
	Description                    *string                   `json:"description"`
	DescriptionHtml                *string                   `json:"descriptionHtml"`
	Discussions                    DiscussionConnection      `json:"discussions"`
	Downvotes                      int64                     `json:"downvotes"`
	DueDate                        *Time                     `json:"dueDate"`
	DueDateFixed                   *Time                     `json:"dueDateFixed"`
	DueDateFromInheritedSource     *Time                     `json:"dueDateFromInheritedSource"`
	DueDateFromMilestones          *Time                     `json:"dueDateFromMilestones"`
	DueDateIsFixed                 *bool                     `json:"dueDateIsFixed"`
	Events                         *EventConnection          `json:"events"`
	Group                          Group                     `json:"group"`
	HasChildren                    bool                      `json:"hasChildren"`
	HasIssues                      bool                      `json:"hasIssues"`
	HasParent                      bool                      `json:"hasParent"`
	HealthStatus                   *EpicHealthStatus         `json:"healthStatus"`
	Id                             string                    `json:"id"`
	Iid                            string                    `json:"iid"`
	Issues                         *EpicIssueConnection      `json:"issues"`
	Labels                         *LabelConnection          `json:"labels"`
	Notes                          NoteConnection            `json:"notes"`
	Parent                         *Epic                     `json:"parent"`
	Participants                   *UserCoreConnection       `json:"participants"`
	Reference                      string                    `json:"reference"`
	RelationPath                   *string                   `json:"relationPath"`
	RelativePosition               *int64                    `json:"relativePosition"`
	StartDate                      *Time                     `json:"startDate"`
	StartDateFixed                 *Time                     `json:"startDateFixed"`
	StartDateFromInheritedSource   *Time                     `json:"startDateFromInheritedSource"`
	StartDateFromMilestones        *Time                     `json:"startDateFromMilestones"`
	StartDateIsFixed               *bool                     `json:"startDateIsFixed"`
	State                          EnumEpicState             `json:"state"`
	Subscribed                     bool                      `json:"subscribed"`
	TextColor                      *string                   `json:"textColor"`
	Title                          *string                   `json:"title"`
	TitleHtml                      *string                   `json:"titleHtml"`
	UpdatedAt                      *Time                     `json:"updatedAt"`
	Upvotes                        int64                     `json:"upvotes"`
	UserDiscussionsCount           int64                     `json:"userDiscussionsCount"`
	UserNotesCount                 int64                     `json:"userNotesCount"`
	UserPermissions                EpicPermissions           `json:"userPermissions"`
	UserPreferences                *BoardEpicUserPreferences `json:"userPreferences"`
	WebPath                        string                    `json:"webPath"`
	WebUrl                         string                    `json:"webUrl"`
}

type BoardEpicConnection struct {
	Count    int64            `json:"count"`
	Edges    []*BoardEpicEdge `json:"edges"`
	Nodes    []*BoardEpic     `json:"nodes"`
	PageInfo PageInfo         `json:"pageInfo"`
}

type BoardEpicCreateInput struct {
	BoardId          BoardsEpicBoardID `json:"boardId"`
	ClientMutationId *string           `json:"clientMutationId"`
	GroupPath        string            `json:"groupPath"`
	ListId           BoardsEpicListID  `json:"listId"`
	Title            string            `json:"title"`
}

type BoardEpicCreatePayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Epic             *Epic    `json:"epic"`
	Errors           []string `json:"errors"`
}

type BoardEpicEdge struct {
	Cursor string     `json:"cursor"`
	Node   *BoardEpic `json:"node"`
}

type BoardEpicUserPreferences struct {
	Collapsed bool `json:"collapsed"`
}

type BoardIssueInput struct {
	AssigneeUsername    []*string                `json:"assigneeUsername"`
	AssigneeWildcardId  *EnumAssigneeWildcardId  `json:"assigneeWildcardId"`
	AuthorUsername      *string                  `json:"authorUsername"`
	Confidential        *bool                    `json:"confidential"`
	EpicId              *EpicID                  `json:"epicId"`
	EpicWildcardId      *EnumEpicWildcardId      `json:"epicWildcardId"`
	HealthStatusFilter  *EnumHealthStatusFilter  `json:"healthStatusFilter"`
	Iids                []string                 `json:"iids"`
	IterationCadenceId  []IterationsCadenceID    `json:"iterationCadenceId"`
	IterationId         []IterationID            `json:"iterationId"`
	IterationTitle      *string                  `json:"iterationTitle"`
	IterationWildcardId *EnumIterationWildcardId `json:"iterationWildcardId"`
	LabelName           []*string                `json:"labelName"`
	MilestoneTitle      *string                  `json:"milestoneTitle"`
	MilestoneWildcardId *EnumMilestoneWildcardId `json:"milestoneWildcardId"`
	MyReactionEmoji     *string                  `json:"myReactionEmoji"`
	Not                 *NegatedBoardIssueInput  `json:"not"`
	Or                  *UnionedIssueFilterInput `json:"or"`
	ReleaseTag          *string                  `json:"releaseTag"`
	Search              *string                  `json:"search"`
	Types               []EnumIssueType          `json:"types"`
	Weight              *string                  `json:"weight"`
	WeightWildcardId    *EnumWeightWildcardId    `json:"weightWildcardId"`
}

type BoardList struct {
	Assignee         *UserCore            `json:"assignee"`
	Collapsed        *bool                `json:"collapsed"`
	Id               string               `json:"id"`
	Issues           *IssueConnection     `json:"issues"`
	IssuesCount      *int64               `json:"issuesCount"`
	Iteration        *Iteration           `json:"iteration"`
	Label            *Label               `json:"label"`
	LimitMetric      *EnumListLimitMetric `json:"limitMetric"`
	ListType         string               `json:"listType"`
	MaxIssueCount    *int64               `json:"maxIssueCount"`
	MaxIssueWeight   *int64               `json:"maxIssueWeight"`
	Milestone        *Milestone           `json:"milestone"`
	Position         *int64               `json:"position"`
	Title            string               `json:"title"`
	TotalIssueWeight *BigInt              `json:"totalIssueWeight"`
	TotalWeight      *int64               `json:"totalWeight"`
}

type BoardListConnection struct {
	Edges    []*BoardListEdge `json:"edges"`
	Nodes    []*BoardList     `json:"nodes"`
	PageInfo PageInfo         `json:"pageInfo"`
}

type BoardListCreateInput struct {
	AssigneeId       *UserID      `json:"assigneeId"`
	Backlog          *bool        `json:"backlog"`
	BoardId          BoardID      `json:"boardId"`
	ClientMutationId *string      `json:"clientMutationId"`
	IterationId      *IterationID `json:"iterationId"`
	LabelId          *LabelID     `json:"labelId"`
	MilestoneId      *MilestoneID `json:"milestoneId"`
}

type BoardListCreatePayload struct {
	ClientMutationId *string    `json:"clientMutationId"`
	Errors           []string   `json:"errors"`
	List             *BoardList `json:"list"`
}

type BoardListEdge struct {
	Cursor string     `json:"cursor"`
	Node   *BoardList `json:"node"`
}

type BoardListUpdateLimitMetricsInput struct {
	ClientMutationId *string              `json:"clientMutationId"`
	LimitMetric      *EnumListLimitMetric `json:"limitMetric"`
	ListId           ListID               `json:"listId"`
	MaxIssueCount    *int64               `json:"maxIssueCount"`
	MaxIssueWeight   *int64               `json:"maxIssueWeight"`
}

type BoardListUpdateLimitMetricsPayload struct {
	ClientMutationId *string    `json:"clientMutationId"`
	Errors           []string   `json:"errors"`
	List             *BoardList `json:"list"`
}

type Branch struct {
	Commit *Commit `json:"commit"`
	Name   string  `json:"name"`
}

type BranchProtection struct {
	AllowForcePush            bool                            `json:"allowForcePush"`
	CodeOwnerApprovalRequired bool                            `json:"codeOwnerApprovalRequired"`
	MergeAccessLevels         *MergeAccessLevelConnection     `json:"mergeAccessLevels"`
	PushAccessLevels          *PushAccessLevelConnection      `json:"pushAccessLevels"`
	UnprotectAccessLevels     *UnprotectAccessLevelConnection `json:"unprotectAccessLevels"`
}

type BranchRule struct {
	ApprovalRules         *ApprovalProjectRuleConnection `json:"approvalRules"`
	BranchProtection      *BranchProtection              `json:"branchProtection"`
	CreatedAt             Time                           `json:"createdAt"`
	ExternalStatusChecks  *ExternalStatusCheckConnection `json:"externalStatusChecks"`
	IsDefault             bool                           `json:"isDefault"`
	IsProtected           bool                           `json:"isProtected"`
	MatchingBranchesCount int64                          `json:"matchingBranchesCount"`
	Name                  string                         `json:"name"`
	UpdatedAt             Time                           `json:"updatedAt"`
}

type BranchRuleConnection struct {
	Edges    []*BranchRuleEdge `json:"edges"`
	Nodes    []*BranchRule     `json:"nodes"`
	PageInfo PageInfo          `json:"pageInfo"`
}

type BranchRuleEdge struct {
	Cursor string      `json:"cursor"`
	Node   *BranchRule `json:"node"`
}

type BuildForecastInput struct {
	ClientMutationId *string  `json:"clientMutationId"`
	ContextId        GlobalID `json:"contextId"`
	Horizon          int64    `json:"horizon"`
	Type             string   `json:"type"`
}

type BuildForecastPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	Forecast         Forecast `json:"forecast"`
}

type BulkDestroyJobArtifactsInput struct {
	ClientMutationId *string           `json:"clientMutationId"`
	Ids              []CiJobArtifactID `json:"ids"`
	ProjectId        ProjectID         `json:"projectId"`
}

type BulkDestroyJobArtifactsPayload struct {
	ClientMutationId *string           `json:"clientMutationId"`
	DestroyedCount   *int64            `json:"destroyedCount"`
	DestroyedIds     []CiJobArtifactID `json:"destroyedIds"`
	Errors           []string          `json:"errors"`
}

type BulkEnableDevopsAdoptionNamespacesInput struct {
	ClientMutationId   *string       `json:"clientMutationId"`
	DisplayNamespaceId *NamespaceID  `json:"displayNamespaceId"`
	NamespaceIds       []NamespaceID `json:"namespaceIds"`
}

type BulkEnableDevopsAdoptionNamespacesPayload struct {
	ClientMutationId  *string                          `json:"clientMutationId"`
	EnabledNamespaces []DevopsAdoptionEnabledNamespace `json:"enabledNamespaces"`
	Errors            []string                         `json:"errors"`
}

type BulkRunnerDeleteInput struct {
	ClientMutationId *string      `json:"clientMutationId"`
	Ids              []CiRunnerID `json:"ids"`
}

type BulkRunnerDeletePayload struct {
	ClientMutationId *string      `json:"clientMutationId"`
	DeletedCount     *int64       `json:"deletedCount"`
	DeletedIds       []CiRunnerID `json:"deletedIds"`
	Errors           []string     `json:"errors"`
}

type BurnupChartDailyTotals struct {
	CompletedCount  int64       `json:"completedCount"`
	CompletedWeight int64       `json:"completedWeight"`
	Date            ISO8601Date `json:"date"`
	ScopeCount      int64       `json:"scopeCount"`
	ScopeWeight     int64       `json:"scopeWeight"`
}

type CatalogResourcesCreateInput struct {
	ClientMutationId *string `json:"clientMutationId"`
	ProjectPath      string  `json:"projectPath"`
}

type CatalogResourcesCreatePayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
}

type CiAiGenerateConfigInput struct {
	ClientMutationId *string `json:"clientMutationId"`
	ProjectPath      string  `json:"projectPath"`
	UserContent      string  `json:"userContent"`
}

type CiAiGenerateConfigPayload struct {
	ClientMutationId *string        `json:"clientMutationId"`
	Errors           []string       `json:"errors"`
	UserMessage      *AiMessageType `json:"userMessage"`
}

type CiApplicationSettings struct {
	KeepLatestArtifact *bool `json:"keepLatestArtifact"`
}

type CiBuildNeed struct {
	Id   string  `json:"id"`
	Name *string `json:"name"`
}

type CiBuildNeedConnection struct {
	Edges    []*CiBuildNeedEdge `json:"edges"`
	Nodes    []*CiBuildNeed     `json:"nodes"`
	PageInfo PageInfo           `json:"pageInfo"`
}

type CiBuildNeedEdge struct {
	Cursor string       `json:"cursor"`
	Node   *CiBuildNeed `json:"node"`
}

type CiCatalogResource struct {
	Description            *string            `json:"description"`
	ForksCount             int64              `json:"forksCount"`
	Icon                   *string            `json:"icon"`
	Id                     string             `json:"id"`
	LatestVersion          *Release           `json:"latestVersion"`
	Name                   *string            `json:"name"`
	OpenIssuesCount        int64              `json:"openIssuesCount"`
	OpenMergeRequestsCount int64              `json:"openMergeRequestsCount"`
	ReadmeHtml             string             `json:"readmeHtml"`
	RootNamespace          *Namespace         `json:"rootNamespace"`
	StarCount              int64              `json:"starCount"`
	Versions               *ReleaseConnection `json:"versions"`
	WebPath                *string            `json:"webPath"`
}

type CiCatalogResourceConnection struct {
	Count    int64                    `json:"count"`
	Edges    []*CiCatalogResourceEdge `json:"edges"`
	Nodes    []*CiCatalogResource     `json:"nodes"`
	PageInfo PageInfo                 `json:"pageInfo"`
}

type CiCatalogResourceEdge struct {
	Cursor string             `json:"cursor"`
	Node   *CiCatalogResource `json:"node"`
}

type CiConfig struct {
	Errors     []string                 `json:"errors"`
	Includes   []CiConfigInclude        `json:"includes"`
	MergedYaml *string                  `json:"mergedYaml"`
	Stages     *CiConfigStageConnection `json:"stages"`
	Status     *EnumCiConfigStatus      `json:"status"`
	Warnings   []string                 `json:"warnings"`
}

type CiConfigGroup struct {
	Jobs *CiConfigJobConnection `json:"jobs"`
	Name *string                `json:"name"`
	Size *int64                 `json:"size"`
}

type CiConfigGroupConnection struct {
	Edges    []*CiConfigGroupEdge `json:"edges"`
	Nodes    []*CiConfigGroup     `json:"nodes"`
	PageInfo PageInfo             `json:"pageInfo"`
}

type CiConfigGroupEdge struct {
	Cursor string         `json:"cursor"`
	Node   *CiConfigGroup `json:"node"`
}

type CiConfigInclude struct {
	Blob           *string                  `json:"blob"`
	ContextProject *string                  `json:"contextProject"`
	ContextSha     *string                  `json:"contextSha"`
	Extra          *JSON                    `json:"extra"`
	Location       *string                  `json:"location"`
	Raw            *string                  `json:"raw"`
	Type           *EnumCiConfigIncludeType `json:"type"`
}

type CiConfigJob struct {
	AfterScript  []string                `json:"afterScript"`
	AllowFailure *bool                   `json:"allowFailure"`
	BeforeScript []string                `json:"beforeScript"`
	Environment  *string                 `json:"environment"`
	Except       *CiConfigJobRestriction `json:"except"`
	GroupName    *string                 `json:"groupName"`
	Name         *string                 `json:"name"`
	Needs        *CiConfigNeedConnection `json:"needs"`
	Only         *CiConfigJobRestriction `json:"only"`
	Script       []string                `json:"script"`
	Stage        *string                 `json:"stage"`
	Tags         []string                `json:"tags"`
	When         *string                 `json:"when"`
}

type CiConfigJobConnection struct {
	Edges    []*CiConfigJobEdge `json:"edges"`
	Nodes    []*CiConfigJob     `json:"nodes"`
	PageInfo PageInfo           `json:"pageInfo"`
}

type CiConfigJobEdge struct {
	Cursor string       `json:"cursor"`
	Node   *CiConfigJob `json:"node"`
}

type CiConfigJobRestriction struct {
	Refs []string `json:"refs"`
}

type CiConfigNeed struct {
	Name *string `json:"name"`
}

type CiConfigNeedConnection struct {
	Edges    []*CiConfigNeedEdge `json:"edges"`
	Nodes    []*CiConfigNeed     `json:"nodes"`
	PageInfo PageInfo            `json:"pageInfo"`
}

type CiConfigNeedEdge struct {
	Cursor string        `json:"cursor"`
	Node   *CiConfigNeed `json:"node"`
}

type CiConfigStage struct {
	Groups *CiConfigGroupConnection `json:"groups"`
	Name   *string                  `json:"name"`
}

type CiConfigStageConnection struct {
	Edges    []*CiConfigStageEdge `json:"edges"`
	Nodes    []*CiConfigStage     `json:"nodes"`
	PageInfo PageInfo             `json:"pageInfo"`
}

type CiConfigStageEdge struct {
	Cursor string         `json:"cursor"`
	Node   *CiConfigStage `json:"node"`
}

type CiConfigVariable struct {
	Description  *string  `json:"description"`
	Key          *string  `json:"key"`
	Value        *string  `json:"value"`
	ValueOptions []string `json:"valueOptions"`
}

type CiFreezePeriod struct {
	CronTimezone *string                  `json:"cronTimezone"`
	EndCron      string                   `json:"endCron"`
	EndTime      *Time                    `json:"endTime"`
	StartCron    string                   `json:"startCron"`
	StartTime    *Time                    `json:"startTime"`
	Status       EnumCiFreezePeriodStatus `json:"status"`
}

type CiGroup struct {
	DetailedStatus *DetailedStatus  `json:"detailedStatus"`
	Id             string           `json:"id"`
	Jobs           *CiJobConnection `json:"jobs"`
	Name           *string          `json:"name"`
	Size           *int64           `json:"size"`
}

type CiGroupConnection struct {
	Edges    []*CiGroupEdge `json:"edges"`
	Nodes    []*CiGroup     `json:"nodes"`
	PageInfo PageInfo       `json:"pageInfo"`
}

type CiGroupEdge struct {
	Cursor string   `json:"cursor"`
	Node   *CiGroup `json:"node"`
}

type CiGroupEnvironmentScope struct {
	Name *string `json:"name"`
}

type CiGroupEnvironmentScopeConnection struct {
	Edges    []*CiGroupEnvironmentScopeEdge `json:"edges"`
	Nodes    []*CiGroupEnvironmentScope     `json:"nodes"`
	PageInfo PageInfo                       `json:"pageInfo"`
}

type CiGroupEnvironmentScopeEdge struct {
	Cursor string                   `json:"cursor"`
	Node   *CiGroupEnvironmentScope `json:"node"`
}

type CiGroupVariable struct {
	Description      *string             `json:"description"`
	EnvironmentScope *string             `json:"environmentScope"`
	Id               string              `json:"id"`
	Key              *string             `json:"key"`
	Masked           *bool               `json:"masked"`
	Protected        *bool               `json:"protected"`
	Raw              *bool               `json:"raw"`
	Value            *string             `json:"value"`
	VariableType     *EnumCiVariableType `json:"variableType"`
}

type CiGroupVariableConnection struct {
	Edges    []*CiGroupVariableEdge `json:"edges"`
	Limit    int64                  `json:"limit"`
	Nodes    []*CiGroupVariable     `json:"nodes"`
	PageInfo PageInfo               `json:"pageInfo"`
}

type CiGroupVariableEdge struct {
	Cursor string           `json:"cursor"`
	Node   *CiGroupVariable `json:"node"`
}

type CiInstanceVariable struct {
	EnvironmentScope *string             `json:"environmentScope"`
	Id               string              `json:"id"`
	Key              *string             `json:"key"`
	Masked           *bool               `json:"masked"`
	Protected        *bool               `json:"protected"`
	Raw              *bool               `json:"raw"`
	Value            *string             `json:"value"`
	VariableType     *EnumCiVariableType `json:"variableType"`
}

type CiInstanceVariableConnection struct {
	Edges    []*CiInstanceVariableEdge `json:"edges"`
	Nodes    []*CiInstanceVariable     `json:"nodes"`
	PageInfo PageInfo                  `json:"pageInfo"`
}

type CiInstanceVariableEdge struct {
	Cursor string              `json:"cursor"`
	Node   *CiInstanceVariable `json:"node"`
}

type CiJob struct {
	Active                   bool                        `json:"active"`
	AiFailureAnalysis        *string                     `json:"aiFailureAnalysis"`
	AllowFailure             bool                        `json:"allowFailure"`
	Artifacts                *CiJobArtifactConnection    `json:"artifacts"`
	BrowseArtifactsPath      *string                     `json:"browseArtifactsPath"`
	CanPlayJob               bool                        `json:"canPlayJob"`
	Cancelable               bool                        `json:"cancelable"`
	CommitPath               *string                     `json:"commitPath"`
	Coverage                 *float64                    `json:"coverage"`
	CreatedAt                Time                        `json:"createdAt"`
	CreatedByTag             bool                        `json:"createdByTag"`
	DetailedStatus           *DetailedStatus             `json:"detailedStatus"`
	DownstreamPipeline       *Pipeline                   `json:"downstreamPipeline"`
	Duration                 *int64                      `json:"duration"`
	ErasedAt                 *Time                       `json:"erasedAt"`
	FailureMessage           *string                     `json:"failureMessage"`
	FinishedAt               *Time                       `json:"finishedAt"`
	Id                       *JobID                      `json:"id"`
	Kind                     EnumCiJobKind               `json:"kind"`
	ManualJob                *bool                       `json:"manualJob"`
	ManualVariables          *CiManualVariableConnection `json:"manualVariables"`
	Name                     *string                     `json:"name"`
	Needs                    *CiBuildNeedConnection      `json:"needs"`
	Pipeline                 *Pipeline                   `json:"pipeline"`
	PlayPath                 *string                     `json:"playPath"`
	Playable                 bool                        `json:"playable"`
	PreviousStageJobsOrNeeds *JobNeedUnionConnection     `json:"previousStageJobsOrNeeds"`
	Project                  *Project                    `json:"project"`
	QueuedAt                 *Time                       `json:"queuedAt"`
	QueuedDuration           *Duration                   `json:"queuedDuration"`
	RefName                  *string                     `json:"refName"`
	RefPath                  *string                     `json:"refPath"`
	Retried                  *bool                       `json:"retried"`
	Retryable                bool                        `json:"retryable"`
	Runner                   *CiRunner                   `json:"runner"`
	RunnerManager            *CiRunnerManager            `json:"runnerManager"`
	Scheduled                bool                        `json:"scheduled"`
	ScheduledAt              *Time                       `json:"scheduledAt"`
	SchedulingType           *string                     `json:"schedulingType"`
	ShortSha                 string                      `json:"shortSha"`
	Stage                    *CiStage                    `json:"stage"`
	StartedAt                *Time                       `json:"startedAt"`
	Status                   *EnumCiJobStatus            `json:"status"`
	Stuck                    bool                        `json:"stuck"`
	Tags                     []string                    `json:"tags"`
	Trace                    *CiJobTrace                 `json:"trace"`
	Triggered                *bool                       `json:"triggered"`
	UserPermissions          JobPermissions              `json:"userPermissions"`
	WebPath                  *string                     `json:"webPath"`
}

type CiJobArtifact struct {
	DownloadPath *string                  `json:"downloadPath"`
	ExpireAt     *Time                    `json:"expireAt"`
	FileType     *EnumJobArtifactFileType `json:"fileType"`
	Id           CiJobArtifactID          `json:"id"`
	Name         *string                  `json:"name"`
	Size         BigInt                   `json:"size"`
}

type CiJobArtifactConnection struct {
	Edges    []*CiJobArtifactEdge `json:"edges"`
	Nodes    []*CiJobArtifact     `json:"nodes"`
	PageInfo PageInfo             `json:"pageInfo"`
}

type CiJobArtifactEdge struct {
	Cursor string         `json:"cursor"`
	Node   *CiJobArtifact `json:"node"`
}

type CiJobConnection struct {
	Count    int64        `json:"count"`
	Edges    []*CiJobEdge `json:"edges"`
	Nodes    []*CiJob     `json:"nodes"`
	PageInfo PageInfo     `json:"pageInfo"`
}

type CiJobEdge struct {
	Cursor string `json:"cursor"`
	Node   *CiJob `json:"node"`
}

type CiJobTokenScopeAddProjectInput struct {
	ClientMutationId  *string                       `json:"clientMutationId"`
	Direction         *EnumCiJobTokenScopeDirection `json:"direction"`
	ProjectPath       string                        `json:"projectPath"`
	TargetProjectPath string                        `json:"targetProjectPath"`
}

type CiJobTokenScopeAddProjectPayload struct {
	CiJobTokenScope  *CiJobTokenScopeType `json:"ciJobTokenScope"`
	ClientMutationId *string              `json:"clientMutationId"`
	Errors           []string             `json:"errors"`
}

type CiJobTokenScopeRemoveProjectInput struct {
	ClientMutationId  *string                       `json:"clientMutationId"`
	Direction         *EnumCiJobTokenScopeDirection `json:"direction"`
	ProjectPath       string                        `json:"projectPath"`
	TargetProjectPath string                        `json:"targetProjectPath"`
}

type CiJobTokenScopeRemoveProjectPayload struct {
	CiJobTokenScope  *CiJobTokenScopeType `json:"ciJobTokenScope"`
	ClientMutationId *string              `json:"clientMutationId"`
	Errors           []string             `json:"errors"`
}

type CiJobTokenScopeType struct {
	InboundAllowlist  ProjectConnection `json:"inboundAllowlist"`
	OutboundAllowlist ProjectConnection `json:"outboundAllowlist"`
	Projects          ProjectConnection `json:"projects"`
}

type CiJobTrace struct {
	HtmlSummary string `json:"htmlSummary"`
}

type CiJobsDurationStatistics struct {
	P50 *Duration `json:"p50"`
	P75 *Duration `json:"p75"`
	P90 *Duration `json:"p90"`
	P95 *Duration `json:"p95"`
	P99 *Duration `json:"p99"`
}

type CiJobsStatistics struct {
	QueuedDuration *CiJobsDurationStatistics `json:"queuedDuration"`
}

type CiManualVariable struct {
	EnvironmentScope *string             `json:"environmentScope"`
	Id               string              `json:"id"`
	Key              *string             `json:"key"`
	Raw              *bool               `json:"raw"`
	Value            *string             `json:"value"`
	VariableType     *EnumCiVariableType `json:"variableType"`
}

type CiManualVariableConnection struct {
	Edges    []*CiManualVariableEdge `json:"edges"`
	Nodes    []*CiManualVariable     `json:"nodes"`
	PageInfo PageInfo                `json:"pageInfo"`
}

type CiManualVariableEdge struct {
	Cursor string            `json:"cursor"`
	Node   *CiManualVariable `json:"node"`
}

type CiMinutesNamespaceMonthlyUsage struct {
	Minutes               *int64                                  `json:"minutes"`
	Month                 *string                                 `json:"month"`
	MonthIso8601          *ISO8601Date                            `json:"monthIso8601"`
	Projects              *CiMinutesProjectMonthlyUsageConnection `json:"projects"`
	SharedRunnersDuration *int64                                  `json:"sharedRunnersDuration"`
}

type CiMinutesNamespaceMonthlyUsageConnection struct {
	Edges    []*CiMinutesNamespaceMonthlyUsageEdge `json:"edges"`
	Nodes    []*CiMinutesNamespaceMonthlyUsage     `json:"nodes"`
	PageInfo PageInfo                              `json:"pageInfo"`
}

type CiMinutesNamespaceMonthlyUsageEdge struct {
	Cursor string                          `json:"cursor"`
	Node   *CiMinutesNamespaceMonthlyUsage `json:"node"`
}

type CiMinutesProjectMonthlyUsage struct {
	Minutes               *int64   `json:"minutes"`
	Name                  *string  `json:"name"`
	Project               *Project `json:"project"`
	SharedRunnersDuration *int64   `json:"sharedRunnersDuration"`
}

type CiMinutesProjectMonthlyUsageConnection struct {
	Edges    []*CiMinutesProjectMonthlyUsageEdge `json:"edges"`
	Nodes    []*CiMinutesProjectMonthlyUsage     `json:"nodes"`
	PageInfo PageInfo                            `json:"pageInfo"`
}

type CiMinutesProjectMonthlyUsageEdge struct {
	Cursor string                        `json:"cursor"`
	Node   *CiMinutesProjectMonthlyUsage `json:"node"`
}

type CiProjectVariable struct {
	Description      *string             `json:"description"`
	EnvironmentScope *string             `json:"environmentScope"`
	Id               string              `json:"id"`
	Key              *string             `json:"key"`
	Masked           *bool               `json:"masked"`
	Protected        *bool               `json:"protected"`
	Raw              *bool               `json:"raw"`
	Value            *string             `json:"value"`
	VariableType     *EnumCiVariableType `json:"variableType"`
}

type CiProjectVariableConnection struct {
	Edges    []*CiProjectVariableEdge `json:"edges"`
	Limit    int64                    `json:"limit"`
	Nodes    []*CiProjectVariable     `json:"nodes"`
	PageInfo PageInfo                 `json:"pageInfo"`
}

type CiProjectVariableEdge struct {
	Cursor string             `json:"cursor"`
	Node   *CiProjectVariable `json:"node"`
}

type CiRunner struct {
	AccessLevel                      EnumCiRunnerAccessLevel         `json:"accessLevel"`
	Active                           bool                            `json:"active"`
	AdminUrl                         *string                         `json:"adminUrl"`
	ArchitectureName                 *string                         `json:"architectureName"`
	ContactedAt                      *Time                           `json:"contactedAt"`
	CreatedAt                        *Time                           `json:"createdAt"`
	CreatedBy                        *UserCore                       `json:"createdBy"`
	Description                      *string                         `json:"description"`
	EditAdminUrl                     *string                         `json:"editAdminUrl"`
	EphemeralAuthenticationToken     *string                         `json:"ephemeralAuthenticationToken"`
	EphemeralRegisterUrl             *string                         `json:"ephemeralRegisterUrl"`
	ExecutorName                     *string                         `json:"executorName"`
	Groups                           *GroupConnection                `json:"groups"`
	Id                               CiRunnerID                      `json:"id"`
	IpAddress                        *string                         `json:"ipAddress"`
	JobCount                         *int64                          `json:"jobCount"`
	JobExecutionStatus               *EnumCiRunnerJobExecutionStatus `json:"jobExecutionStatus"`
	Jobs                             *CiJobConnection                `json:"jobs"`
	Locked                           *bool                           `json:"locked"`
	MaintenanceNote                  *string                         `json:"maintenanceNote"`
	MaintenanceNoteHtml              *string                         `json:"maintenanceNoteHtml"`
	Managers                         *CiRunnerManagerConnection      `json:"managers"`
	MaximumTimeout                   *int64                          `json:"maximumTimeout"`
	OwnerProject                     *Project                        `json:"ownerProject"`
	Paused                           bool                            `json:"paused"`
	PlatformName                     *string                         `json:"platformName"`
	PrivateProjectsMinutesCostFactor *float64                        `json:"privateProjectsMinutesCostFactor"`
	ProjectCount                     *int64                          `json:"projectCount"`
	Projects                         *ProjectConnection              `json:"projects"`
	PublicProjectsMinutesCostFactor  *float64                        `json:"publicProjectsMinutesCostFactor"`
	RegisterAdminUrl                 *string                         `json:"registerAdminUrl"`
	Revision                         *string                         `json:"revision"`
	RunUntagged                      bool                            `json:"runUntagged"`
	RunnerType                       EnumCiRunnerType                `json:"runnerType"`
	ShortSha                         *string                         `json:"shortSha"`
	Status                           EnumCiRunnerStatus              `json:"status"`
	TagList                          []string                        `json:"tagList"`
	TokenExpiresAt                   *Time                           `json:"tokenExpiresAt"`
	UpgradeStatus                    *EnumCiRunnerUpgradeStatus      `json:"upgradeStatus"`
	UserPermissions                  RunnerPermissions               `json:"userPermissions"`
	Version                          *string                         `json:"version"`
}

type CiRunnerConnection struct {
	Count          int64             `json:"count"`
	Edges          []*CiRunnerEdge   `json:"edges"`
	JobsStatistics *CiJobsStatistics `json:"jobsStatistics"`
	Nodes          []*CiRunner       `json:"nodes"`
	PageInfo       PageInfo          `json:"pageInfo"`
}

type CiRunnerEdge struct {
	Cursor  string    `json:"cursor"`
	EditUrl *string   `json:"editUrl"`
	Node    *CiRunner `json:"node"`
	WebUrl  *string   `json:"webUrl"`
}

type CiRunnerManager struct {
	ArchitectureName *string                    `json:"architectureName"`
	ContactedAt      *Time                      `json:"contactedAt"`
	CreatedAt        *Time                      `json:"createdAt"`
	ExecutorName     *string                    `json:"executorName"`
	Id               CiRunnerManagerID          `json:"id"`
	IpAddress        *string                    `json:"ipAddress"`
	PlatformName     *string                    `json:"platformName"`
	Revision         *string                    `json:"revision"`
	Runner           *CiRunner                  `json:"runner"`
	Status           EnumCiRunnerStatus         `json:"status"`
	SystemId         string                     `json:"systemId"`
	UpgradeStatus    *EnumCiRunnerUpgradeStatus `json:"upgradeStatus"`
	Version          *string                    `json:"version"`
}

type CiRunnerManagerConnection struct {
	Count    int64                  `json:"count"`
	Edges    []*CiRunnerManagerEdge `json:"edges"`
	Nodes    []*CiRunnerManager     `json:"nodes"`
	PageInfo PageInfo               `json:"pageInfo"`
}

type CiRunnerManagerEdge struct {
	Cursor string           `json:"cursor"`
	Node   *CiRunnerManager `json:"node"`
}

type CiSecureFileRegistry struct {
	CiSecureFileId         string                     `json:"ciSecureFileId"`
	CreatedAt              *Time                      `json:"createdAt"`
	Id                     string                     `json:"id"`
	LastSyncFailure        *string                    `json:"lastSyncFailure"`
	LastSyncedAt           *Time                      `json:"lastSyncedAt"`
	RetryAt                *Time                      `json:"retryAt"`
	RetryCount             *int64                     `json:"retryCount"`
	State                  *EnumRegistryState         `json:"state"`
	VerificationChecksum   *string                    `json:"verificationChecksum"`
	VerificationFailure    *string                    `json:"verificationFailure"`
	VerificationRetryAt    *Time                      `json:"verificationRetryAt"`
	VerificationRetryCount *int64                     `json:"verificationRetryCount"`
	VerificationStartedAt  *Time                      `json:"verificationStartedAt"`
	VerificationState      *EnumVerificationStateEnum `json:"verificationState"`
	VerifiedAt             *Time                      `json:"verifiedAt"`
}

type CiSecureFileRegistryConnection struct {
	Edges    []*CiSecureFileRegistryEdge `json:"edges"`
	Nodes    []*CiSecureFileRegistry     `json:"nodes"`
	PageInfo PageInfo                    `json:"pageInfo"`
}

type CiSecureFileRegistryEdge struct {
	Cursor string                `json:"cursor"`
	Node   *CiSecureFileRegistry `json:"node"`
}

type CiStage struct {
	DetailedStatus *DetailedStatus    `json:"detailedStatus"`
	Groups         *CiGroupConnection `json:"groups"`
	Id             string             `json:"id"`
	Jobs           *CiJobConnection   `json:"jobs"`
	Name           *string            `json:"name"`
	Status         *string            `json:"status"`
}

type CiStageConnection struct {
	Edges    []*CiStageEdge `json:"edges"`
	Nodes    []*CiStage     `json:"nodes"`
	PageInfo PageInfo       `json:"pageInfo"`
}

type CiStageEdge struct {
	Cursor string   `json:"cursor"`
	Node   *CiStage `json:"node"`
}

type CiTemplate struct {
	Content string `json:"content"`
	Name    string `json:"name"`
}

type CiVariableInput struct {
	Key   string `json:"key"`
	Value string `json:"value"`
}

type ClusterAgent struct {
	ActivityEvents      *ClusterAgentActivityEventConnection   `json:"activityEvents"`
	Connections         *ConnectedAgentConnection              `json:"connections"`
	CreatedAt           *Time                                  `json:"createdAt"`
	CreatedByUser       *UserCore                              `json:"createdByUser"`
	Id                  string                                 `json:"id"`
	Name                *string                                `json:"name"`
	Project             *Project                               `json:"project"`
	Tokens              *ClusterAgentTokenConnection           `json:"tokens"`
	UpdatedAt           *Time                                  `json:"updatedAt"`
	VulnerabilityImages *VulnerabilityContainerImageConnection `json:"vulnerabilityImages"`
	WebPath             *string                                `json:"webPath"`
}

type ClusterAgentActivityEvent struct {
	AgentToken *ClusterAgentToken `json:"agentToken"`
	Kind       *string            `json:"kind"`
	Level      *string            `json:"level"`
	RecordedAt *Time              `json:"recordedAt"`
	User       *UserCore          `json:"user"`
}

type ClusterAgentActivityEventConnection struct {
	Count    int64                            `json:"count"`
	Edges    []*ClusterAgentActivityEventEdge `json:"edges"`
	Nodes    []*ClusterAgentActivityEvent     `json:"nodes"`
	PageInfo PageInfo                         `json:"pageInfo"`
}

type ClusterAgentActivityEventEdge struct {
	Cursor string                     `json:"cursor"`
	Node   *ClusterAgentActivityEvent `json:"node"`
}

type ClusterAgentAuthorizationCiAccess struct {
	Agent  *ClusterAgent `json:"agent"`
	Config *JSON         `json:"config"`
}

type ClusterAgentAuthorizationCiAccessConnection struct {
	Edges    []*ClusterAgentAuthorizationCiAccessEdge `json:"edges"`
	Nodes    []*ClusterAgentAuthorizationCiAccess     `json:"nodes"`
	PageInfo PageInfo                                 `json:"pageInfo"`
}

type ClusterAgentAuthorizationCiAccessEdge struct {
	Cursor string                             `json:"cursor"`
	Node   *ClusterAgentAuthorizationCiAccess `json:"node"`
}

type ClusterAgentAuthorizationUserAccess struct {
	Agent  *ClusterAgent `json:"agent"`
	Config *JSON         `json:"config"`
}

type ClusterAgentAuthorizationUserAccessConnection struct {
	Edges    []*ClusterAgentAuthorizationUserAccessEdge `json:"edges"`
	Nodes    []*ClusterAgentAuthorizationUserAccess     `json:"nodes"`
	PageInfo PageInfo                                   `json:"pageInfo"`
}

type ClusterAgentAuthorizationUserAccessEdge struct {
	Cursor string                               `json:"cursor"`
	Node   *ClusterAgentAuthorizationUserAccess `json:"node"`
}

type ClusterAgentConnection struct {
	Count    int64               `json:"count"`
	Edges    []*ClusterAgentEdge `json:"edges"`
	Nodes    []*ClusterAgent     `json:"nodes"`
	PageInfo PageInfo            `json:"pageInfo"`
}

type ClusterAgentDeleteInput struct {
	ClientMutationId *string         `json:"clientMutationId"`
	Id               ClustersAgentID `json:"id"`
}

type ClusterAgentDeletePayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
}

type ClusterAgentEdge struct {
	Cursor string        `json:"cursor"`
	Node   *ClusterAgent `json:"node"`
}

type ClusterAgentToken struct {
	ClusterAgent  *ClusterAgent         `json:"clusterAgent"`
	CreatedAt     *Time                 `json:"createdAt"`
	CreatedByUser *UserCore             `json:"createdByUser"`
	Description   *string               `json:"description"`
	Id            ClustersAgentTokenID  `json:"id"`
	LastUsedAt    *Time                 `json:"lastUsedAt"`
	Name          *string               `json:"name"`
	Status        *EnumAgentTokenStatus `json:"status"`
}

type ClusterAgentTokenConnection struct {
	Count    int64                    `json:"count"`
	Edges    []*ClusterAgentTokenEdge `json:"edges"`
	Nodes    []*ClusterAgentToken     `json:"nodes"`
	PageInfo PageInfo                 `json:"pageInfo"`
}

type ClusterAgentTokenCreateInput struct {
	ClientMutationId *string         `json:"clientMutationId"`
	ClusterAgentId   ClustersAgentID `json:"clusterAgentId"`
	Description      *string         `json:"description"`
	Name             string          `json:"name"`
}

type ClusterAgentTokenCreatePayload struct {
	ClientMutationId *string            `json:"clientMutationId"`
	Errors           []string           `json:"errors"`
	Secret           *string            `json:"secret"`
	Token            *ClusterAgentToken `json:"token"`
}

type ClusterAgentTokenEdge struct {
	Cursor string             `json:"cursor"`
	Node   *ClusterAgentToken `json:"node"`
}

type ClusterAgentTokenRevokeInput struct {
	ClientMutationId *string              `json:"clientMutationId"`
	Id               ClustersAgentTokenID `json:"id"`
}

type ClusterAgentTokenRevokePayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
}

type CodeCoverageActivity struct {
	AverageCoverage *float64 `json:"averageCoverage"`
	CoverageCount   *int64   `json:"coverageCount"`
	Date            Date     `json:"date"`
	ProjectCount    *int64   `json:"projectCount"`
}

type CodeCoverageActivityConnection struct {
	Edges    []*CodeCoverageActivityEdge `json:"edges"`
	Nodes    []*CodeCoverageActivity     `json:"nodes"`
	PageInfo PageInfo                    `json:"pageInfo"`
}

type CodeCoverageActivityEdge struct {
	Cursor string                `json:"cursor"`
	Node   *CodeCoverageActivity `json:"node"`
}

type CodeCoverageSummary struct {
	AverageCoverage *float64 `json:"averageCoverage"`
	CoverageCount   *int64   `json:"coverageCount"`
	LastUpdatedOn   *Date    `json:"lastUpdatedOn"`
}

type CodeQualityDegradation struct {
	Description string                             `json:"description"`
	EngineName  string                             `json:"engineName"`
	Fingerprint string                             `json:"fingerprint"`
	Line        int64                              `json:"line"`
	Path        string                             `json:"path"`
	Severity    EnumCodeQualityDegradationSeverity `json:"severity"`
	WebUrl      *string                            `json:"webUrl"`
}

type CodeQualityDegradationConnection struct {
	Count    int64                         `json:"count"`
	Edges    []*CodeQualityDegradationEdge `json:"edges"`
	Nodes    []*CodeQualityDegradation     `json:"nodes"`
	PageInfo PageInfo                      `json:"pageInfo"`
}

type CodeQualityDegradationEdge struct {
	Cursor string                  `json:"cursor"`
	Node   *CodeQualityDegradation `json:"node"`
}

type CodeQualityReportSummary struct {
	Blocker  *int64 `json:"blocker"`
	Count    *int64 `json:"count"`
	Critical *int64 `json:"critical"`
	Info     *int64 `json:"info"`
	Major    *int64 `json:"major"`
	Minor    *int64 `json:"minor"`
	Unknown  *int64 `json:"unknown"`
}

type Commit struct {
	Author          *UserCore           `json:"author"`
	AuthorEmail     *string             `json:"authorEmail"`
	AuthorGravatar  *string             `json:"authorGravatar"`
	AuthorName      *string             `json:"authorName"`
	AuthoredDate    *Time               `json:"authoredDate"`
	Description     *string             `json:"description"`
	DescriptionHtml *string             `json:"descriptionHtml"`
	Diffs           []Diff              `json:"diffs"`
	FullTitle       *string             `json:"fullTitle"`
	FullTitleHtml   *string             `json:"fullTitleHtml"`
	Id              string              `json:"id"`
	Message         *string             `json:"message"`
	Pipelines       *PipelineConnection `json:"pipelines"`
	Sha             string              `json:"sha"`
	ShortId         string              `json:"shortId"`
	Signature       *CommitSignature    `json:"signature"`
	SignatureHtml   *string             `json:"signatureHtml"`
	Title           *string             `json:"title"`
	TitleHtml       *string             `json:"titleHtml"`
	WebPath         string              `json:"webPath"`
	WebUrl          string              `json:"webUrl"`
}

type CommitAction struct {
	Action          EnumCommitActionMode `json:"action"`
	Content         *string              `json:"content"`
	Encoding        *EnumCommitEncoding  `json:"encoding"`
	ExecuteFilemode *bool                `json:"executeFilemode"`
	FilePath        string               `json:"filePath"`
	LastCommitId    *string              `json:"lastCommitId"`
	PreviousPath    *string              `json:"previousPath"`
}

type CommitConnection struct {
	Edges    []*CommitEdge `json:"edges"`
	Nodes    []*Commit     `json:"nodes"`
	PageInfo PageInfo      `json:"pageInfo"`
}

type CommitCreateInput struct {
	Actions          []CommitAction `json:"actions"`
	Branch           string         `json:"branch"`
	ClientMutationId *string        `json:"clientMutationId"`
	Message          string         `json:"message"`
	ProjectPath      string         `json:"projectPath"`
	StartBranch      *string        `json:"startBranch"`
}

type CommitCreatePayload struct {
	ClientMutationId   *string  `json:"clientMutationId"`
	Commit             *Commit  `json:"commit"`
	CommitPipelinePath *string  `json:"commitPipelinePath"`
	Content            []string `json:"content"`
	Errors             []string `json:"errors"`
}

type CommitEdge struct {
	Cursor string  `json:"cursor"`
	Node   *Commit `json:"node"`
}

type CommitParentNames struct {
	Names []string `json:"names"`
}

type CommitReferences struct {
	ContainingBranches *CommitParentNames `json:"containingBranches"`
	ContainingTags     *CommitParentNames `json:"containingTags"`
	TippingBranches    *CommitParentNames `json:"tippingBranches"`
	TippingTags        *CommitParentNames `json:"tippingTags"`
}

type ComparedSecurityReport struct {
	Added               []ComparedSecurityReportFinding `json:"added"`
	BaseReportCreatedAt *Time                           `json:"baseReportCreatedAt"`
	BaseReportOutOfDate *bool                           `json:"baseReportOutOfDate"`
	Fixed               []ComparedSecurityReportFinding `json:"fixed"`
	HeadReportCreatedAt *Time                           `json:"headReportCreatedAt"`
}

type ComparedSecurityReportFinding struct {
	Description        *string                    `json:"description"`
	FoundByPipelineIid *string                    `json:"foundByPipelineIid"`
	Severity           *EnumVulnerabilitySeverity `json:"severity"`
	State              *EnumVulnerabilityState    `json:"state"`
	Title              *string                    `json:"title"`
	Uuid               *string                    `json:"uuid"`
}

type ComplianceFramework struct {
	Color                         string  `json:"color"`
	Default                       *bool   `json:"default"`
	Description                   string  `json:"description"`
	Id                            string  `json:"id"`
	Name                          string  `json:"name"`
	PipelineConfigurationFullPath *string `json:"pipelineConfigurationFullPath"`
}

type ComplianceFrameworkConnection struct {
	Edges    []*ComplianceFrameworkEdge `json:"edges"`
	Nodes    []*ComplianceFramework     `json:"nodes"`
	PageInfo PageInfo                   `json:"pageInfo"`
}

type ComplianceFrameworkEdge struct {
	Cursor string               `json:"cursor"`
	Node   *ComplianceFramework `json:"node"`
}

type ComplianceFrameworkFilters struct {
	Id             *ComplianceManagementFrameworkID       `json:"id"`
	Not            *NegatedComplianceFrameworkFilters     `json:"not"`
	PresenceFilter *EnumComplianceFrameworkPresenceFilter `json:"presenceFilter"`
}

type ComplianceFrameworkInput struct {
	Color                         *string `json:"color"`
	Default                       *bool   `json:"default"`
	Description                   *string `json:"description"`
	Name                          *string `json:"name"`
	PipelineConfigurationFullPath *string `json:"pipelineConfigurationFullPath"`
}

type ComplianceStandardsAdherence struct {
	CheckName EnumComplianceStandardsAdherenceCheckName `json:"checkName"`
	Id        string                                    `json:"id"`
	Project   Project                                   `json:"project"`
	Standard  EnumComplianceStandardsAdherenceStandard  `json:"standard"`
	Status    EnumComplianceStandardsAdherenceStatus    `json:"status"`
	UpdatedAt Time                                      `json:"updatedAt"`
}

type ComplianceStandardsAdherenceConnection struct {
	Edges    []*ComplianceStandardsAdherenceEdge `json:"edges"`
	Nodes    []*ComplianceStandardsAdherence     `json:"nodes"`
	PageInfo PageInfo                            `json:"pageInfo"`
}

type ComplianceStandardsAdherenceEdge struct {
	Cursor string                        `json:"cursor"`
	Node   *ComplianceStandardsAdherence `json:"node"`
}

type ComplianceStandardsAdherenceInput struct {
	CheckName  *EnumComplianceStandardsAdherenceCheckName `json:"checkName"`
	ProjectIds []ProjectID                                `json:"projectIds"`
	Standard   *EnumComplianceStandardsAdherenceStandard  `json:"standard"`
}

type ComplianceViolation struct {
	Id            string                          `json:"id"`
	MergeRequest  MergeRequest                    `json:"mergeRequest"`
	Reason        EnumComplianceViolationReason   `json:"reason"`
	SeverityLevel EnumComplianceViolationSeverity `json:"severityLevel"`
	ViolatingUser UserCore                        `json:"violatingUser"`
}

type ComplianceViolationConnection struct {
	Edges    []*ComplianceViolationEdge `json:"edges"`
	Nodes    []*ComplianceViolation     `json:"nodes"`
	PageInfo PageInfo                   `json:"pageInfo"`
}

type ComplianceViolationEdge struct {
	Cursor string               `json:"cursor"`
	Node   *ComplianceViolation `json:"node"`
}

type ComplianceViolationInput struct {
	MergedAfter  *Date       `json:"mergedAfter"`
	MergedBefore *Date       `json:"mergedBefore"`
	ProjectIds   []ProjectID `json:"projectIds"`
	TargetBranch *string     `json:"targetBranch"`
}

type ComposerMetadata struct {
	ComposerJson PackageComposerJsonType `json:"composerJson"`
	TargetSha    string                  `json:"targetSha"`
}

type ConanFileMetadata struct {
	ConanFileType         EnumConanMetadatumFileTypeEnum `json:"conanFileType"`
	ConanPackageReference *string                        `json:"conanPackageReference"`
	CreatedAt             Time                           `json:"createdAt"`
	Id                    PackagesConanFileMetadatumID   `json:"id"`
	PackageRevision       *string                        `json:"packageRevision"`
	RecipeRevision        string                         `json:"recipeRevision"`
	UpdatedAt             Time                           `json:"updatedAt"`
}

type ConanMetadata struct {
	CreatedAt       Time                     `json:"createdAt"`
	Id              PackagesConanMetadatumID `json:"id"`
	PackageChannel  string                   `json:"packageChannel"`
	PackageUsername string                   `json:"packageUsername"`
	Recipe          string                   `json:"recipe"`
	RecipePath      string                   `json:"recipePath"`
	UpdatedAt       Time                     `json:"updatedAt"`
}

type ConfigureContainerScanningInput struct {
	ClientMutationId *string `json:"clientMutationId"`
	ProjectPath      string  `json:"projectPath"`
}

type ConfigureContainerScanningPayload struct {
	Branch           *string  `json:"branch"`
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	SuccessPath      *string  `json:"successPath"`
}

type ConfigureDependencyScanningInput struct {
	ClientMutationId *string `json:"clientMutationId"`
	ProjectPath      string  `json:"projectPath"`
}

type ConfigureDependencyScanningPayload struct {
	Branch           *string  `json:"branch"`
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	SuccessPath      *string  `json:"successPath"`
}

type ConfigureSastIacInput struct {
	ClientMutationId *string `json:"clientMutationId"`
	ProjectPath      string  `json:"projectPath"`
}

type ConfigureSastIacPayload struct {
	Branch           *string  `json:"branch"`
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	SuccessPath      *string  `json:"successPath"`
}

type ConfigureSastInput struct {
	ClientMutationId *string                  `json:"clientMutationId"`
	Configuration    SastCiConfigurationInput `json:"configuration"`
	ProjectPath      string                   `json:"projectPath"`
}

type ConfigureSastPayload struct {
	Branch           *string  `json:"branch"`
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	SuccessPath      *string  `json:"successPath"`
}

type ConfigureSecretDetectionInput struct {
	ClientMutationId *string `json:"clientMutationId"`
	ProjectPath      string  `json:"projectPath"`
}

type ConfigureSecretDetectionPayload struct {
	Branch           *string  `json:"branch"`
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	SuccessPath      *string  `json:"successPath"`
}

type ConnectedAgent struct {
	ConnectedAt  *Time          `json:"connectedAt"`
	ConnectionId *BigInt        `json:"connectionId"`
	Metadata     *AgentMetadata `json:"metadata"`
}

type ConnectedAgentConnection struct {
	Edges    []*ConnectedAgentEdge `json:"edges"`
	Nodes    []*ConnectedAgent     `json:"nodes"`
	PageInfo PageInfo              `json:"pageInfo"`
}

type ConnectedAgentEdge struct {
	Cursor string          `json:"cursor"`
	Node   *ConnectedAgent `json:"node"`
}

type ContactStateCounts struct {
	Active   *int64 `json:"active"`
	All      *int64 `json:"all"`
	Inactive *int64 `json:"inactive"`
}

type ContainerExpirationPolicy struct {
	Cadence       EnumContainerExpirationPolicyCadenceEnum    `json:"cadence"`
	CreatedAt     Time                                        `json:"createdAt"`
	Enabled       bool                                        `json:"enabled"`
	KeepN         *EnumContainerExpirationPolicyKeepEnum      `json:"keepN"`
	NameRegex     *UntrustedRegexp                            `json:"nameRegex"`
	NameRegexKeep *UntrustedRegexp                            `json:"nameRegexKeep"`
	NextRunAt     *Time                                       `json:"nextRunAt"`
	OlderThan     *EnumContainerExpirationPolicyOlderThanEnum `json:"olderThan"`
	UpdatedAt     Time                                        `json:"updatedAt"`
}

type ContainerRepository struct {
	CanDelete                     bool                                  `json:"canDelete"`
	CreatedAt                     Time                                  `json:"createdAt"`
	ExpirationPolicyCleanupStatus *EnumContainerRepositoryCleanupStatus `json:"expirationPolicyCleanupStatus"`
	ExpirationPolicyStartedAt     *Time                                 `json:"expirationPolicyStartedAt"`
	Id                            string                                `json:"id"`
	LastCleanupDeletedTagsCount   *int64                                `json:"lastCleanupDeletedTagsCount"`
	Location                      string                                `json:"location"`
	MigrationState                string                                `json:"migrationState"`
	Name                          string                                `json:"name"`
	Path                          string                                `json:"path"`
	Project                       Project                               `json:"project"`
	Status                        *EnumContainerRepositoryStatus        `json:"status"`
	TagsCount                     int64                                 `json:"tagsCount"`
	UpdatedAt                     Time                                  `json:"updatedAt"`
}

type ContainerRepositoryConnection struct {
	Edges    []*ContainerRepositoryEdge `json:"edges"`
	Nodes    []*ContainerRepository     `json:"nodes"`
	PageInfo PageInfo                   `json:"pageInfo"`
}

type ContainerRepositoryDetails struct {
	CanDelete                     bool                                  `json:"canDelete"`
	CreatedAt                     Time                                  `json:"createdAt"`
	ExpirationPolicyCleanupStatus *EnumContainerRepositoryCleanupStatus `json:"expirationPolicyCleanupStatus"`
	ExpirationPolicyStartedAt     *Time                                 `json:"expirationPolicyStartedAt"`
	Id                            string                                `json:"id"`
	LastCleanupDeletedTagsCount   *int64                                `json:"lastCleanupDeletedTagsCount"`
	Location                      string                                `json:"location"`
	MigrationState                string                                `json:"migrationState"`
	Name                          string                                `json:"name"`
	Path                          string                                `json:"path"`
	Project                       Project                               `json:"project"`
	Size                          *float64                              `json:"size"`
	Status                        *EnumContainerRepositoryStatus        `json:"status"`
	Tags                          *ContainerRepositoryTagConnection     `json:"tags"`
	TagsCount                     int64                                 `json:"tagsCount"`
	UpdatedAt                     Time                                  `json:"updatedAt"`
}

type ContainerRepositoryEdge struct {
	Cursor string               `json:"cursor"`
	Node   *ContainerRepository `json:"node"`
}

type ContainerRepositoryRegistry struct {
	ContainerRepositoryId  string                     `json:"containerRepositoryId"`
	CreatedAt              *Time                      `json:"createdAt"`
	Id                     string                     `json:"id"`
	LastSyncFailure        *string                    `json:"lastSyncFailure"`
	LastSyncedAt           *Time                      `json:"lastSyncedAt"`
	RetryAt                *Time                      `json:"retryAt"`
	RetryCount             *int64                     `json:"retryCount"`
	State                  *EnumRegistryState         `json:"state"`
	VerificationChecksum   *string                    `json:"verificationChecksum"`
	VerificationFailure    *string                    `json:"verificationFailure"`
	VerificationRetryAt    *Time                      `json:"verificationRetryAt"`
	VerificationRetryCount *int64                     `json:"verificationRetryCount"`
	VerificationStartedAt  *Time                      `json:"verificationStartedAt"`
	VerificationState      *EnumVerificationStateEnum `json:"verificationState"`
	VerifiedAt             *Time                      `json:"verifiedAt"`
}

type ContainerRepositoryRegistryConnection struct {
	Edges    []*ContainerRepositoryRegistryEdge `json:"edges"`
	Nodes    []*ContainerRepositoryRegistry     `json:"nodes"`
	PageInfo PageInfo                           `json:"pageInfo"`
}

type ContainerRepositoryRegistryEdge struct {
	Cursor string                       `json:"cursor"`
	Node   *ContainerRepositoryRegistry `json:"node"`
}

type ContainerRepositoryTag struct {
	CanDelete     bool    `json:"canDelete"`
	CreatedAt     *Time   `json:"createdAt"`
	Digest        *string `json:"digest"`
	Location      string  `json:"location"`
	Name          string  `json:"name"`
	Path          string  `json:"path"`
	Revision      *string `json:"revision"`
	ShortRevision *string `json:"shortRevision"`
	TotalSize     *BigInt `json:"totalSize"`
}

type ContainerRepositoryTagConnection struct {
	Edges    []*ContainerRepositoryTagEdge `json:"edges"`
	Nodes    []*ContainerRepositoryTag     `json:"nodes"`
	PageInfo PageInfo                      `json:"pageInfo"`
}

type ContainerRepositoryTagEdge struct {
	Cursor string                  `json:"cursor"`
	Node   *ContainerRepositoryTag `json:"node"`
}

type ContributionAnalyticsContribution struct {
	IssuesClosed          *int64    `json:"issuesClosed"`
	IssuesCreated         *int64    `json:"issuesCreated"`
	MergeRequestsApproved *int64    `json:"mergeRequestsApproved"`
	MergeRequestsClosed   *int64    `json:"mergeRequestsClosed"`
	MergeRequestsCreated  *int64    `json:"mergeRequestsCreated"`
	MergeRequestsMerged   *int64    `json:"mergeRequestsMerged"`
	RepoPushed            *int64    `json:"repoPushed"`
	TotalEvents           *int64    `json:"totalEvents"`
	User                  *UserCore `json:"user"`
}

type ContributionAnalyticsContributionConnection struct {
	Edges    []*ContributionAnalyticsContributionEdge `json:"edges"`
	Nodes    []*ContributionAnalyticsContribution     `json:"nodes"`
	PageInfo PageInfo                                 `json:"pageInfo"`
}

type ContributionAnalyticsContributionEdge struct {
	Cursor string                             `json:"cursor"`
	Node   *ContributionAnalyticsContribution `json:"node"`
}

type CorpusCreateInput struct {
	ClientMutationId *string           `json:"clientMutationId"`
	FullPath         string            `json:"fullPath"`
	PackageId        PackagesPackageID `json:"packageId"`
}

type CorpusCreatePayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
}

type CoverageFuzzingCorpus struct {
	Id      AppSecFuzzingCoverageCorpusID `json:"id"`
	Package PackageDetailsType            `json:"package"`
}

type CoverageFuzzingCorpusConnection struct {
	Edges    []*CoverageFuzzingCorpusEdge `json:"edges"`
	Nodes    []*CoverageFuzzingCorpus     `json:"nodes"`
	PageInfo PageInfo                     `json:"pageInfo"`
}

type CoverageFuzzingCorpusEdge struct {
	Cursor string                 `json:"cursor"`
	Node   *CoverageFuzzingCorpus `json:"node"`
}

type CreateAlertIssueInput struct {
	ClientMutationId *string `json:"clientMutationId"`
	Iid              string  `json:"iid"`
	ProjectPath      string  `json:"projectPath"`
}

type CreateAlertIssuePayload struct {
	Alert            *AlertManagementAlert `json:"alert"`
	ClientMutationId *string               `json:"clientMutationId"`
	Errors           []string              `json:"errors"`
	Issue            *Issue                `json:"issue"`
	Todo             *Todo                 `json:"todo"`
}

type CreateAnnotationInput struct {
	ClientMutationId *string            `json:"clientMutationId"`
	ClusterId        *ClustersClusterID `json:"clusterId"`
	DashboardPath    string             `json:"dashboardPath"`
	Description      string             `json:"description"`
	EndingAt         *Time              `json:"endingAt"`
	EnvironmentId    *EnvironmentID     `json:"environmentId"`
	StartingAt       Time               `json:"startingAt"`
}

type CreateAnnotationPayload struct {
	Annotation       *MetricsDashboardAnnotation `json:"annotation"`
	ClientMutationId *string                     `json:"clientMutationId"`
	Errors           []string                    `json:"errors"`
}

type CreateBoardInput struct {
	AssigneeId         *UserID              `json:"assigneeId"`
	ClientMutationId   *string              `json:"clientMutationId"`
	GroupPath          *string              `json:"groupPath"`
	HideBacklogList    *bool                `json:"hideBacklogList"`
	HideClosedList     *bool                `json:"hideClosedList"`
	IterationCadenceId *IterationsCadenceID `json:"iterationCadenceId"`
	IterationId        *IterationID         `json:"iterationId"`
	LabelIds           []LabelID            `json:"labelIds"`
	Labels             []string             `json:"labels"`
	MilestoneId        *MilestoneID         `json:"milestoneId"`
	Name               *string              `json:"name"`
	ProjectPath        *string              `json:"projectPath"`
	Weight             *int64               `json:"weight"`
}

type CreateBoardPayload struct {
	Board            *Board   `json:"board"`
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
}

type CreateBranchInput struct {
	ClientMutationId *string `json:"clientMutationId"`
	Name             string  `json:"name"`
	ProjectPath      string  `json:"projectPath"`
	Ref              string  `json:"ref"`
}

type CreateBranchPayload struct {
	Branch           *Branch  `json:"branch"`
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
}

type CreateClusterAgentInput struct {
	ClientMutationId *string `json:"clientMutationId"`
	Name             string  `json:"name"`
	ProjectPath      string  `json:"projectPath"`
}

type CreateClusterAgentPayload struct {
	ClientMutationId *string       `json:"clientMutationId"`
	ClusterAgent     *ClusterAgent `json:"clusterAgent"`
	Errors           []string      `json:"errors"`
}

type CreateComplianceFrameworkInput struct {
	ClientMutationId *string                  `json:"clientMutationId"`
	NamespacePath    string                   `json:"namespacePath"`
	Params           ComplianceFrameworkInput `json:"params"`
}

type CreateComplianceFrameworkPayload struct {
	ClientMutationId *string              `json:"clientMutationId"`
	Errors           []string             `json:"errors"`
	Framework        *ComplianceFramework `json:"framework"`
}

type CreateCustomEmojiInput struct {
	ClientMutationId *string `json:"clientMutationId"`
	GroupPath        string  `json:"groupPath"`
	Name             string  `json:"name"`
	Url              string  `json:"url"`
}

type CreateCustomEmojiPayload struct {
	ClientMutationId *string      `json:"clientMutationId"`
	CustomEmoji      *CustomEmoji `json:"customEmoji"`
	Errors           []string     `json:"errors"`
}

type CreateDiffNoteInput struct {
	Body             string            `json:"body"`
	ClientMutationId *string           `json:"clientMutationId"`
	Confidential     *bool             `json:"confidential"`
	Internal         *bool             `json:"internal"`
	NoteableId       NoteableID        `json:"noteableId"`
	Position         DiffPositionInput `json:"position"`
}

type CreateDiffNotePayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	Note             *Note    `json:"note"`
}

type CreateEpicInput struct {
	AddLabelIds      []string `json:"addLabelIds"`
	AddLabels        []string `json:"addLabels"`
	ClientMutationId *string  `json:"clientMutationId"`
	Color            *Color   `json:"color"`
	Confidential     *bool    `json:"confidential"`
	Description      *string  `json:"description"`
	DueDateFixed     *string  `json:"dueDateFixed"`
	DueDateIsFixed   *bool    `json:"dueDateIsFixed"`
	GroupPath        string   `json:"groupPath"`
	RemoveLabelIds   []string `json:"removeLabelIds"`
	StartDateFixed   *string  `json:"startDateFixed"`
	StartDateIsFixed *bool    `json:"startDateIsFixed"`
	Title            *string  `json:"title"`
}

type CreateEpicPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Epic             *Epic    `json:"epic"`
	Errors           []string `json:"errors"`
}

type CreateImageDiffNoteInput struct {
	Body             string                 `json:"body"`
	ClientMutationId *string                `json:"clientMutationId"`
	Confidential     *bool                  `json:"confidential"`
	Internal         *bool                  `json:"internal"`
	NoteableId       NoteableID             `json:"noteableId"`
	Position         DiffImagePositionInput `json:"position"`
}

type CreateImageDiffNotePayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	Note             *Note    `json:"note"`
}

type CreateIssueInput struct {
	AssigneeIds                        []UserID                              `json:"assigneeIds"`
	ClientMutationId                   *string                               `json:"clientMutationId"`
	Confidential                       *bool                                 `json:"confidential"`
	CreatedAt                          *Time                                 `json:"createdAt"`
	Description                        *string                               `json:"description"`
	DiscussionToResolve                *string                               `json:"discussionToResolve"`
	DueDate                            *ISO8601Date                          `json:"dueDate"`
	EpicId                             *EpicID                               `json:"epicId"`
	HealthStatus                       *EnumHealthStatus                     `json:"healthStatus"`
	Iid                                *int64                                `json:"iid"`
	IterationCadenceId                 *IterationsCadenceID                  `json:"iterationCadenceId"`
	IterationId                        *IterationID                          `json:"iterationId"`
	IterationWildcardId                *EnumIssueCreationIterationWildcardId `json:"iterationWildcardId"`
	LabelIds                           []LabelID                             `json:"labelIds"`
	Labels                             []string                              `json:"labels"`
	Locked                             *bool                                 `json:"locked"`
	MergeRequestToResolveDiscussionsOf *MergeRequestID                       `json:"mergeRequestToResolveDiscussionsOf"`
	MilestoneId                        *MilestoneID                          `json:"milestoneId"`
	MoveAfterId                        *IssueID                              `json:"moveAfterId"`
	MoveBeforeId                       *IssueID                              `json:"moveBeforeId"`
	ProjectPath                        string                                `json:"projectPath"`
	Title                              string                                `json:"title"`
	Type                               *EnumIssueType                        `json:"type"`
	Weight                             *int64                                `json:"weight"`
}

type CreateIssuePayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	Issue            *Issue   `json:"issue"`
}

type CreateIterationInput struct {
	ClientMutationId    *string              `json:"clientMutationId"`
	Description         *string              `json:"description"`
	DueDate             *string              `json:"dueDate"`
	GroupPath           *string              `json:"groupPath"`
	IterationsCadenceId *IterationsCadenceID `json:"iterationsCadenceId"`
	ProjectPath         *string              `json:"projectPath"`
	StartDate           *string              `json:"startDate"`
	Title               *string              `json:"title"`
}

type CreateIterationPayload struct {
	ClientMutationId *string    `json:"clientMutationId"`
	Errors           []string   `json:"errors"`
	Iteration        *Iteration `json:"iteration"`
}

type CreateNoteInput struct {
	Body                    string        `json:"body"`
	ClientMutationId        *string       `json:"clientMutationId"`
	Confidential            *bool         `json:"confidential"`
	DiscussionId            *DiscussionID `json:"discussionId"`
	Internal                *bool         `json:"internal"`
	MergeRequestDiffHeadSha *string       `json:"mergeRequestDiffHeadSha"`
	NoteableId              NoteableID    `json:"noteableId"`
}

type CreateNotePayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	Note             *Note    `json:"note"`
}

type CreateRequirementInput struct {
	ClientMutationId *string `json:"clientMutationId"`
	Description      *string `json:"description"`
	ProjectPath      string  `json:"projectPath"`
	Title            *string `json:"title"`
}

type CreateRequirementPayload struct {
	ClientMutationId *string      `json:"clientMutationId"`
	Errors           []string     `json:"errors"`
	Requirement      *Requirement `json:"requirement"`
}

type CreateSnippetInput struct {
	BlobActions      []SnippetBlobActionInputType `json:"blobActions"`
	ClientMutationId *string                      `json:"clientMutationId"`
	Description      *string                      `json:"description"`
	ProjectPath      *string                      `json:"projectPath"`
	Title            string                       `json:"title"`
	UploadedFiles    []string                     `json:"uploadedFiles"`
	VisibilityLevel  EnumVisibilityLevelsEnum     `json:"visibilityLevel"`
}

type CreateSnippetPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	Snippet          *Snippet `json:"snippet"`
}

type CreateTestCaseInput struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Description      *string  `json:"description"`
	LabelIds         []string `json:"labelIds"`
	ProjectPath      string   `json:"projectPath"`
	Title            string   `json:"title"`
}

type CreateTestCasePayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	TestCase         *Issue   `json:"testCase"`
}

type CurrentLicense struct {
	ActivatedAt           *Date   `json:"activatedAt"`
	BillableUsersCount    *int64  `json:"billableUsersCount"`
	BlockChangesAt        *Date   `json:"blockChangesAt"`
	Company               *string `json:"company"`
	CreatedAt             *Date   `json:"createdAt"`
	Email                 *string `json:"email"`
	ExpiresAt             *Date   `json:"expiresAt"`
	Id                    string  `json:"id"`
	LastSync              *Time   `json:"lastSync"`
	MaximumUserCount      *int64  `json:"maximumUserCount"`
	Name                  *string `json:"name"`
	Plan                  string  `json:"plan"`
	StartsAt              *Date   `json:"startsAt"`
	Type                  string  `json:"type"`
	UsersInLicenseCount   *int64  `json:"usersInLicenseCount"`
	UsersOverLicenseCount *int64  `json:"usersOverLicenseCount"`
}

type CustomEmoji struct {
	CreatedAt       Time                   `json:"createdAt"`
	External        bool                   `json:"external"`
	Id              CustomEmojiID          `json:"id"`
	Name            string                 `json:"name"`
	Url             string                 `json:"url"`
	UserPermissions CustomEmojiPermissions `json:"userPermissions"`
}

type CustomEmojiConnection struct {
	Count    int64              `json:"count"`
	Edges    []*CustomEmojiEdge `json:"edges"`
	Nodes    []*CustomEmoji     `json:"nodes"`
	PageInfo PageInfo           `json:"pageInfo"`
}

type CustomEmojiEdge struct {
	Cursor string       `json:"cursor"`
	Node   *CustomEmoji `json:"node"`
}

type CustomEmojiPermissions struct {
	CreateCustomEmoji bool `json:"createCustomEmoji"`
	DeleteCustomEmoji bool `json:"deleteCustomEmoji"`
	ReadCustomEmoji   bool `json:"readCustomEmoji"`
}

type CustomerRelationsContact struct {
	Active       bool                           `json:"active"`
	CreatedAt    Time                           `json:"createdAt"`
	Description  *string                        `json:"description"`
	Email        *string                        `json:"email"`
	FirstName    string                         `json:"firstName"`
	Id           string                         `json:"id"`
	LastName     string                         `json:"lastName"`
	Organization *CustomerRelationsOrganization `json:"organization"`
	Phone        *string                        `json:"phone"`
	UpdatedAt    Time                           `json:"updatedAt"`
}

type CustomerRelationsContactConnection struct {
	Edges    []*CustomerRelationsContactEdge `json:"edges"`
	Nodes    []*CustomerRelationsContact     `json:"nodes"`
	PageInfo PageInfo                        `json:"pageInfo"`
}

type CustomerRelationsContactCreateInput struct {
	ClientMutationId *string                          `json:"clientMutationId"`
	Description      *string                          `json:"description"`
	Email            *string                          `json:"email"`
	FirstName        string                           `json:"firstName"`
	GroupId          GroupID                          `json:"groupId"`
	LastName         string                           `json:"lastName"`
	OrganizationId   *CustomerRelationsOrganizationID `json:"organizationId"`
	Phone            *string                          `json:"phone"`
}

type CustomerRelationsContactCreatePayload struct {
	ClientMutationId *string                   `json:"clientMutationId"`
	Contact          *CustomerRelationsContact `json:"contact"`
	Errors           []string                  `json:"errors"`
}

type CustomerRelationsContactEdge struct {
	Cursor string                    `json:"cursor"`
	Node   *CustomerRelationsContact `json:"node"`
}

type CustomerRelationsContactUpdateInput struct {
	Active           *bool                            `json:"active"`
	ClientMutationId *string                          `json:"clientMutationId"`
	Description      *string                          `json:"description"`
	Email            *string                          `json:"email"`
	FirstName        *string                          `json:"firstName"`
	Id               CustomerRelationsContactID       `json:"id"`
	LastName         *string                          `json:"lastName"`
	OrganizationId   *CustomerRelationsOrganizationID `json:"organizationId"`
	Phone            *string                          `json:"phone"`
}

type CustomerRelationsContactUpdatePayload struct {
	ClientMutationId *string                   `json:"clientMutationId"`
	Contact          *CustomerRelationsContact `json:"contact"`
	Errors           []string                  `json:"errors"`
}

type CustomerRelationsOrganization struct {
	Active      bool     `json:"active"`
	CreatedAt   Time     `json:"createdAt"`
	DefaultRate *float64 `json:"defaultRate"`
	Description *string  `json:"description"`
	Id          string   `json:"id"`
	Name        string   `json:"name"`
	UpdatedAt   Time     `json:"updatedAt"`
}

type CustomerRelationsOrganizationConnection struct {
	Edges    []*CustomerRelationsOrganizationEdge `json:"edges"`
	Nodes    []*CustomerRelationsOrganization     `json:"nodes"`
	PageInfo PageInfo                             `json:"pageInfo"`
}

type CustomerRelationsOrganizationCreateInput struct {
	ClientMutationId *string  `json:"clientMutationId"`
	DefaultRate      *float64 `json:"defaultRate"`
	Description      *string  `json:"description"`
	GroupId          GroupID  `json:"groupId"`
	Name             string   `json:"name"`
}

type CustomerRelationsOrganizationCreatePayload struct {
	ClientMutationId *string                        `json:"clientMutationId"`
	Errors           []string                       `json:"errors"`
	Organization     *CustomerRelationsOrganization `json:"organization"`
}

type CustomerRelationsOrganizationEdge struct {
	Cursor string                         `json:"cursor"`
	Node   *CustomerRelationsOrganization `json:"node"`
}

type CustomerRelationsOrganizationUpdateInput struct {
	Active           *bool                           `json:"active"`
	ClientMutationId *string                         `json:"clientMutationId"`
	DefaultRate      *float64                        `json:"defaultRate"`
	Description      *string                         `json:"description"`
	Id               CustomerRelationsOrganizationID `json:"id"`
	Name             *string                         `json:"name"`
}

type CustomerRelationsOrganizationUpdatePayload struct {
	ClientMutationId *string                       `json:"clientMutationId"`
	Errors           []string                      `json:"errors"`
	Organization     CustomerRelationsOrganization `json:"organization"`
}

type DastOnDemandScanCreateInput struct {
	ClientMutationId     *string               `json:"clientMutationId"`
	DastScannerProfileId *DastScannerProfileID `json:"dastScannerProfileId"`
	DastSiteProfileId    DastSiteProfileID     `json:"dastSiteProfileId"`
	FullPath             string                `json:"fullPath"`
}

type DastOnDemandScanCreatePayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	PipelineUrl      *string  `json:"pipelineUrl"`
}

type DastPreScanVerification struct {
	PreScanVerificationSteps []DastPreScanVerificationStep      `json:"preScanVerificationSteps"`
	Status                   *EnumDastPreScanVerificationStatus `json:"status"`
	Valid                    bool                               `json:"valid"`
}

type DastPreScanVerificationStep struct {
	CheckType *EnumDastPreScanVerificationCheckType `json:"checkType"`
	Errors    []string                              `json:"errors"`
	Name      *string                               `json:"name"`
	Success   bool                                  `json:"success"`
}

type DastProfile struct {
	Branch                  *DastProfileBranch       `json:"branch"`
	DastPreScanVerification *DastPreScanVerification `json:"dastPreScanVerification"`
	DastProfileSchedule     *DastProfileSchedule     `json:"dastProfileSchedule"`
	DastScannerProfile      *DastScannerProfile      `json:"dastScannerProfile"`
	DastSiteProfile         *DastSiteProfile         `json:"dastSiteProfile"`
	Description             *string                  `json:"description"`
	EditPath                *string                  `json:"editPath"`
	Id                      DastProfileID            `json:"id"`
	Name                    *string                  `json:"name"`
	TagList                 []string                 `json:"tagList"`
}

type DastProfileBranch struct {
	Exists *bool   `json:"exists"`
	Name   *string `json:"name"`
}

type DastProfileCadence struct {
	Duration *int64                      `json:"duration"`
	Unit     *EnumDastProfileCadenceUnit `json:"unit"`
}

type DastProfileCadenceInput struct {
	Duration *int64                      `json:"duration"`
	Unit     *EnumDastProfileCadenceUnit `json:"unit"`
}

type DastProfileConnection struct {
	Count    int64              `json:"count"`
	Edges    []*DastProfileEdge `json:"edges"`
	Nodes    []*DastProfile     `json:"nodes"`
	PageInfo PageInfo           `json:"pageInfo"`
}

type DastProfileCreateInput struct {
	BranchName           *string                   `json:"branchName"`
	ClientMutationId     *string                   `json:"clientMutationId"`
	DastProfileSchedule  *DastProfileScheduleInput `json:"dastProfileSchedule"`
	DastScannerProfileId DastScannerProfileID      `json:"dastScannerProfileId"`
	DastSiteProfileId    DastSiteProfileID         `json:"dastSiteProfileId"`
	Description          *string                   `json:"description"`
	FullPath             string                    `json:"fullPath"`
	Name                 string                    `json:"name"`
	RunAfterCreate       *bool                     `json:"runAfterCreate"`
	TagList              []string                  `json:"tagList"`
}

type DastProfileCreatePayload struct {
	ClientMutationId *string      `json:"clientMutationId"`
	DastProfile      *DastProfile `json:"dastProfile"`
	Errors           []string     `json:"errors"`
	PipelineUrl      *string      `json:"pipelineUrl"`
}

type DastProfileDeleteInput struct {
	ClientMutationId *string       `json:"clientMutationId"`
	Id               DastProfileID `json:"id"`
}

type DastProfileDeletePayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
}

type DastProfileEdge struct {
	Cursor string       `json:"cursor"`
	Node   *DastProfile `json:"node"`
}

type DastProfileRunInput struct {
	ClientMutationId *string       `json:"clientMutationId"`
	FullPath         *string       `json:"fullPath"`
	Id               DastProfileID `json:"id"`
}

type DastProfileRunPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	PipelineUrl      *string  `json:"pipelineUrl"`
}

type DastProfileSchedule struct {
	Active     *bool                 `json:"active"`
	Cadence    *DastProfileCadence   `json:"cadence"`
	Id         DastProfileScheduleID `json:"id"`
	NextRunAt  *Time                 `json:"nextRunAt"`
	OwnerValid *bool                 `json:"ownerValid"`
	StartsAt   *Time                 `json:"startsAt"`
	Timezone   *string               `json:"timezone"`
}

type DastProfileScheduleInput struct {
	Active   *bool                    `json:"active"`
	Cadence  *DastProfileCadenceInput `json:"cadence"`
	StartsAt *Time                    `json:"startsAt"`
	Timezone *string                  `json:"timezone"`
}

type DastProfileUpdateInput struct {
	BranchName           *string                   `json:"branchName"`
	ClientMutationId     *string                   `json:"clientMutationId"`
	DastProfileSchedule  *DastProfileScheduleInput `json:"dastProfileSchedule"`
	DastScannerProfileId *DastScannerProfileID     `json:"dastScannerProfileId"`
	DastSiteProfileId    *DastSiteProfileID        `json:"dastSiteProfileId"`
	Description          *string                   `json:"description"`
	FullPath             *string                   `json:"fullPath"`
	Id                   DastProfileID             `json:"id"`
	Name                 *string                   `json:"name"`
	RunAfterUpdate       *bool                     `json:"runAfterUpdate"`
	TagList              []string                  `json:"tagList"`
}

type DastProfileUpdatePayload struct {
	ClientMutationId *string      `json:"clientMutationId"`
	DastProfile      *DastProfile `json:"dastProfile"`
	Errors           []string     `json:"errors"`
	PipelineUrl      *string      `json:"pipelineUrl"`
}

type DastScannerProfile struct {
	EditPath                     *string               `json:"editPath"`
	Id                           DastScannerProfileID  `json:"id"`
	ProfileName                  *string               `json:"profileName"`
	ReferencedInSecurityPolicies []string              `json:"referencedInSecurityPolicies"`
	ScanType                     *EnumDastScanTypeEnum `json:"scanType"`
	ShowDebugMessages            bool                  `json:"showDebugMessages"`
	SpiderTimeout                *int64                `json:"spiderTimeout"`
	TagList                      []string              `json:"tagList"`
	TargetTimeout                *int64                `json:"targetTimeout"`
	UseAjaxSpider                bool                  `json:"useAjaxSpider"`
}

type DastScannerProfileConnection struct {
	Edges    []*DastScannerProfileEdge `json:"edges"`
	Nodes    []*DastScannerProfile     `json:"nodes"`
	PageInfo PageInfo                  `json:"pageInfo"`
}

type DastScannerProfileCreateInput struct {
	ClientMutationId  *string               `json:"clientMutationId"`
	FullPath          string                `json:"fullPath"`
	ProfileName       string                `json:"profileName"`
	ScanType          *EnumDastScanTypeEnum `json:"scanType"`
	ShowDebugMessages *bool                 `json:"showDebugMessages"`
	SpiderTimeout     *int64                `json:"spiderTimeout"`
	TagList           []string              `json:"tagList"`
	TargetTimeout     *int64                `json:"targetTimeout"`
	UseAjaxSpider     *bool                 `json:"useAjaxSpider"`
}

type DastScannerProfileCreatePayload struct {
	ClientMutationId   *string               `json:"clientMutationId"`
	DastScannerProfile *DastScannerProfile   `json:"dastScannerProfile"`
	Errors             []string              `json:"errors"`
	Id                 *DastScannerProfileID `json:"id"`
}

type DastScannerProfileDeleteInput struct {
	ClientMutationId *string              `json:"clientMutationId"`
	FullPath         *string              `json:"fullPath"`
	Id               DastScannerProfileID `json:"id"`
}

type DastScannerProfileDeletePayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
}

type DastScannerProfileEdge struct {
	Cursor string              `json:"cursor"`
	Node   *DastScannerProfile `json:"node"`
}

type DastScannerProfileUpdateInput struct {
	ClientMutationId  *string               `json:"clientMutationId"`
	FullPath          *string               `json:"fullPath"`
	Id                DastScannerProfileID  `json:"id"`
	ProfileName       string                `json:"profileName"`
	ScanType          *EnumDastScanTypeEnum `json:"scanType"`
	ShowDebugMessages *bool                 `json:"showDebugMessages"`
	SpiderTimeout     int64                 `json:"spiderTimeout"`
	TagList           []string              `json:"tagList"`
	TargetTimeout     int64                 `json:"targetTimeout"`
	UseAjaxSpider     *bool                 `json:"useAjaxSpider"`
}

type DastScannerProfileUpdatePayload struct {
	ClientMutationId   *string               `json:"clientMutationId"`
	DastScannerProfile *DastScannerProfile   `json:"dastScannerProfile"`
	Errors             []string              `json:"errors"`
	Id                 *DastScannerProfileID `json:"id"`
}

type DastSiteProfile struct {
	Auth                         *DastSiteProfileAuth                     `json:"auth"`
	EditPath                     *string                                  `json:"editPath"`
	ExcludedUrls                 []string                                 `json:"excludedUrls"`
	Id                           DastSiteProfileID                        `json:"id"`
	NormalizedTargetUrl          *string                                  `json:"normalizedTargetUrl"`
	ProfileName                  *string                                  `json:"profileName"`
	ReferencedInSecurityPolicies []string                                 `json:"referencedInSecurityPolicies"`
	RequestHeaders               *string                                  `json:"requestHeaders"`
	ScanFilePath                 *string                                  `json:"scanFilePath"`
	ScanMethod                   *EnumDastScanMethodType                  `json:"scanMethod"`
	TargetType                   *EnumDastTargetTypeEnum                  `json:"targetType"`
	TargetUrl                    *string                                  `json:"targetUrl"`
	UserPermissions              DastSiteProfilePermissions               `json:"userPermissions"`
	ValidationStartedAt          *Time                                    `json:"validationStartedAt"`
	ValidationStatus             *EnumDastSiteProfileValidationStatusEnum `json:"validationStatus"`
}

type DastSiteProfileAuth struct {
	Enabled       *bool   `json:"enabled"`
	Password      *string `json:"password"`
	PasswordField *string `json:"passwordField"`
	SubmitField   *string `json:"submitField"`
	Url           *string `json:"url"`
	Username      *string `json:"username"`
	UsernameField *string `json:"usernameField"`
}

type DastSiteProfileAuthInput struct {
	Enabled       *bool   `json:"enabled"`
	Password      *string `json:"password"`
	PasswordField *string `json:"passwordField"`
	SubmitField   *string `json:"submitField"`
	Url           *string `json:"url"`
	Username      *string `json:"username"`
	UsernameField *string `json:"usernameField"`
}

type DastSiteProfileConnection struct {
	Edges    []*DastSiteProfileEdge `json:"edges"`
	Nodes    []*DastSiteProfile     `json:"nodes"`
	PageInfo PageInfo               `json:"pageInfo"`
}

type DastSiteProfileCreateInput struct {
	Auth             *DastSiteProfileAuthInput `json:"auth"`
	ClientMutationId *string                   `json:"clientMutationId"`
	ExcludedUrls     []string                  `json:"excludedUrls"`
	FullPath         string                    `json:"fullPath"`
	ProfileName      string                    `json:"profileName"`
	RequestHeaders   *string                   `json:"requestHeaders"`
	ScanFilePath     *string                   `json:"scanFilePath"`
	ScanMethod       *EnumDastScanMethodType   `json:"scanMethod"`
	TargetType       *EnumDastTargetTypeEnum   `json:"targetType"`
	TargetUrl        *string                   `json:"targetUrl"`
}

type DastSiteProfileCreatePayload struct {
	ClientMutationId *string            `json:"clientMutationId"`
	DastSiteProfile  *DastSiteProfile   `json:"dastSiteProfile"`
	Errors           []string           `json:"errors"`
	Id               *DastSiteProfileID `json:"id"`
}

type DastSiteProfileDeleteInput struct {
	ClientMutationId *string           `json:"clientMutationId"`
	FullPath         *string           `json:"fullPath"`
	Id               DastSiteProfileID `json:"id"`
}

type DastSiteProfileDeletePayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
}

type DastSiteProfileEdge struct {
	Cursor string           `json:"cursor"`
	Node   *DastSiteProfile `json:"node"`
}

type DastSiteProfilePermissions struct {
	CreateOnDemandDastScan bool `json:"createOnDemandDastScan"`
}

type DastSiteProfileUpdateInput struct {
	Auth             *DastSiteProfileAuthInput `json:"auth"`
	ClientMutationId *string                   `json:"clientMutationId"`
	ExcludedUrls     []string                  `json:"excludedUrls"`
	FullPath         *string                   `json:"fullPath"`
	Id               DastSiteProfileID         `json:"id"`
	ProfileName      string                    `json:"profileName"`
	RequestHeaders   *string                   `json:"requestHeaders"`
	ScanFilePath     *string                   `json:"scanFilePath"`
	ScanMethod       *EnumDastScanMethodType   `json:"scanMethod"`
	TargetType       *EnumDastTargetTypeEnum   `json:"targetType"`
	TargetUrl        *string                   `json:"targetUrl"`
}

type DastSiteProfileUpdatePayload struct {
	ClientMutationId *string            `json:"clientMutationId"`
	DastSiteProfile  *DastSiteProfile   `json:"dastSiteProfile"`
	Errors           []string           `json:"errors"`
	Id               *DastSiteProfileID `json:"id"`
}

type DastSiteTokenCreateInput struct {
	ClientMutationId *string `json:"clientMutationId"`
	FullPath         string  `json:"fullPath"`
	TargetUrl        *string `json:"targetUrl"`
}

type DastSiteTokenCreatePayload struct {
	ClientMutationId *string                                  `json:"clientMutationId"`
	Errors           []string                                 `json:"errors"`
	Id               *DastSiteTokenID                         `json:"id"`
	Status           *EnumDastSiteProfileValidationStatusEnum `json:"status"`
	Token            *string                                  `json:"token"`
}

type DastSiteValidation struct {
	Id                  DastSiteValidationID                    `json:"id"`
	NormalizedTargetUrl *string                                 `json:"normalizedTargetUrl"`
	Status              EnumDastSiteProfileValidationStatusEnum `json:"status"`
	ValidationStartedAt *Time                                   `json:"validationStartedAt"`
}

type DastSiteValidationConnection struct {
	Edges    []*DastSiteValidationEdge `json:"edges"`
	Nodes    []*DastSiteValidation     `json:"nodes"`
	PageInfo PageInfo                  `json:"pageInfo"`
}

type DastSiteValidationCreateInput struct {
	ClientMutationId *string                             `json:"clientMutationId"`
	DastSiteTokenId  DastSiteTokenID                     `json:"dastSiteTokenId"`
	FullPath         string                              `json:"fullPath"`
	Strategy         *EnumDastSiteValidationStrategyEnum `json:"strategy"`
	ValidationPath   string                              `json:"validationPath"`
}

type DastSiteValidationCreatePayload struct {
	ClientMutationId *string                                  `json:"clientMutationId"`
	Errors           []string                                 `json:"errors"`
	Id               *DastSiteValidationID                    `json:"id"`
	Status           *EnumDastSiteProfileValidationStatusEnum `json:"status"`
}

type DastSiteValidationEdge struct {
	Cursor string              `json:"cursor"`
	Node   *DastSiteValidation `json:"node"`
}

type DastSiteValidationRevokeInput struct {
	ClientMutationId    *string `json:"clientMutationId"`
	FullPath            string  `json:"fullPath"`
	NormalizedTargetUrl string  `json:"normalizedTargetUrl"`
}

type DastSiteValidationRevokePayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
}

type DeleteAnnotationInput struct {
	ClientMutationId *string                      `json:"clientMutationId"`
	Id               MetricsDashboardAnnotationID `json:"id"`
}

type DeleteAnnotationPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
}

type DeleteJobsResponse struct {
	Completed   *bool  `json:"completed"`
	DeletedJobs *int64 `json:"deletedJobs"`
	QueueSize   *int64 `json:"queueSize"`
}

type DeletedNote struct {
	DiscussionId       *DiscussionID `json:"discussionId"`
	Id                 NoteID        `json:"id"`
	LastDiscussionNote *bool         `json:"lastDiscussionNote"`
}

type Dependency struct {
	Id       GlobalID            `json:"id"`
	Location *Location           `json:"location"`
	Name     string              `json:"name"`
	Packager *EnumPackageManager `json:"packager"`
	Version  *string             `json:"version"`
}

type DependencyConnection struct {
	Edges    []*DependencyEdge `json:"edges"`
	Nodes    []*Dependency     `json:"nodes"`
	PageInfo PageInfo          `json:"pageInfo"`
}

type DependencyEdge struct {
	Cursor string      `json:"cursor"`
	Node   *Dependency `json:"node"`
}

type DependencyLinkMetadata struct {
	TypeName string `json:"__typeName"`
	NugetDependencyLinkMetadata
}

type DependencyProxyBlob struct {
	CreatedAt Time   `json:"createdAt"`
	FileName  string `json:"fileName"`
	Size      string `json:"size"`
	UpdatedAt Time   `json:"updatedAt"`
}

type DependencyProxyBlobConnection struct {
	Edges    []*DependencyProxyBlobEdge `json:"edges"`
	Nodes    []*DependencyProxyBlob     `json:"nodes"`
	PageInfo PageInfo                   `json:"pageInfo"`
}

type DependencyProxyBlobEdge struct {
	Cursor string               `json:"cursor"`
	Node   *DependencyProxyBlob `json:"node"`
}

type DependencyProxyBlobRegistry struct {
	CreatedAt              *Time                      `json:"createdAt"`
	DependencyProxyBlobId  string                     `json:"dependencyProxyBlobId"`
	Id                     string                     `json:"id"`
	LastSyncFailure        *string                    `json:"lastSyncFailure"`
	LastSyncedAt           *Time                      `json:"lastSyncedAt"`
	RetryAt                *Time                      `json:"retryAt"`
	RetryCount             *int64                     `json:"retryCount"`
	State                  *EnumRegistryState         `json:"state"`
	VerificationChecksum   *string                    `json:"verificationChecksum"`
	VerificationFailure    *string                    `json:"verificationFailure"`
	VerificationRetryAt    *Time                      `json:"verificationRetryAt"`
	VerificationRetryCount *int64                     `json:"verificationRetryCount"`
	VerificationStartedAt  *Time                      `json:"verificationStartedAt"`
	VerificationState      *EnumVerificationStateEnum `json:"verificationState"`
	VerifiedAt             *Time                      `json:"verifiedAt"`
}

type DependencyProxyBlobRegistryConnection struct {
	Edges    []*DependencyProxyBlobRegistryEdge `json:"edges"`
	Nodes    []*DependencyProxyBlobRegistry     `json:"nodes"`
	PageInfo PageInfo                           `json:"pageInfo"`
}

type DependencyProxyBlobRegistryEdge struct {
	Cursor string                       `json:"cursor"`
	Node   *DependencyProxyBlobRegistry `json:"node"`
}

type DependencyProxyImageTtlGroupPolicy struct {
	CreatedAt *Time  `json:"createdAt"`
	Enabled   bool   `json:"enabled"`
	Ttl       *int64 `json:"ttl"`
	UpdatedAt *Time  `json:"updatedAt"`
}

type DependencyProxyManifest struct {
	CreatedAt Time                              `json:"createdAt"`
	Digest    string                            `json:"digest"`
	FileName  string                            `json:"fileName"`
	Id        DependencyProxyManifestID         `json:"id"`
	ImageName string                            `json:"imageName"`
	Size      string                            `json:"size"`
	Status    EnumDependencyProxyManifestStatus `json:"status"`
	UpdatedAt Time                              `json:"updatedAt"`
}

type DependencyProxyManifestConnection struct {
	Edges    []*DependencyProxyManifestEdge `json:"edges"`
	Nodes    []*DependencyProxyManifest     `json:"nodes"`
	PageInfo PageInfo                       `json:"pageInfo"`
}

type DependencyProxyManifestEdge struct {
	Cursor string                   `json:"cursor"`
	Node   *DependencyProxyManifest `json:"node"`
}

type DependencyProxyManifestRegistry struct {
	CreatedAt                 *Time                      `json:"createdAt"`
	DependencyProxyManifestId string                     `json:"dependencyProxyManifestId"`
	Id                        string                     `json:"id"`
	LastSyncFailure           *string                    `json:"lastSyncFailure"`
	LastSyncedAt              *Time                      `json:"lastSyncedAt"`
	RetryAt                   *Time                      `json:"retryAt"`
	RetryCount                *int64                     `json:"retryCount"`
	State                     *EnumRegistryState         `json:"state"`
	VerificationChecksum      *string                    `json:"verificationChecksum"`
	VerificationFailure       *string                    `json:"verificationFailure"`
	VerificationRetryAt       *Time                      `json:"verificationRetryAt"`
	VerificationRetryCount    *int64                     `json:"verificationRetryCount"`
	VerificationStartedAt     *Time                      `json:"verificationStartedAt"`
	VerificationState         *EnumVerificationStateEnum `json:"verificationState"`
	VerifiedAt                *Time                      `json:"verifiedAt"`
}

type DependencyProxyManifestRegistryConnection struct {
	Edges    []*DependencyProxyManifestRegistryEdge `json:"edges"`
	Nodes    []*DependencyProxyManifestRegistry     `json:"nodes"`
	PageInfo PageInfo                               `json:"pageInfo"`
}

type DependencyProxyManifestRegistryEdge struct {
	Cursor string                           `json:"cursor"`
	Node   *DependencyProxyManifestRegistry `json:"node"`
}

type DependencyProxySetting struct {
	Enabled bool `json:"enabled"`
}

type Deployment struct {
	ApprovalSummary      *DeploymentApprovalSummary `json:"approvalSummary"`
	Approvals            []DeploymentApproval       `json:"approvals"`
	Commit               *Commit                    `json:"commit"`
	CreatedAt            *Time                      `json:"createdAt"`
	FinishedAt           *Time                      `json:"finishedAt"`
	Id                   *string                    `json:"id"`
	Iid                  *string                    `json:"iid"`
	Job                  *CiJob                     `json:"job"`
	PendingApprovalCount *int64                     `json:"pendingApprovalCount"`
	Ref                  *string                    `json:"ref"`
	Sha                  *string                    `json:"sha"`
	Status               *EnumDeploymentStatus      `json:"status"`
	Tag                  *bool                      `json:"tag"`
	Tags                 []DeploymentTag            `json:"tags"`
	Triggerer            *UserCore                  `json:"triggerer"`
	UpdatedAt            *Time                      `json:"updatedAt"`
	UserPermissions      DeploymentPermissions      `json:"userPermissions"`
}

type DeploymentApproval struct {
	Comment   *string                        `json:"comment"`
	CreatedAt *Time                          `json:"createdAt"`
	Status    *EnumDeploymentsApprovalStatus `json:"status"`
	UpdatedAt *Time                          `json:"updatedAt"`
	User      *UserCore                      `json:"user"`
}

type DeploymentApprovalSummary struct {
	Rules                     []ProtectedEnvironmentApprovalRuleForSummary `json:"rules"`
	Status                    *EnumDeploymentApprovalSummaryStatus         `json:"status"`
	TotalPendingApprovalCount *int64                                       `json:"totalPendingApprovalCount"`
	TotalRequiredApprovals    *int64                                       `json:"totalRequiredApprovals"`
}

type DeploymentConnection struct {
	Edges    []*DeploymentEdge `json:"edges"`
	Nodes    []*Deployment     `json:"nodes"`
	PageInfo PageInfo          `json:"pageInfo"`
}

type DeploymentEdge struct {
	Cursor string      `json:"cursor"`
	Node   *Deployment `json:"node"`
}

type DeploymentPermissions struct {
	ApproveDeployment bool `json:"approveDeployment"`
	DestroyDeployment bool `json:"destroyDeployment"`
	UpdateDeployment  bool `json:"updateDeployment"`
}

type DeploymentTag struct {
	Name *string `json:"name"`
	Path *string `json:"path"`
}

type DeploymentsOrderByInput struct {
	CreatedAt  *EnumSortDirectionEnum `json:"createdAt"`
	FinishedAt *EnumSortDirectionEnum `json:"finishedAt"`
}

type DescriptionVersion struct {
	CanDelete   *bool                `json:"canDelete"`
	DeletePath  *string              `json:"deletePath"`
	Deleted     *bool                `json:"deleted"`
	Description *string              `json:"description"`
	Diff        *string              `json:"diff"`
	DiffPath    *string              `json:"diffPath"`
	Id          DescriptionVersionID `json:"id"`
}

type Design struct {
	Commenters       UserCoreConnection      `json:"commenters"`
	CurrentUserTodos TodoConnection          `json:"currentUserTodos"`
	Description      *string                 `json:"description"`
	DescriptionHtml  *string                 `json:"descriptionHtml"`
	DiffRefs         DiffRefs                `json:"diffRefs"`
	Discussions      DiscussionConnection    `json:"discussions"`
	Event            EnumDesignVersionEvent  `json:"event"`
	Filename         string                  `json:"filename"`
	FullPath         string                  `json:"fullPath"`
	Id               string                  `json:"id"`
	Image            string                  `json:"image"`
	ImageV432x230    *string                 `json:"imageV432x230"`
	Issue            Issue                   `json:"issue"`
	Notes            NoteConnection          `json:"notes"`
	NotesCount       int64                   `json:"notesCount"`
	Project          Project                 `json:"project"`
	Versions         DesignVersionConnection `json:"versions"`
	WebUrl           string                  `json:"webUrl"`
}

type DesignAtVersion struct {
	Design        Design                 `json:"design"`
	DiffRefs      DiffRefs               `json:"diffRefs"`
	Event         EnumDesignVersionEvent `json:"event"`
	Filename      string                 `json:"filename"`
	FullPath      string                 `json:"fullPath"`
	Id            string                 `json:"id"`
	Image         string                 `json:"image"`
	ImageV432x230 *string                `json:"imageV432x230"`
	Issue         Issue                  `json:"issue"`
	NotesCount    int64                  `json:"notesCount"`
	Project       Project                `json:"project"`
	Version       DesignVersion          `json:"version"`
}

type DesignAtVersionConnection struct {
	Edges    []*DesignAtVersionEdge `json:"edges"`
	Nodes    []*DesignAtVersion     `json:"nodes"`
	PageInfo PageInfo               `json:"pageInfo"`
}

type DesignAtVersionEdge struct {
	Cursor string           `json:"cursor"`
	Node   *DesignAtVersion `json:"node"`
}

type DesignCollection struct {
	CopyState       *EnumDesignCollectionCopyState `json:"copyState"`
	Design          *Design                        `json:"design"`
	DesignAtVersion *DesignAtVersion               `json:"designAtVersion"`
	Designs         DesignConnection               `json:"designs"`
	Issue           Issue                          `json:"issue"`
	Project         Project                        `json:"project"`
	Version         *DesignVersion                 `json:"version"`
	Versions        DesignVersionConnection        `json:"versions"`
}

type DesignConnection struct {
	Edges    []*DesignEdge `json:"edges"`
	Nodes    []*Design     `json:"nodes"`
	PageInfo PageInfo      `json:"pageInfo"`
}

type DesignEdge struct {
	Cursor string  `json:"cursor"`
	Node   *Design `json:"node"`
}

type DesignManagement struct {
	DesignAtVersion *DesignAtVersion `json:"designAtVersion"`
	Version         *DesignVersion   `json:"version"`
}

type DesignManagementDeleteInput struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Filenames        []string `json:"filenames"`
	Iid              string   `json:"iid"`
	ProjectPath      string   `json:"projectPath"`
}

type DesignManagementDeletePayload struct {
	ClientMutationId *string        `json:"clientMutationId"`
	Errors           []string       `json:"errors"`
	Version          *DesignVersion `json:"version"`
}

type DesignManagementMoveInput struct {
	ClientMutationId *string                   `json:"clientMutationId"`
	Id               DesignManagementDesignID  `json:"id"`
	Next             *DesignManagementDesignID `json:"next"`
	Previous         *DesignManagementDesignID `json:"previous"`
}

type DesignManagementMovePayload struct {
	ClientMutationId *string           `json:"clientMutationId"`
	DesignCollection *DesignCollection `json:"designCollection"`
	Errors           []string          `json:"errors"`
}

type DesignManagementRepositoryRegistry struct {
	CreatedAt                    *Time                      `json:"createdAt"`
	DesignManagementRepositoryId string                     `json:"designManagementRepositoryId"`
	Id                           string                     `json:"id"`
	LastSyncFailure              *string                    `json:"lastSyncFailure"`
	LastSyncedAt                 *Time                      `json:"lastSyncedAt"`
	RetryAt                      *Time                      `json:"retryAt"`
	RetryCount                   *int64                     `json:"retryCount"`
	State                        *EnumRegistryState         `json:"state"`
	VerificationChecksum         *string                    `json:"verificationChecksum"`
	VerificationFailure          *string                    `json:"verificationFailure"`
	VerificationRetryAt          *Time                      `json:"verificationRetryAt"`
	VerificationRetryCount       *int64                     `json:"verificationRetryCount"`
	VerificationStartedAt        *Time                      `json:"verificationStartedAt"`
	VerificationState            *EnumVerificationStateEnum `json:"verificationState"`
	VerifiedAt                   *Time                      `json:"verifiedAt"`
}

type DesignManagementRepositoryRegistryConnection struct {
	Edges    []*DesignManagementRepositoryRegistryEdge `json:"edges"`
	Nodes    []*DesignManagementRepositoryRegistry     `json:"nodes"`
	PageInfo PageInfo                                  `json:"pageInfo"`
}

type DesignManagementRepositoryRegistryEdge struct {
	Cursor string                              `json:"cursor"`
	Node   *DesignManagementRepositoryRegistry `json:"node"`
}

type DesignManagementUpdateInput struct {
	ClientMutationId *string                  `json:"clientMutationId"`
	Description      *string                  `json:"description"`
	Id               DesignManagementDesignID `json:"id"`
}

type DesignManagementUpdatePayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Design           Design   `json:"design"`
	Errors           []string `json:"errors"`
}

type DesignManagementUploadInput struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Files            []Upload `json:"files"`
	Iid              string   `json:"iid"`
	ProjectPath      string   `json:"projectPath"`
}

type DesignManagementUploadPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Designs          []Design `json:"designs"`
	Errors           []string `json:"errors"`
	SkippedDesigns   []Design `json:"skippedDesigns"`
}

type DesignVersion struct {
	Author           UserCore                  `json:"author"`
	CreatedAt        Time                      `json:"createdAt"`
	DesignAtVersion  DesignAtVersion           `json:"designAtVersion"`
	Designs          DesignConnection          `json:"designs"`
	DesignsAtVersion DesignAtVersionConnection `json:"designsAtVersion"`
	Id               string                    `json:"id"`
	Sha              string                    `json:"sha"`
}

type DesignVersionConnection struct {
	Edges    []*DesignVersionEdge `json:"edges"`
	Nodes    []*DesignVersion     `json:"nodes"`
	PageInfo PageInfo             `json:"pageInfo"`
}

type DesignVersionEdge struct {
	Cursor string         `json:"cursor"`
	Node   *DesignVersion `json:"node"`
}

type DestroyBoardInput struct {
	ClientMutationId *string `json:"clientMutationId"`
	Id               BoardID `json:"id"`
}

type DestroyBoardListInput struct {
	ClientMutationId *string `json:"clientMutationId"`
	ListId           ListID  `json:"listId"`
}

type DestroyBoardListPayload struct {
	ClientMutationId *string    `json:"clientMutationId"`
	Errors           []string   `json:"errors"`
	List             *BoardList `json:"list"`
}

type DestroyBoardPayload struct {
	Board            *Board   `json:"board"`
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
}

type DestroyComplianceFrameworkInput struct {
	ClientMutationId *string                         `json:"clientMutationId"`
	Id               ComplianceManagementFrameworkID `json:"id"`
}

type DestroyComplianceFrameworkPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
}

type DestroyContainerRepositoryInput struct {
	ClientMutationId *string               `json:"clientMutationId"`
	Id               ContainerRepositoryID `json:"id"`
}

type DestroyContainerRepositoryPayload struct {
	ClientMutationId    *string             `json:"clientMutationId"`
	ContainerRepository ContainerRepository `json:"containerRepository"`
	Errors              []string            `json:"errors"`
}

type DestroyContainerRepositoryTagsInput struct {
	ClientMutationId *string               `json:"clientMutationId"`
	Id               ContainerRepositoryID `json:"id"`
	TagNames         []string              `json:"tagNames"`
}

type DestroyContainerRepositoryTagsPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	DeletedTagNames  []string `json:"deletedTagNames"`
	Errors           []string `json:"errors"`
}

type DestroyCustomEmojiInput struct {
	ClientMutationId *string       `json:"clientMutationId"`
	Id               CustomEmojiID `json:"id"`
}

type DestroyCustomEmojiPayload struct {
	ClientMutationId *string      `json:"clientMutationId"`
	CustomEmoji      *CustomEmoji `json:"customEmoji"`
	Errors           []string     `json:"errors"`
}

type DestroyEpicBoardInput struct {
	ClientMutationId *string           `json:"clientMutationId"`
	Id               BoardsEpicBoardID `json:"id"`
}

type DestroyEpicBoardPayload struct {
	ClientMutationId *string    `json:"clientMutationId"`
	EpicBoard        *EpicBoard `json:"epicBoard"`
	Errors           []string   `json:"errors"`
}

type DestroyNoteInput struct {
	ClientMutationId *string `json:"clientMutationId"`
	Id               NoteID  `json:"id"`
}

type DestroyNotePayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	Note             *Note    `json:"note"`
}

type DestroyPackageFileInput struct {
	ClientMutationId *string               `json:"clientMutationId"`
	Id               PackagesPackageFileID `json:"id"`
}

type DestroyPackageFilePayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
}

type DestroyPackageFilesInput struct {
	ClientMutationId *string                 `json:"clientMutationId"`
	Ids              []PackagesPackageFileID `json:"ids"`
	ProjectPath      string                  `json:"projectPath"`
}

type DestroyPackageFilesPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
}

type DestroyPackageInput struct {
	ClientMutationId *string           `json:"clientMutationId"`
	Id               PackagesPackageID `json:"id"`
}

type DestroyPackagePayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
}

type DestroyPackagesInput struct {
	ClientMutationId *string             `json:"clientMutationId"`
	Ids              []PackagesPackageID `json:"ids"`
}

type DestroyPackagesPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
}

type DestroySnippetInput struct {
	ClientMutationId *string   `json:"clientMutationId"`
	Id               SnippetID `json:"id"`
}

type DestroySnippetPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	Snippet          *Snippet `json:"snippet"`
}

type DetailedStatus struct {
	Action      *StatusAction `json:"action"`
	DetailsPath *string       `json:"detailsPath"`
	Favicon     *string       `json:"favicon"`
	Group       *string       `json:"group"`
	HasDetails  *bool         `json:"hasDetails"`
	Icon        *string       `json:"icon"`
	Id          string        `json:"id"`
	Label       *string       `json:"label"`
	Text        *string       `json:"text"`
	Tooltip     *string       `json:"tooltip"`
}

type DevopsAdoptionEnabledNamespace struct {
	DisplayNamespace *Namespace                        `json:"displayNamespace"`
	Id               string                            `json:"id"`
	LatestSnapshot   *DevopsAdoptionSnapshot           `json:"latestSnapshot"`
	Namespace        *Namespace                        `json:"namespace"`
	Snapshots        *DevopsAdoptionSnapshotConnection `json:"snapshots"`
}

type DevopsAdoptionEnabledNamespaceConnection struct {
	Edges    []*DevopsAdoptionEnabledNamespaceEdge `json:"edges"`
	Nodes    []*DevopsAdoptionEnabledNamespace     `json:"nodes"`
	PageInfo PageInfo                              `json:"pageInfo"`
}

type DevopsAdoptionEnabledNamespaceEdge struct {
	Cursor string                          `json:"cursor"`
	Node   *DevopsAdoptionEnabledNamespace `json:"node"`
}

type DevopsAdoptionSnapshot struct {
	CodeOwnersUsedCount              *int64 `json:"codeOwnersUsedCount"`
	CoverageFuzzingEnabledCount      *int64 `json:"coverageFuzzingEnabledCount"`
	DastEnabledCount                 *int64 `json:"dastEnabledCount"`
	DependencyScanningEnabledCount   *int64 `json:"dependencyScanningEnabledCount"`
	DeploySucceeded                  bool   `json:"deploySucceeded"`
	EndTime                          Time   `json:"endTime"`
	IssueOpened                      bool   `json:"issueOpened"`
	MergeRequestApproved             bool   `json:"mergeRequestApproved"`
	MergeRequestOpened               bool   `json:"mergeRequestOpened"`
	PipelineSucceeded                bool   `json:"pipelineSucceeded"`
	RecordedAt                       Time   `json:"recordedAt"`
	RunnerConfigured                 bool   `json:"runnerConfigured"`
	SastEnabledCount                 *int64 `json:"sastEnabledCount"`
	StartTime                        Time   `json:"startTime"`
	TotalProjectsCount               *int64 `json:"totalProjectsCount"`
	VulnerabilityManagementUsedCount *int64 `json:"vulnerabilityManagementUsedCount"`
}

type DevopsAdoptionSnapshotConnection struct {
	Edges    []*DevopsAdoptionSnapshotEdge `json:"edges"`
	Nodes    []*DevopsAdoptionSnapshot     `json:"nodes"`
	PageInfo PageInfo                      `json:"pageInfo"`
}

type DevopsAdoptionSnapshotEdge struct {
	Cursor string                  `json:"cursor"`
	Node   *DevopsAdoptionSnapshot `json:"node"`
}

type Diff struct {
	AMode       *string `json:"aMode"`
	BMode       *string `json:"bMode"`
	DeletedFile *string `json:"deletedFile"`
	Diff        *string `json:"diff"`
	NewFile     *string `json:"newFile"`
	NewPath     *string `json:"newPath"`
	OldPath     *string `json:"oldPath"`
	RenamedFile *string `json:"renamedFile"`
}

type DiffImagePositionInput struct {
	BaseSha  *string        `json:"baseSha"`
	HeadSha  string         `json:"headSha"`
	Height   int64          `json:"height"`
	Paths    DiffPathsInput `json:"paths"`
	StartSha string         `json:"startSha"`
	Width    int64          `json:"width"`
	X        int64          `json:"x"`
	Y        int64          `json:"y"`
}

type DiffPathsInput struct {
	NewPath *string `json:"newPath"`
	OldPath *string `json:"oldPath"`
}

type DiffPosition struct {
	DiffRefs     DiffRefs             `json:"diffRefs"`
	FilePath     string               `json:"filePath"`
	Height       *int64               `json:"height"`
	NewLine      *int64               `json:"newLine"`
	NewPath      *string              `json:"newPath"`
	OldLine      *int64               `json:"oldLine"`
	OldPath      *string              `json:"oldPath"`
	PositionType EnumDiffPositionType `json:"positionType"`
	Width        *int64               `json:"width"`
	X            *int64               `json:"x"`
	Y            *int64               `json:"y"`
}

type DiffPositionInput struct {
	BaseSha  *string        `json:"baseSha"`
	HeadSha  string         `json:"headSha"`
	NewLine  *int64         `json:"newLine"`
	OldLine  *int64         `json:"oldLine"`
	Paths    DiffPathsInput `json:"paths"`
	StartSha string         `json:"startSha"`
}

type DiffRefs struct {
	BaseSha  *string `json:"baseSha"`
	HeadSha  string  `json:"headSha"`
	StartSha string  `json:"startSha"`
}

type DiffStats struct {
	Additions int64  `json:"additions"`
	Deletions int64  `json:"deletions"`
	Path      string `json:"path"`
}

type DiffStatsSummary struct {
	Additions int64 `json:"additions"`
	Changes   int64 `json:"changes"`
	Deletions int64 `json:"deletions"`
	FileCount int64 `json:"fileCount"`
}

type DisableDevopsAdoptionNamespaceInput struct {
	ClientMutationId *string                                     `json:"clientMutationId"`
	Id               []AnalyticsDevopsAdoptionEnabledNamespaceID `json:"id"`
}

type DisableDevopsAdoptionNamespacePayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
}

type Discussion struct {
	CreatedAt  Time           `json:"createdAt"`
	Id         DiscussionID   `json:"id"`
	Noteable   *NoteableType  `json:"noteable"`
	Notes      NoteConnection `json:"notes"`
	ReplyId    DiscussionID   `json:"replyId"`
	Resolvable bool           `json:"resolvable"`
	Resolved   bool           `json:"resolved"`
	ResolvedAt *Time          `json:"resolvedAt"`
	ResolvedBy *UserCore      `json:"resolvedBy"`
}

type DiscussionConnection struct {
	Edges    []*DiscussionEdge `json:"edges"`
	Nodes    []*Discussion     `json:"nodes"`
	PageInfo PageInfo          `json:"pageInfo"`
}

type DiscussionEdge struct {
	Cursor string      `json:"cursor"`
	Node   *Discussion `json:"node"`
}

type DiscussionToggleResolveInput struct {
	ClientMutationId *string      `json:"clientMutationId"`
	Id               DiscussionID `json:"id"`
	Resolve          bool         `json:"resolve"`
}

type DiscussionToggleResolvePayload struct {
	ClientMutationId *string     `json:"clientMutationId"`
	Discussion       *Discussion `json:"discussion"`
	Errors           []string    `json:"errors"`
}

type Dora struct {
	Metrics []DoraMetric `json:"metrics"`
}

type DoraMetric struct {
	ChangeFailureRate    *float64 `json:"changeFailureRate"`
	Date                 *string  `json:"date"`
	DeploymentFrequency  *float64 `json:"deploymentFrequency"`
	LeadTimeForChanges   *float64 `json:"leadTimeForChanges"`
	TimeToRestoreService *float64 `json:"timeToRestoreService"`
	Value                *float64 `json:"value"`
}

type DoraPerformanceScoreCount struct {
	HighProjectsCount   *int64 `json:"highProjectsCount"`
	LowProjectsCount    *int64 `json:"lowProjectsCount"`
	MediumProjectsCount *int64 `json:"mediumProjectsCount"`
	MetricName          string `json:"metricName"`
	NoDataProjectsCount *int64 `json:"noDataProjectsCount"`
}

type DoraPerformanceScoreCountConnection struct {
	Edges    []*DoraPerformanceScoreCountEdge `json:"edges"`
	Nodes    []*DoraPerformanceScoreCount     `json:"nodes"`
	PageInfo PageInfo                         `json:"pageInfo"`
}

type DoraPerformanceScoreCountEdge struct {
	Cursor string                     `json:"cursor"`
	Node   *DoraPerformanceScoreCount `json:"node"`
}

type EchoCreateInput struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	Messages         []string `json:"messages"`
}

type EchoCreatePayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Echoes           []string `json:"echoes"`
	Errors           []string `json:"errors"`
}

type EgressNode struct {
	ArtifactsEgress  BigInt `json:"artifactsEgress"`
	Date             string `json:"date"`
	PackagesEgress   BigInt `json:"packagesEgress"`
	RegistryEgress   BigInt `json:"registryEgress"`
	RepositoryEgress BigInt `json:"repositoryEgress"`
	TotalEgress      BigInt `json:"totalEgress"`
}

type EgressNodeConnection struct {
	Edges    []*EgressNodeEdge `json:"edges"`
	Nodes    []*EgressNode     `json:"nodes"`
	PageInfo PageInfo          `json:"pageInfo"`
}

type EgressNodeEdge struct {
	Cursor string      `json:"cursor"`
	Node   *EgressNode `json:"node"`
}

type Email struct {
	ConfirmedAt *Time  `json:"confirmedAt"`
	CreatedAt   Time   `json:"createdAt"`
	Email       string `json:"email"`
	Id          string `json:"id"`
	UpdatedAt   Time   `json:"updatedAt"`
}

type EmailConnection struct {
	Edges    []*EmailEdge `json:"edges"`
	Nodes    []*Email     `json:"nodes"`
	PageInfo PageInfo     `json:"pageInfo"`
}

type EmailEdge struct {
	Cursor string `json:"cursor"`
	Node   *Email `json:"node"`
}

type EnableDevopsAdoptionNamespaceInput struct {
	ClientMutationId   *string      `json:"clientMutationId"`
	DisplayNamespaceId *NamespaceID `json:"displayNamespaceId"`
	NamespaceId        NamespaceID  `json:"namespaceId"`
}

type EnableDevopsAdoptionNamespacePayload struct {
	ClientMutationId *string                         `json:"clientMutationId"`
	EnabledNamespace *DevopsAdoptionEnabledNamespace `json:"enabledNamespace"`
	Errors           []string                        `json:"errors"`
}

type Environment struct {
	AutoDeleteAt                *Time                           `json:"autoDeleteAt"`
	AutoStopAt                  *Time                           `json:"autoStopAt"`
	ClusterAgent                *ClusterAgent                   `json:"clusterAgent"`
	CreatedAt                   *Time                           `json:"createdAt"`
	DeployFreezes               []CiFreezePeriod                `json:"deployFreezes"`
	Deployments                 *DeploymentConnection           `json:"deployments"`
	EnvironmentType             *string                         `json:"environmentType"`
	ExternalUrl                 *string                         `json:"externalUrl"`
	Id                          string                          `json:"id"`
	KubernetesNamespace         *string                         `json:"kubernetesNamespace"`
	LastDeployment              *Deployment                     `json:"lastDeployment"`
	LatestOpenedMostSevereAlert *AlertManagementAlert           `json:"latestOpenedMostSevereAlert"`
	Name                        string                          `json:"name"`
	Path                        string                          `json:"path"`
	ProtectedEnvironments       *ProtectedEnvironmentConnection `json:"protectedEnvironments"`
	Slug                        *string                         `json:"slug"`
	State                       string                          `json:"state"`
	Tier                        *EnumDeploymentTier             `json:"tier"`
	UpdatedAt                   *Time                           `json:"updatedAt"`
	UserPermissions             EnvironmentPermissions          `json:"userPermissions"`
}

type EnvironmentConnection struct {
	Edges    []*EnvironmentEdge `json:"edges"`
	Nodes    []*Environment     `json:"nodes"`
	PageInfo PageInfo           `json:"pageInfo"`
}

type EnvironmentCreateInput struct {
	ClientMutationId    *string             `json:"clientMutationId"`
	ClusterAgentId      *ClustersAgentID    `json:"clusterAgentId"`
	ExternalUrl         *string             `json:"externalUrl"`
	KubernetesNamespace *string             `json:"kubernetesNamespace"`
	Name                string              `json:"name"`
	ProjectPath         string              `json:"projectPath"`
	Tier                *EnumDeploymentTier `json:"tier"`
}

type EnvironmentCreatePayload struct {
	ClientMutationId *string      `json:"clientMutationId"`
	Environment      *Environment `json:"environment"`
	Errors           []string     `json:"errors"`
}

type EnvironmentDeleteInput struct {
	ClientMutationId *string       `json:"clientMutationId"`
	Id               EnvironmentID `json:"id"`
}

type EnvironmentDeletePayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
}

type EnvironmentEdge struct {
	Cursor string       `json:"cursor"`
	Node   *Environment `json:"node"`
}

type EnvironmentPermissions struct {
	DestroyEnvironment bool `json:"destroyEnvironment"`
	StopEnvironment    bool `json:"stopEnvironment"`
	UpdateEnvironment  bool `json:"updateEnvironment"`
}

type EnvironmentStopInput struct {
	ClientMutationId *string       `json:"clientMutationId"`
	Force            *bool         `json:"force"`
	Id               EnvironmentID `json:"id"`
}

type EnvironmentStopPayload struct {
	ClientMutationId *string      `json:"clientMutationId"`
	Environment      *Environment `json:"environment"`
	Errors           []string     `json:"errors"`
}

type EnvironmentUpdateInput struct {
	ClientMutationId    *string             `json:"clientMutationId"`
	ClusterAgentId      *ClustersAgentID    `json:"clusterAgentId"`
	ExternalUrl         *string             `json:"externalUrl"`
	Id                  EnvironmentID       `json:"id"`
	KubernetesNamespace *string             `json:"kubernetesNamespace"`
	Tier                *EnumDeploymentTier `json:"tier"`
}

type EnvironmentUpdatePayload struct {
	ClientMutationId *string      `json:"clientMutationId"`
	Environment      *Environment `json:"environment"`
	Errors           []string     `json:"errors"`
}

type EnvironmentsCanaryIngressUpdateInput struct {
	ClientMutationId *string       `json:"clientMutationId"`
	Id               EnvironmentID `json:"id"`
	Weight           int64         `json:"weight"`
}

type EnvironmentsCanaryIngressUpdatePayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
}

type Epic struct {
	Ancestors                      *EpicConnection        `json:"ancestors"`
	Author                         UserCore               `json:"author"`
	AwardEmoji                     *AwardEmojiConnection  `json:"awardEmoji"`
	Blocked                        *bool                  `json:"blocked"`
	BlockedByCount                 *int64                 `json:"blockedByCount"`
	BlockedByEpics                 *EpicConnection        `json:"blockedByEpics"`
	BlockingCount                  *int64                 `json:"blockingCount"`
	Children                       *EpicConnection        `json:"children"`
	ClosedAt                       *Time                  `json:"closedAt"`
	Color                          *string                `json:"color"`
	Commenters                     UserCoreConnection     `json:"commenters"`
	Confidential                   *bool                  `json:"confidential"`
	CreatedAt                      *Time                  `json:"createdAt"`
	CurrentUserTodos               TodoConnection         `json:"currentUserTodos"`
	DefaultProjectForIssueCreation *Project               `json:"defaultProjectForIssueCreation"`
	DescendantCounts               *EpicDescendantCount   `json:"descendantCounts"`
	DescendantWeightSum            *EpicDescendantWeights `json:"descendantWeightSum"`
	Description                    *string                `json:"description"`
	DescriptionHtml                *string                `json:"descriptionHtml"`
	Discussions                    DiscussionConnection   `json:"discussions"`
	Downvotes                      int64                  `json:"downvotes"`
	DueDate                        *Time                  `json:"dueDate"`
	DueDateFixed                   *Time                  `json:"dueDateFixed"`
	DueDateFromInheritedSource     *Time                  `json:"dueDateFromInheritedSource"`
	DueDateFromMilestones          *Time                  `json:"dueDateFromMilestones"`
	DueDateIsFixed                 *bool                  `json:"dueDateIsFixed"`
	Events                         *EventConnection       `json:"events"`
	Group                          Group                  `json:"group"`
	HasChildren                    bool                   `json:"hasChildren"`
	HasIssues                      bool                   `json:"hasIssues"`
	HasParent                      bool                   `json:"hasParent"`
	HealthStatus                   *EpicHealthStatus      `json:"healthStatus"`
	Id                             string                 `json:"id"`
	Iid                            string                 `json:"iid"`
	Issues                         *EpicIssueConnection   `json:"issues"`
	Labels                         *LabelConnection       `json:"labels"`
	Notes                          NoteConnection         `json:"notes"`
	Parent                         *Epic                  `json:"parent"`
	Participants                   *UserCoreConnection    `json:"participants"`
	Reference                      string                 `json:"reference"`
	RelationPath                   *string                `json:"relationPath"`
	RelativePosition               *int64                 `json:"relativePosition"`
	StartDate                      *Time                  `json:"startDate"`
	StartDateFixed                 *Time                  `json:"startDateFixed"`
	StartDateFromInheritedSource   *Time                  `json:"startDateFromInheritedSource"`
	StartDateFromMilestones        *Time                  `json:"startDateFromMilestones"`
	StartDateIsFixed               *bool                  `json:"startDateIsFixed"`
	State                          EnumEpicState          `json:"state"`
	Subscribed                     bool                   `json:"subscribed"`
	TextColor                      *string                `json:"textColor"`
	Title                          *string                `json:"title"`
	TitleHtml                      *string                `json:"titleHtml"`
	UpdatedAt                      *Time                  `json:"updatedAt"`
	Upvotes                        int64                  `json:"upvotes"`
	UserDiscussionsCount           int64                  `json:"userDiscussionsCount"`
	UserNotesCount                 int64                  `json:"userNotesCount"`
	UserPermissions                EpicPermissions        `json:"userPermissions"`
	WebPath                        string                 `json:"webPath"`
	WebUrl                         string                 `json:"webUrl"`
}

type EpicAddIssueInput struct {
	ClientMutationId *string `json:"clientMutationId"`
	GroupPath        string  `json:"groupPath"`
	Iid              string  `json:"iid"`
	IssueIid         string  `json:"issueIid"`
	ProjectPath      string  `json:"projectPath"`
}

type EpicAddIssuePayload struct {
	ClientMutationId *string    `json:"clientMutationId"`
	Epic             *Epic      `json:"epic"`
	EpicIssue        *EpicIssue `json:"epicIssue"`
	Errors           []string   `json:"errors"`
}

type EpicBoard struct {
	DisplayColors   *bool               `json:"displayColors"`
	HideBacklogList *bool               `json:"hideBacklogList"`
	HideClosedList  *bool               `json:"hideClosedList"`
	Id              BoardsEpicBoardID   `json:"id"`
	Labels          *LabelConnection    `json:"labels"`
	Lists           *EpicListConnection `json:"lists"`
	Name            *string             `json:"name"`
	WebPath         string              `json:"webPath"`
	WebUrl          string              `json:"webUrl"`
}

type EpicBoardConnection struct {
	Edges    []*EpicBoardEdge `json:"edges"`
	Nodes    []*EpicBoard     `json:"nodes"`
	PageInfo PageInfo         `json:"pageInfo"`
}

type EpicBoardCreateInput struct {
	ClientMutationId *string   `json:"clientMutationId"`
	DisplayColors    *bool     `json:"displayColors"`
	GroupPath        *string   `json:"groupPath"`
	HideBacklogList  *bool     `json:"hideBacklogList"`
	HideClosedList   *bool     `json:"hideClosedList"`
	LabelIds         []LabelID `json:"labelIds"`
	Labels           []string  `json:"labels"`
	Name             *string   `json:"name"`
}

type EpicBoardCreatePayload struct {
	ClientMutationId *string    `json:"clientMutationId"`
	EpicBoard        *EpicBoard `json:"epicBoard"`
	Errors           []string   `json:"errors"`
}

type EpicBoardEdge struct {
	Cursor string     `json:"cursor"`
	Node   *EpicBoard `json:"node"`
}

type EpicBoardListCreateInput struct {
	Backlog          *bool             `json:"backlog"`
	BoardId          BoardsEpicBoardID `json:"boardId"`
	ClientMutationId *string           `json:"clientMutationId"`
	LabelId          *LabelID          `json:"labelId"`
}

type EpicBoardListCreatePayload struct {
	ClientMutationId *string   `json:"clientMutationId"`
	Errors           []string  `json:"errors"`
	List             *EpicList `json:"list"`
}

type EpicBoardListDestroyInput struct {
	ClientMutationId *string          `json:"clientMutationId"`
	ListId           BoardsEpicListID `json:"listId"`
}

type EpicBoardListDestroyPayload struct {
	ClientMutationId *string   `json:"clientMutationId"`
	Errors           []string  `json:"errors"`
	List             *EpicList `json:"list"`
}

type EpicBoardUpdateInput struct {
	ClientMutationId *string           `json:"clientMutationId"`
	DisplayColors    *bool             `json:"displayColors"`
	HideBacklogList  *bool             `json:"hideBacklogList"`
	HideClosedList   *bool             `json:"hideClosedList"`
	Id               BoardsEpicBoardID `json:"id"`
	LabelIds         []LabelID         `json:"labelIds"`
	Labels           []string          `json:"labels"`
	Name             *string           `json:"name"`
}

type EpicBoardUpdatePayload struct {
	ClientMutationId *string    `json:"clientMutationId"`
	EpicBoard        *EpicBoard `json:"epicBoard"`
	Errors           []string   `json:"errors"`
}

type EpicConnection struct {
	Count    int64       `json:"count"`
	Edges    []*EpicEdge `json:"edges"`
	Nodes    []*Epic     `json:"nodes"`
	PageInfo PageInfo    `json:"pageInfo"`
}

type EpicDescendantCount struct {
	ClosedEpics  *int64 `json:"closedEpics"`
	ClosedIssues *int64 `json:"closedIssues"`
	OpenedEpics  *int64 `json:"openedEpics"`
	OpenedIssues *int64 `json:"openedIssues"`
}

type EpicDescendantWeights struct {
	ClosedIssues *int64 `json:"closedIssues"`
	OpenedIssues *int64 `json:"openedIssues"`
}

type EpicEdge struct {
	Cursor string `json:"cursor"`
	Node   *Epic  `json:"node"`
}

type EpicFilters struct {
	AuthorUsername  *string                     `json:"authorUsername"`
	Confidential    *bool                       `json:"confidential"`
	LabelName       []*string                   `json:"labelName"`
	MyReactionEmoji *string                     `json:"myReactionEmoji"`
	Not             *NegatedEpicBoardIssueInput `json:"not"`
	Or              *UnionedEpicFilterInput     `json:"or"`
	Search          *string                     `json:"search"`
}

type EpicHealthStatus struct {
	IssuesAtRisk           *int64 `json:"issuesAtRisk"`
	IssuesNeedingAttention *int64 `json:"issuesNeedingAttention"`
	IssuesOnTrack          *int64 `json:"issuesOnTrack"`
}

type EpicIssue struct {
	AlertManagementAlert        *AlertManagementAlert               `json:"alertManagementAlert"`
	AlertManagementAlerts       *AlertManagementAlertConnection     `json:"alertManagementAlerts"`
	Assignees                   *UserCoreConnection                 `json:"assignees"`
	Author                      UserCore                            `json:"author"`
	Blocked                     bool                                `json:"blocked"`
	BlockedByCount              *int64                              `json:"blockedByCount"`
	BlockedByIssues             *IssueConnection                    `json:"blockedByIssues"`
	BlockingCount               int64                               `json:"blockingCount"`
	ClosedAsDuplicateOf         *Issue                              `json:"closedAsDuplicateOf"`
	ClosedAt                    *Time                               `json:"closedAt"`
	Commenters                  UserCoreConnection                  `json:"commenters"`
	Confidential                bool                                `json:"confidential"`
	CreateNoteEmail             *string                             `json:"createNoteEmail"`
	CreatedAt                   Time                                `json:"createdAt"`
	CurrentUserTodos            TodoConnection                      `json:"currentUserTodos"`
	CustomerRelationsContacts   *CustomerRelationsContactConnection `json:"customerRelationsContacts"`
	Description                 *string                             `json:"description"`
	DescriptionHtml             *string                             `json:"descriptionHtml"`
	DesignCollection            *DesignCollection                   `json:"designCollection"`
	DiscussionLocked            bool                                `json:"discussionLocked"`
	Discussions                 DiscussionConnection                `json:"discussions"`
	Downvotes                   int64                               `json:"downvotes"`
	DueDate                     *Time                               `json:"dueDate"`
	EmailsDisabled              bool                                `json:"emailsDisabled"`
	EmailsEnabled               bool                                `json:"emailsEnabled"`
	Epic                        *Epic                               `json:"epic"`
	EpicIssueId                 string                              `json:"epicIssueId"`
	EscalationPolicy            *EscalationPolicyType               `json:"escalationPolicy"`
	EscalationStatus            *EnumIssueEscalationStatus          `json:"escalationStatus"`
	HasEpic                     bool                                `json:"hasEpic"`
	HealthStatus                *EnumHealthStatus                   `json:"healthStatus"`
	Hidden                      *bool                               `json:"hidden"`
	HumanTimeEstimate           *string                             `json:"humanTimeEstimate"`
	HumanTotalTimeSpent         *string                             `json:"humanTotalTimeSpent"`
	Id                          *string                             `json:"id"`
	Iid                         string                              `json:"iid"`
	IssuableResourceLinks       *IssuableResourceLinkConnection     `json:"issuableResourceLinks"`
	Iteration                   *Iteration                          `json:"iteration"`
	Labels                      *LabelConnection                    `json:"labels"`
	MergeRequestsCount          int64                               `json:"mergeRequestsCount"`
	MetricImages                []MetricImage                       `json:"metricImages"`
	Milestone                   *Milestone                          `json:"milestone"`
	Moved                       *bool                               `json:"moved"`
	MovedTo                     *Issue                              `json:"movedTo"`
	Notes                       NoteConnection                      `json:"notes"`
	Participants                *UserCoreConnection                 `json:"participants"`
	ProjectId                   int64                               `json:"projectId"`
	Reference                   string                              `json:"reference"`
	RelatedMergeRequests        *MergeRequestConnection             `json:"relatedMergeRequests"`
	RelatedVulnerabilities      *VulnerabilityConnection            `json:"relatedVulnerabilities"`
	RelationPath                *string                             `json:"relationPath"`
	RelativePosition            *int64                              `json:"relativePosition"`
	Severity                    *EnumIssuableSeverity               `json:"severity"`
	SlaDueAt                    *Time                               `json:"slaDueAt"`
	State                       EnumIssueState                      `json:"state"`
	StatusPagePublishedIncident *bool                               `json:"statusPagePublishedIncident"`
	Subscribed                  bool                                `json:"subscribed"`
	TaskCompletionStatus        TaskCompletionStatus                `json:"taskCompletionStatus"`
	TimeEstimate                int64                               `json:"timeEstimate"`
	Timelogs                    TimelogConnection                   `json:"timelogs"`
	Title                       string                              `json:"title"`
	TitleHtml                   *string                             `json:"titleHtml"`
	TotalTimeSpent              int64                               `json:"totalTimeSpent"`
	Type                        *EnumIssueType                      `json:"type"`
	UpdatedAt                   Time                                `json:"updatedAt"`
	UpdatedBy                   *UserCore                           `json:"updatedBy"`
	Upvotes                     int64                               `json:"upvotes"`
	UserDiscussionsCount        int64                               `json:"userDiscussionsCount"`
	UserNotesCount              int64                               `json:"userNotesCount"`
	UserPermissions             IssuePermissions                    `json:"userPermissions"`
	WebPath                     string                              `json:"webPath"`
	WebUrl                      string                              `json:"webUrl"`
	Weight                      *int64                              `json:"weight"`
}

type EpicIssueConnection struct {
	Count    int64            `json:"count"`
	Edges    []*EpicIssueEdge `json:"edges"`
	Nodes    []*EpicIssue     `json:"nodes"`
	PageInfo PageInfo         `json:"pageInfo"`
	Weight   int64            `json:"weight"`
}

type EpicIssueEdge struct {
	Cursor string     `json:"cursor"`
	Node   *EpicIssue `json:"node"`
}

type EpicList struct {
	Collapsed  *bool             `json:"collapsed"`
	Epics      *EpicConnection   `json:"epics"`
	EpicsCount *int64            `json:"epicsCount"`
	Id         BoardsEpicListID  `json:"id"`
	Label      *Label            `json:"label"`
	ListType   string            `json:"listType"`
	Metadata   *EpicListMetadata `json:"metadata"`
	Position   *int64            `json:"position"`
	Title      string            `json:"title"`
}

type EpicListConnection struct {
	Edges    []*EpicListEdge `json:"edges"`
	Nodes    []*EpicList     `json:"nodes"`
	PageInfo PageInfo        `json:"pageInfo"`
}

type EpicListEdge struct {
	Cursor string    `json:"cursor"`
	Node   *EpicList `json:"node"`
}

type EpicListMetadata struct {
	EpicsCount  *int64 `json:"epicsCount"`
	TotalWeight *int64 `json:"totalWeight"`
}

type EpicMoveListInput struct {
	BoardId          BoardsEpicBoardID `json:"boardId"`
	ClientMutationId *string           `json:"clientMutationId"`
	EpicId           EpicID            `json:"epicId"`
	FromListId       *BoardsEpicListID `json:"fromListId"`
	MoveAfterId      *EpicID           `json:"moveAfterId"`
	MoveBeforeId     *EpicID           `json:"moveBeforeId"`
	PositionInList   *int64            `json:"positionInList"`
	ToListId         BoardsEpicListID  `json:"toListId"`
}

type EpicMoveListPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Epic             *Epic    `json:"epic"`
	Errors           []string `json:"errors"`
}

type EpicPermissions struct {
	AdminEpic   bool `json:"adminEpic"`
	AwardEmoji  bool `json:"awardEmoji"`
	CreateEpic  bool `json:"createEpic"`
	CreateNote  bool `json:"createNote"`
	DestroyEpic bool `json:"destroyEpic"`
	ReadEpic    bool `json:"readEpic"`
	ReadEpicIid bool `json:"readEpicIid"`
	UpdateEpic  bool `json:"updateEpic"`
}

type EpicSetSubscriptionInput struct {
	ClientMutationId *string `json:"clientMutationId"`
	GroupPath        string  `json:"groupPath"`
	Iid              string  `json:"iid"`
	SubscribedState  bool    `json:"subscribedState"`
}

type EpicSetSubscriptionPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Epic             *Epic    `json:"epic"`
	Errors           []string `json:"errors"`
}

type EpicTreeNodeFieldsInputType struct {
	AdjacentReferenceId *EpicTreeSortingID `json:"adjacentReferenceId"`
	Id                  EpicTreeSortingID  `json:"id"`
	NewParentId         *EpicID            `json:"newParentId"`
	RelativePosition    *EnumMoveType      `json:"relativePosition"`
}

type EpicTreeReorderInput struct {
	BaseEpicId       EpicID                      `json:"baseEpicId"`
	ClientMutationId *string                     `json:"clientMutationId"`
	Moved            EpicTreeNodeFieldsInputType `json:"moved"`
}

type EpicTreeReorderPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
}

type EscalationPolicyCreateInput struct {
	ClientMutationId *string               `json:"clientMutationId"`
	Description      *string               `json:"description"`
	Name             string                `json:"name"`
	ProjectPath      string                `json:"projectPath"`
	Rules            []EscalationRuleInput `json:"rules"`
}

type EscalationPolicyCreatePayload struct {
	ClientMutationId *string               `json:"clientMutationId"`
	Errors           []string              `json:"errors"`
	EscalationPolicy *EscalationPolicyType `json:"escalationPolicy"`
}

type EscalationPolicyDestroyInput struct {
	ClientMutationId *string                              `json:"clientMutationId"`
	Id               IncidentManagementEscalationPolicyID `json:"id"`
}

type EscalationPolicyDestroyPayload struct {
	ClientMutationId *string               `json:"clientMutationId"`
	Errors           []string              `json:"errors"`
	EscalationPolicy *EscalationPolicyType `json:"escalationPolicy"`
}

type EscalationPolicyType struct {
	Description *string                               `json:"description"`
	Id          *IncidentManagementEscalationPolicyID `json:"id"`
	Name        *string                               `json:"name"`
	Rules       []EscalationRuleType                  `json:"rules"`
}

type EscalationPolicyTypeConnection struct {
	Edges    []*EscalationPolicyTypeEdge `json:"edges"`
	Nodes    []*EscalationPolicyType     `json:"nodes"`
	PageInfo PageInfo                    `json:"pageInfo"`
}

type EscalationPolicyTypeEdge struct {
	Cursor string                `json:"cursor"`
	Node   *EscalationPolicyType `json:"node"`
}

type EscalationPolicyUpdateInput struct {
	ClientMutationId *string                              `json:"clientMutationId"`
	Description      *string                              `json:"description"`
	Id               IncidentManagementEscalationPolicyID `json:"id"`
	Name             *string                              `json:"name"`
	Rules            []EscalationRuleInput                `json:"rules"`
}

type EscalationPolicyUpdatePayload struct {
	ClientMutationId *string               `json:"clientMutationId"`
	Errors           []string              `json:"errors"`
	EscalationPolicy *EscalationPolicyType `json:"escalationPolicy"`
}

type EscalationRuleInput struct {
	ElapsedTimeSeconds int64                    `json:"elapsedTimeSeconds"`
	OncallScheduleIid  *string                  `json:"oncallScheduleIid"`
	Status             EnumEscalationRuleStatus `json:"status"`
	Username           *string                  `json:"username"`
}

type EscalationRuleType struct {
	ElapsedTimeSeconds *int64                              `json:"elapsedTimeSeconds"`
	Id                 *IncidentManagementEscalationRuleID `json:"id"`
	OncallSchedule     *IncidentManagementOncallSchedule   `json:"oncallSchedule"`
	Status             *EnumEscalationRuleStatus           `json:"status"`
	User               *UserCore                           `json:"user"`
}

type Event struct {
	Action    EnumEventAction `json:"action"`
	Author    UserCore        `json:"author"`
	CreatedAt Time            `json:"createdAt"`
	Id        string          `json:"id"`
	UpdatedAt Time            `json:"updatedAt"`
}

type EventConnection struct {
	Edges    []*EventEdge `json:"edges"`
	Nodes    []*Event     `json:"nodes"`
	PageInfo PageInfo     `json:"pageInfo"`
}

type EventEdge struct {
	Cursor string `json:"cursor"`
	Node   *Event `json:"node"`
}

type ExplainVulnerabilityPrompt struct {
	PromptWithCode    *string `json:"promptWithCode"`
	PromptWithoutCode *string `json:"promptWithoutCode"`
}

type ExportRequirementsInput struct {
	AuthorUsername   []string              `json:"authorUsername"`
	ClientMutationId *string               `json:"clientMutationId"`
	ProjectPath      string                `json:"projectPath"`
	Search           *string               `json:"search"`
	SelectedFields   []string              `json:"selectedFields"`
	Sort             *EnumSort             `json:"sort"`
	State            *EnumRequirementState `json:"state"`
}

type ExportRequirementsPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
}

type ExternalAuditEventDestination struct {
	DestinationUrl    string                              `json:"destinationUrl"`
	EventTypeFilters  []string                            `json:"eventTypeFilters"`
	Group             Group                               `json:"group"`
	Headers           AuditEventStreamingHeaderConnection `json:"headers"`
	Id                string                              `json:"id"`
	Name              string                              `json:"name"`
	VerificationToken string                              `json:"verificationToken"`
}

type ExternalAuditEventDestinationConnection struct {
	Edges    []*ExternalAuditEventDestinationEdge `json:"edges"`
	Nodes    []*ExternalAuditEventDestination     `json:"nodes"`
	PageInfo PageInfo                             `json:"pageInfo"`
}

type ExternalAuditEventDestinationCreateInput struct {
	ClientMutationId  *string `json:"clientMutationId"`
	DestinationUrl    string  `json:"destinationUrl"`
	GroupPath         string  `json:"groupPath"`
	Name              *string `json:"name"`
	VerificationToken *string `json:"verificationToken"`
}

type ExternalAuditEventDestinationCreatePayload struct {
	ClientMutationId              *string                        `json:"clientMutationId"`
	Errors                        []string                       `json:"errors"`
	ExternalAuditEventDestination *ExternalAuditEventDestination `json:"externalAuditEventDestination"`
}

type ExternalAuditEventDestinationDestroyInput struct {
	ClientMutationId *string                                    `json:"clientMutationId"`
	Id               AuditEventsExternalAuditEventDestinationID `json:"id"`
}

type ExternalAuditEventDestinationDestroyPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
}

type ExternalAuditEventDestinationEdge struct {
	Cursor string                         `json:"cursor"`
	Node   *ExternalAuditEventDestination `json:"node"`
}

type ExternalAuditEventDestinationUpdateInput struct {
	ClientMutationId *string                                    `json:"clientMutationId"`
	DestinationUrl   *string                                    `json:"destinationUrl"`
	Id               AuditEventsExternalAuditEventDestinationID `json:"id"`
	Name             *string                                    `json:"name"`
}

type ExternalAuditEventDestinationUpdatePayload struct {
	ClientMutationId              *string                        `json:"clientMutationId"`
	Errors                        []string                       `json:"errors"`
	ExternalAuditEventDestination *ExternalAuditEventDestination `json:"externalAuditEventDestination"`
}

type ExternalIssue struct {
	CreatedAt         *Time   `json:"createdAt"`
	ExternalTracker   *string `json:"externalTracker"`
	RelativeReference *string `json:"relativeReference"`
	Status            *string `json:"status"`
	Title             *string `json:"title"`
	UpdatedAt         *Time   `json:"updatedAt"`
	WebUrl            *string `json:"webUrl"`
}

type ExternalStatusCheck struct {
	ExternalUrl string   `json:"externalUrl"`
	Id          GlobalID `json:"id"`
	Name        string   `json:"name"`
}

type ExternalStatusCheckConnection struct {
	Edges    []*ExternalStatusCheckEdge `json:"edges"`
	Nodes    []*ExternalStatusCheck     `json:"nodes"`
	PageInfo PageInfo                   `json:"pageInfo"`
}

type ExternalStatusCheckEdge struct {
	Cursor string               `json:"cursor"`
	Node   *ExternalStatusCheck `json:"node"`
}

type FileUpload struct {
	Id   UploadID `json:"id"`
	Path string   `json:"path"`
	Size int64    `json:"size"`
}

type FindingReportsComparer struct {
	Report       *ComparedSecurityReport           `json:"report"`
	Status       *EnumFindingReportsComparerStatus `json:"status"`
	StatusReason *string                           `json:"statusReason"`
}

type Forecast struct {
	Status EnumForecastStatus           `json:"status"`
	Values *ForecastDatapointConnection `json:"values"`
}

type ForecastDatapoint struct {
	Datapoint string   `json:"datapoint"`
	Value     *float64 `json:"value"`
}

type ForecastDatapointConnection struct {
	Edges    []*ForecastDatapointEdge `json:"edges"`
	Nodes    []*ForecastDatapoint     `json:"nodes"`
	PageInfo PageInfo                 `json:"pageInfo"`
}

type ForecastDatapointEdge struct {
	Cursor string             `json:"cursor"`
	Node   *ForecastDatapoint `json:"node"`
}

type ForkDetails struct {
	Ahead        *int64 `json:"ahead"`
	Behind       *int64 `json:"behind"`
	HasConflicts *bool  `json:"hasConflicts"`
	IsSyncing    *bool  `json:"isSyncing"`
}

type GenerateTestFileInput struct {
	FilePath   string    `json:"filePath"`
	ResourceId AiModelID `json:"resourceId"`
}

type GeoNode struct {
	CiSecureFileRegistries               *CiSecureFileRegistryConnection               `json:"ciSecureFileRegistries"`
	ContainerRepositoriesMaxCapacity     *int64                                        `json:"containerRepositoriesMaxCapacity"`
	ContainerRepositoryRegistries        *ContainerRepositoryRegistryConnection        `json:"containerRepositoryRegistries"`
	DependencyProxyBlobRegistries        *DependencyProxyBlobRegistryConnection        `json:"dependencyProxyBlobRegistries"`
	DependencyProxyManifestRegistries    *DependencyProxyManifestRegistryConnection    `json:"dependencyProxyManifestRegistries"`
	DesignManagementRepositoryRegistries *DesignManagementRepositoryRegistryConnection `json:"designManagementRepositoryRegistries"`
	Enabled                              *bool                                         `json:"enabled"`
	FilesMaxCapacity                     *int64                                        `json:"filesMaxCapacity"`
	GroupWikiRepositoryRegistries        *GroupWikiRepositoryRegistryConnection        `json:"groupWikiRepositoryRegistries"`
	Id                                   string                                        `json:"id"`
	InternalUrl                          *string                                       `json:"internalUrl"`
	JobArtifactRegistries                *JobArtifactRegistryConnection                `json:"jobArtifactRegistries"`
	LfsObjectRegistries                  *LfsObjectRegistryConnection                  `json:"lfsObjectRegistries"`
	MergeRequestDiffRegistries           *MergeRequestDiffRegistryConnection           `json:"mergeRequestDiffRegistries"`
	MinimumReverificationInterval        *int64                                        `json:"minimumReverificationInterval"`
	Name                                 *string                                       `json:"name"`
	PackageFileRegistries                *PackageFileRegistryConnection                `json:"packageFileRegistries"`
	PagesDeploymentRegistries            *PagesDeploymentRegistryConnection            `json:"pagesDeploymentRegistries"`
	PipelineArtifactRegistries           *PipelineArtifactRegistryConnection           `json:"pipelineArtifactRegistries"`
	Primary                              *bool                                         `json:"primary"`
	ProjectRepositoryRegistries          *ProjectRepositoryRegistryConnection          `json:"projectRepositoryRegistries"`
	ProjectWikiRepositoryRegistries      *ProjectWikiRepositoryRegistryConnection      `json:"projectWikiRepositoryRegistries"`
	ReposMaxCapacity                     *int64                                        `json:"reposMaxCapacity"`
	SelectiveSyncNamespaces              *NamespaceConnection                          `json:"selectiveSyncNamespaces"`
	SelectiveSyncShards                  []string                                      `json:"selectiveSyncShards"`
	SelectiveSyncType                    *string                                       `json:"selectiveSyncType"`
	SnippetRepositoryRegistries          *SnippetRepositoryRegistryConnection          `json:"snippetRepositoryRegistries"`
	SyncObjectStorage                    *bool                                         `json:"syncObjectStorage"`
	TerraformStateVersionRegistries      *TerraformStateVersionRegistryConnection      `json:"terraformStateVersionRegistries"`
	UploadRegistries                     *UploadRegistryConnection                     `json:"uploadRegistries"`
	Url                                  *string                                       `json:"url"`
	VerificationMaxCapacity              *int64                                        `json:"verificationMaxCapacity"`
}

type GeoRegistriesUpdateInput struct {
	Action           EnumGeoRegistryAction `json:"action"`
	ClientMutationId *string               `json:"clientMutationId"`
	RegistryClass    EnumGeoRegistryClass  `json:"registryClass"`
	RegistryId       GeoBaseRegistryID     `json:"registryId"`
}

type GeoRegistriesUpdatePayload struct {
	ClientMutationId *string      `json:"clientMutationId"`
	Errors           []string     `json:"errors"`
	Registry         *Registrable `json:"registry"`
}

type GitlabSubscriptionActivateInput struct {
	ActivationCode   string  `json:"activationCode"`
	ClientMutationId *string `json:"clientMutationId"`
}

type GitlabSubscriptionActivatePayload struct {
	ClientMutationId    *string                   `json:"clientMutationId"`
	Errors              []string                  `json:"errors"`
	FutureSubscriptions []SubscriptionFutureEntry `json:"futureSubscriptions"`
	License             *CurrentLicense           `json:"license"`
}

type GoogleCloudLoggingConfigurationCreateInput struct {
	ClientEmail         string  `json:"clientEmail"`
	ClientMutationId    *string `json:"clientMutationId"`
	GoogleProjectIdName string  `json:"googleProjectIdName"`
	GroupPath           string  `json:"groupPath"`
	LogIdName           *string `json:"logIdName"`
	PrivateKey          string  `json:"privateKey"`
}

type GoogleCloudLoggingConfigurationCreatePayload struct {
	ClientMutationId                *string                              `json:"clientMutationId"`
	Errors                          []string                             `json:"errors"`
	GoogleCloudLoggingConfiguration *GoogleCloudLoggingConfigurationType `json:"googleCloudLoggingConfiguration"`
}

type GoogleCloudLoggingConfigurationDestroyInput struct {
	ClientMutationId *string                                      `json:"clientMutationId"`
	Id               AuditEventsGoogleCloudLoggingConfigurationID `json:"id"`
}

type GoogleCloudLoggingConfigurationDestroyPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
}

type GoogleCloudLoggingConfigurationType struct {
	ClientEmail         string `json:"clientEmail"`
	GoogleProjectIdName string `json:"googleProjectIdName"`
	Group               Group  `json:"group"`
	Id                  string `json:"id"`
	LogIdName           string `json:"logIdName"`
	PrivateKey          string `json:"privateKey"`
}

type GoogleCloudLoggingConfigurationTypeConnection struct {
	Edges    []*GoogleCloudLoggingConfigurationTypeEdge `json:"edges"`
	Nodes    []*GoogleCloudLoggingConfigurationType     `json:"nodes"`
	PageInfo PageInfo                                   `json:"pageInfo"`
}

type GoogleCloudLoggingConfigurationTypeEdge struct {
	Cursor string                               `json:"cursor"`
	Node   *GoogleCloudLoggingConfigurationType `json:"node"`
}

type GoogleCloudLoggingConfigurationUpdateInput struct {
	ClientEmail         *string                                      `json:"clientEmail"`
	ClientMutationId    *string                                      `json:"clientMutationId"`
	GoogleProjectIdName *string                                      `json:"googleProjectIdName"`
	Id                  AuditEventsGoogleCloudLoggingConfigurationID `json:"id"`
	LogIdName           *string                                      `json:"logIdName"`
	PrivateKey          *string                                      `json:"privateKey"`
}

type GoogleCloudLoggingConfigurationUpdatePayload struct {
	ClientMutationId                *string                              `json:"clientMutationId"`
	Errors                          []string                             `json:"errors"`
	GoogleCloudLoggingConfiguration *GoogleCloudLoggingConfigurationType `json:"googleCloudLoggingConfiguration"`
}

type GpgSignature struct {
	CommitSha          *string                 `json:"commitSha"`
	GpgKeyPrimaryKeyid *string                 `json:"gpgKeyPrimaryKeyid"`
	GpgKeyUserEmail    *string                 `json:"gpgKeyUserEmail"`
	GpgKeyUserName     *string                 `json:"gpgKeyUserName"`
	Project            *Project                `json:"project"`
	User               *UserCore               `json:"user"`
	VerificationStatus *EnumVerificationStatus `json:"verificationStatus"`
}

type GrafanaIntegration struct {
	CreatedAt  Time   `json:"createdAt"`
	Enabled    bool   `json:"enabled"`
	GrafanaUrl string `json:"grafanaUrl"`
	Id         string `json:"id"`
	UpdatedAt  Time   `json:"updatedAt"`
}

type Group struct {
	Achievements                                 *AchievementConnection                         `json:"achievements"`
	ActualRepositorySizeLimit                    *float64                                       `json:"actualRepositorySizeLimit"`
	ActualSizeLimit                              *float64                                       `json:"actualSizeLimit"`
	AddOnPurchase                                *AddOnPurchase                                 `json:"addOnPurchase"`
	AdditionalPurchasedStorageSize               *float64                                       `json:"additionalPurchasedStorageSize"`
	AllowStaleRunnerPruning                      bool                                           `json:"allowStaleRunnerPruning"`
	AutoDevopsEnabled                            *bool                                          `json:"autoDevopsEnabled"`
	AvatarUrl                                    *string                                        `json:"avatarUrl"`
	BillableMembersCount                         *int64                                         `json:"billableMembersCount"`
	Board                                        *Board                                         `json:"board"`
	Boards                                       *BoardConnection                               `json:"boards"`
	CiVariables                                  *CiGroupVariableConnection                     `json:"ciVariables"`
	ClusterAgents                                *ClusterAgentConnection                        `json:"clusterAgents"`
	CodeCoverageActivities                       *CodeCoverageActivityConnection                `json:"codeCoverageActivities"`
	ComplianceFrameworks                         *ComplianceFrameworkConnection                 `json:"complianceFrameworks"`
	ContactStateCounts                           *ContactStateCounts                            `json:"contactStateCounts"`
	Contacts                                     *CustomerRelationsContactConnection            `json:"contacts"`
	ContainerRepositories                        *ContainerRepositoryConnection                 `json:"containerRepositories"`
	ContainerRepositoriesCount                   int64                                          `json:"containerRepositoriesCount"`
	ContainsLockedProjects                       bool                                           `json:"containsLockedProjects"`
	Contributions                                *ContributionAnalyticsContributionConnection   `json:"contributions"`
	CrossProjectPipelineAvailable                bool                                           `json:"crossProjectPipelineAvailable"`
	CustomEmoji                                  *CustomEmojiConnection                         `json:"customEmoji"`
	DataTransfer                                 *GroupDataTransfer                             `json:"dataTransfer"`
	DependencyProxyBlobCount                     int64                                          `json:"dependencyProxyBlobCount"`
	DependencyProxyBlobs                         *DependencyProxyBlobConnection                 `json:"dependencyProxyBlobs"`
	DependencyProxyImageCount                    int64                                          `json:"dependencyProxyImageCount"`
	DependencyProxyImagePrefix                   string                                         `json:"dependencyProxyImagePrefix"`
	DependencyProxyImageTtlPolicy                *DependencyProxyImageTtlGroupPolicy            `json:"dependencyProxyImageTtlPolicy"`
	DependencyProxyManifests                     *DependencyProxyManifestConnection             `json:"dependencyProxyManifests"`
	DependencyProxySetting                       *DependencyProxySetting                        `json:"dependencyProxySetting"`
	DependencyProxyTotalSize                     string                                         `json:"dependencyProxyTotalSize"`
	DependencyProxyTotalSizeBytes                BigInt                                         `json:"dependencyProxyTotalSizeBytes"`
	DependencyProxyTotalSizeInBytes              int64                                          `json:"dependencyProxyTotalSizeInBytes"`
	DescendantGroups                             *GroupConnection                               `json:"descendantGroups"`
	Description                                  *string                                        `json:"description"`
	DescriptionHtml                              *string                                        `json:"descriptionHtml"`
	Dora                                         *Dora                                          `json:"dora"`
	DoraPerformanceScoreCounts                   *DoraPerformanceScoreCountConnection           `json:"doraPerformanceScoreCounts"`
	EmailsDisabled                               *bool                                          `json:"emailsDisabled"`
	EnforceFreeUserCap                           *bool                                          `json:"enforceFreeUserCap"`
	EnvironmentScopes                            *CiGroupEnvironmentScopeConnection             `json:"environmentScopes"`
	Epic                                         *Epic                                          `json:"epic"`
	EpicBoard                                    *EpicBoard                                     `json:"epicBoard"`
	EpicBoards                                   *EpicBoardConnection                           `json:"epicBoards"`
	Epics                                        *EpicConnection                                `json:"epics"`
	EpicsEnabled                                 *bool                                          `json:"epicsEnabled"`
	ExternalAuditEventDestinations               *ExternalAuditEventDestinationConnection       `json:"externalAuditEventDestinations"`
	FlowMetrics                                  *GroupValueStreamAnalyticsFlowMetrics          `json:"flowMetrics"`
	FullName                                     string                                         `json:"fullName"`
	FullPath                                     string                                         `json:"fullPath"`
	GitlabSubscriptionsPreviewBillableUserChange *PreviewBillableUserChange                     `json:"gitlabSubscriptionsPreviewBillableUserChange"`
	GoogleCloudLoggingConfigurations             *GoogleCloudLoggingConfigurationTypeConnection `json:"googleCloudLoggingConfigurations"`
	GroupMembers                                 *GroupMemberConnection                         `json:"groupMembers"`
	Id                                           string                                         `json:"id"`
	IsTemporaryStorageIncreaseEnabled            bool                                           `json:"isTemporaryStorageIncreaseEnabled"`
	Issues                                       *IssueConnection                               `json:"issues"`
	IterationCadences                            *IterationCadenceConnection                    `json:"iterationCadences"`
	Iterations                                   *IterationConnection                           `json:"iterations"`
	Label                                        *Label                                         `json:"label"`
	Labels                                       *LabelConnection                               `json:"labels"`
	LfsEnabled                                   *bool                                          `json:"lfsEnabled"`
	MentionsDisabled                             *bool                                          `json:"mentionsDisabled"`
	MergeRequestViolations                       *ComplianceViolationConnection                 `json:"mergeRequestViolations"`
	MergeRequests                                *MergeRequestConnection                        `json:"mergeRequests"`
	Milestones                                   *MilestoneConnection                           `json:"milestones"`
	Name                                         string                                         `json:"name"`
	OrganizationStateCounts                      *OrganizationStateCounts                       `json:"organizationStateCounts"`
	Organizations                                *CustomerRelationsOrganizationConnection       `json:"organizations"`
	PackageSettings                              *PackageSettings                               `json:"packageSettings"`
	Packages                                     *PackageConnection                             `json:"packages"`
	Parent                                       *Group                                         `json:"parent"`
	Path                                         string                                         `json:"path"`
	ProjectComplianceStandardsAdherence          *ComplianceStandardsAdherenceConnection        `json:"projectComplianceStandardsAdherence"`
	ProjectCreationLevel                         *string                                        `json:"projectCreationLevel"`
	Projects                                     ProjectConnection                              `json:"projects"`
	RecentIssueBoards                            *BoardConnection                               `json:"recentIssueBoards"`
	Releases                                     *ReleaseConnection                             `json:"releases"`
	RepositorySizeExcessProjectCount             int64                                          `json:"repositorySizeExcessProjectCount"`
	RequestAccessEnabled                         *bool                                          `json:"requestAccessEnabled"`
	RequireTwoFactorAuthentication               *bool                                          `json:"requireTwoFactorAuthentication"`
	RootStorageStatistics                        *RootStorageStatistics                         `json:"rootStorageStatistics"`
	Runners                                      *CiRunnerConnection                            `json:"runners"`
	ScanExecutionPolicies                        *ScanExecutionPolicyConnection                 `json:"scanExecutionPolicies"`
	ScanResultPolicies                           *ScanResultPolicyConnection                    `json:"scanResultPolicies"`
	ShareWithGroupLock                           *bool                                          `json:"shareWithGroupLock"`
	SharedRunnersSetting                         *EnumSharedRunnersSetting                      `json:"sharedRunnersSetting"`
	Stats                                        *GroupStats                                    `json:"stats"`
	StorageSizeLimit                             *float64                                       `json:"storageSizeLimit"`
	SubgroupCreationLevel                        *string                                        `json:"subgroupCreationLevel"`
	TemporaryStorageIncreaseEndsOn               *Time                                          `json:"temporaryStorageIncreaseEndsOn"`
	TimelogCategories                            *TimeTrackingTimelogCategoryConnection         `json:"timelogCategories"`
	Timelogs                                     TimelogConnection                              `json:"timelogs"`
	TotalRepositorySize                          *float64                                       `json:"totalRepositorySize"`
	TotalRepositorySizeExcess                    *float64                                       `json:"totalRepositorySizeExcess"`
	TwoFactorGracePeriod                         *int64                                         `json:"twoFactorGracePeriod"`
	UserPermissions                              GroupPermissions                               `json:"userPermissions"`
	Visibility                                   *string                                        `json:"visibility"`
	Vulnerabilities                              *VulnerabilityConnection                       `json:"vulnerabilities"`
	VulnerabilitiesCountByDay                    *VulnerabilitiesCountByDayConnection           `json:"vulnerabilitiesCountByDay"`
	VulnerabilityGrades                          []VulnerableProjectsByGrade                    `json:"vulnerabilityGrades"`
	VulnerabilityScanners                        *VulnerabilityScannerConnection                `json:"vulnerabilityScanners"`
	VulnerabilitySeveritiesCount                 *VulnerabilitySeveritiesCount                  `json:"vulnerabilitySeveritiesCount"`
	WebUrl                                       string                                         `json:"webUrl"`
	WorkItemTypes                                *WorkItemTypeConnection                        `json:"workItemTypes"`
}

type GroupConnection struct {
	Edges    []*GroupEdge `json:"edges"`
	Nodes    []*Group     `json:"nodes"`
	PageInfo PageInfo     `json:"pageInfo"`
}

type GroupDataTransfer struct {
	EgressNodes *EgressNodeConnection `json:"egressNodes"`
}

type GroupEdge struct {
	Cursor string `json:"cursor"`
	Node   *Group `json:"node"`
}

type GroupMember struct {
	AccessLevel             *AccessLevel                 `json:"accessLevel"`
	CreatedAt               *Time                        `json:"createdAt"`
	CreatedBy               *UserCore                    `json:"createdBy"`
	ExpiresAt               *Time                        `json:"expiresAt"`
	Group                   *Group                       `json:"group"`
	Id                      string                       `json:"id"`
	MergeRequestInteraction *UserMergeRequestInteraction `json:"mergeRequestInteraction"`
	NotificationEmail       *string                      `json:"notificationEmail"`
	UpdatedAt               *Time                        `json:"updatedAt"`
	User                    *UserCore                    `json:"user"`
	UserPermissions         GroupPermissions             `json:"userPermissions"`
}

type GroupMemberBulkUpdateInput struct {
	AccessLevel      EnumMemberAccessLevel `json:"accessLevel"`
	ClientMutationId *string               `json:"clientMutationId"`
	ExpiresAt        *Time                 `json:"expiresAt"`
	GroupId          GroupID               `json:"groupId"`
	UserIds          []UserID              `json:"userIds"`
}

type GroupMemberBulkUpdatePayload struct {
	ClientMutationId *string       `json:"clientMutationId"`
	Errors           []string      `json:"errors"`
	GroupMembers     []GroupMember `json:"groupMembers"`
}

type GroupMemberConnection struct {
	Edges    []*GroupMemberEdge `json:"edges"`
	Nodes    []*GroupMember     `json:"nodes"`
	PageInfo PageInfo           `json:"pageInfo"`
}

type GroupMemberEdge struct {
	Cursor string       `json:"cursor"`
	Node   *GroupMember `json:"node"`
}

type GroupPermissions struct {
	CreateCustomEmoji bool `json:"createCustomEmoji"`
	CreateProjects    bool `json:"createProjects"`
	ReadGroup         bool `json:"readGroup"`
}

type GroupReleaseStats struct {
	ReleasesCount      *int64 `json:"releasesCount"`
	ReleasesPercentage *int64 `json:"releasesPercentage"`
}

type GroupSecurityPolicySource struct {
	Inherited bool       `json:"inherited"`
	Namespace *Namespace `json:"namespace"`
}

type GroupStats struct {
	ReleaseStats *GroupReleaseStats `json:"releaseStats"`
}

type GroupUpdateInput struct {
	ClientMutationId     *string                  `json:"clientMutationId"`
	FullPath             string                   `json:"fullPath"`
	SharedRunnersSetting EnumSharedRunnersSetting `json:"sharedRunnersSetting"`
}

type GroupUpdatePayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	Group            *Group   `json:"group"`
}

type GroupValueStreamAnalyticsFlowMetrics struct {
	CycleTime            *ValueStreamAnalyticsMetric `json:"cycleTime"`
	DeploymentCount      *ValueStreamAnalyticsMetric `json:"deploymentCount"`
	IssueCount           *ValueStreamAnalyticsMetric `json:"issueCount"`
	IssuesCompletedCount *ValueStreamAnalyticsMetric `json:"issuesCompletedCount"`
	LeadTime             *ValueStreamAnalyticsMetric `json:"leadTime"`
}

type GroupWikiRepositoryRegistry struct {
	CreatedAt              *Time                      `json:"createdAt"`
	GroupWikiRepositoryId  string                     `json:"groupWikiRepositoryId"`
	Id                     string                     `json:"id"`
	LastSyncFailure        *string                    `json:"lastSyncFailure"`
	LastSyncedAt           *Time                      `json:"lastSyncedAt"`
	RetryAt                *Time                      `json:"retryAt"`
	RetryCount             *int64                     `json:"retryCount"`
	State                  *EnumRegistryState         `json:"state"`
	VerificationChecksum   *string                    `json:"verificationChecksum"`
	VerificationFailure    *string                    `json:"verificationFailure"`
	VerificationRetryAt    *Time                      `json:"verificationRetryAt"`
	VerificationRetryCount *int64                     `json:"verificationRetryCount"`
	VerificationStartedAt  *Time                      `json:"verificationStartedAt"`
	VerificationState      *EnumVerificationStateEnum `json:"verificationState"`
	VerifiedAt             *Time                      `json:"verifiedAt"`
}

type GroupWikiRepositoryRegistryConnection struct {
	Edges    []*GroupWikiRepositoryRegistryEdge `json:"edges"`
	Nodes    []*GroupWikiRepositoryRegistry     `json:"nodes"`
	PageInfo PageInfo                           `json:"pageInfo"`
}

type GroupWikiRepositoryRegistryEdge struct {
	Cursor string                       `json:"cursor"`
	Node   *GroupWikiRepositoryRegistry `json:"node"`
}

type HelmFileMetadata struct {
	Channel   string                  `json:"channel"`
	CreatedAt Time                    `json:"createdAt"`
	Metadata  PackageHelmMetadataType `json:"metadata"`
	UpdatedAt Time                    `json:"updatedAt"`
}

type HttpIntegrationCreateInput struct {
	Active                   bool                                    `json:"active"`
	ClientMutationId         *string                                 `json:"clientMutationId"`
	Name                     string                                  `json:"name"`
	PayloadAttributeMappings []AlertManagementPayloadAlertFieldInput `json:"payloadAttributeMappings"`
	PayloadExample           *JsonString                             `json:"payloadExample"`
	ProjectPath              string                                  `json:"projectPath"`
}

type HttpIntegrationCreatePayload struct {
	ClientMutationId *string                         `json:"clientMutationId"`
	Errors           []string                        `json:"errors"`
	Integration      *AlertManagementHttpIntegration `json:"integration"`
}

type HttpIntegrationDestroyInput struct {
	ClientMutationId *string                          `json:"clientMutationId"`
	Id               AlertManagementHttpIntegrationID `json:"id"`
}

type HttpIntegrationDestroyPayload struct {
	ClientMutationId *string                         `json:"clientMutationId"`
	Errors           []string                        `json:"errors"`
	Integration      *AlertManagementHttpIntegration `json:"integration"`
}

type HttpIntegrationResetTokenInput struct {
	ClientMutationId *string                          `json:"clientMutationId"`
	Id               AlertManagementHttpIntegrationID `json:"id"`
}

type HttpIntegrationResetTokenPayload struct {
	ClientMutationId *string                         `json:"clientMutationId"`
	Errors           []string                        `json:"errors"`
	Integration      *AlertManagementHttpIntegration `json:"integration"`
}

type HttpIntegrationUpdateInput struct {
	Active                   *bool                                   `json:"active"`
	ClientMutationId         *string                                 `json:"clientMutationId"`
	Id                       AlertManagementHttpIntegrationID        `json:"id"`
	Name                     *string                                 `json:"name"`
	PayloadAttributeMappings []AlertManagementPayloadAlertFieldInput `json:"payloadAttributeMappings"`
	PayloadExample           *JsonString                             `json:"payloadExample"`
}

type HttpIntegrationUpdatePayload struct {
	ClientMutationId *string                         `json:"clientMutationId"`
	Errors           []string                        `json:"errors"`
	Integration      *AlertManagementHttpIntegration `json:"integration"`
}

type Ide struct {
	CodeSuggestionsEnabled bool `json:"codeSuggestionsEnabled"`
}

type IncidentManagementOncallRotation struct {
	ActivePeriod *OncallRotationActivePeriodType          `json:"activePeriod"`
	EndsAt       *Time                                    `json:"endsAt"`
	Id           IncidentManagementOncallRotationID       `json:"id"`
	Length       *int64                                   `json:"length"`
	LengthUnit   *EnumOncallRotationUnitEnum              `json:"lengthUnit"`
	Name         string                                   `json:"name"`
	Participants *OncallParticipantTypeConnection         `json:"participants"`
	Shifts       *IncidentManagementOncallShiftConnection `json:"shifts"`
	StartsAt     *Time                                    `json:"startsAt"`
}

type IncidentManagementOncallRotationConnection struct {
	Edges    []*IncidentManagementOncallRotationEdge `json:"edges"`
	Nodes    []*IncidentManagementOncallRotation     `json:"nodes"`
	PageInfo PageInfo                                `json:"pageInfo"`
}

type IncidentManagementOncallRotationEdge struct {
	Cursor string                            `json:"cursor"`
	Node   *IncidentManagementOncallRotation `json:"node"`
}

type IncidentManagementOncallSchedule struct {
	Description *string                                    `json:"description"`
	Iid         string                                     `json:"iid"`
	Name        string                                     `json:"name"`
	OncallUsers []UserCore                                 `json:"oncallUsers"`
	Rotation    *IncidentManagementOncallRotation          `json:"rotation"`
	Rotations   IncidentManagementOncallRotationConnection `json:"rotations"`
	Timezone    string                                     `json:"timezone"`
}

type IncidentManagementOncallScheduleConnection struct {
	Edges    []*IncidentManagementOncallScheduleEdge `json:"edges"`
	Nodes    []*IncidentManagementOncallSchedule     `json:"nodes"`
	PageInfo PageInfo                                `json:"pageInfo"`
}

type IncidentManagementOncallScheduleEdge struct {
	Cursor string                            `json:"cursor"`
	Node   *IncidentManagementOncallSchedule `json:"node"`
}

type IncidentManagementOncallShift struct {
	EndsAt      *Time                  `json:"endsAt"`
	Participant *OncallParticipantType `json:"participant"`
	StartsAt    *Time                  `json:"startsAt"`
}

type IncidentManagementOncallShiftConnection struct {
	Edges    []*IncidentManagementOncallShiftEdge `json:"edges"`
	Nodes    []*IncidentManagementOncallShift     `json:"nodes"`
	PageInfo PageInfo                             `json:"pageInfo"`
}

type IncidentManagementOncallShiftEdge struct {
	Cursor string                         `json:"cursor"`
	Node   *IncidentManagementOncallShift `json:"node"`
}

type InheritedCiVariable struct {
	EnvironmentScope      *string             `json:"environmentScope"`
	GroupCiCdSettingsPath *string             `json:"groupCiCdSettingsPath"`
	GroupName             *string             `json:"groupName"`
	Id                    string              `json:"id"`
	Key                   *string             `json:"key"`
	Masked                *bool               `json:"masked"`
	Protected             *bool               `json:"protected"`
	Raw                   *bool               `json:"raw"`
	VariableType          *EnumCiVariableType `json:"variableType"`
}

type InheritedCiVariableConnection struct {
	Edges    []*InheritedCiVariableEdge `json:"edges"`
	Nodes    []*InheritedCiVariable     `json:"nodes"`
	PageInfo PageInfo                   `json:"pageInfo"`
}

type InheritedCiVariableEdge struct {
	Cursor string               `json:"cursor"`
	Node   *InheritedCiVariable `json:"node"`
}

type InstanceExternalAuditEventDestination struct {
	DestinationUrl    string                                       `json:"destinationUrl"`
	EventTypeFilters  []string                                     `json:"eventTypeFilters"`
	Headers           AuditEventsStreamingInstanceHeaderConnection `json:"headers"`
	Id                string                                       `json:"id"`
	Name              string                                       `json:"name"`
	VerificationToken string                                       `json:"verificationToken"`
}

type InstanceExternalAuditEventDestinationConnection struct {
	Edges    []*InstanceExternalAuditEventDestinationEdge `json:"edges"`
	Nodes    []*InstanceExternalAuditEventDestination     `json:"nodes"`
	PageInfo PageInfo                                     `json:"pageInfo"`
}

type InstanceExternalAuditEventDestinationCreateInput struct {
	ClientMutationId *string `json:"clientMutationId"`
	DestinationUrl   string  `json:"destinationUrl"`
	Name             *string `json:"name"`
}

type InstanceExternalAuditEventDestinationCreatePayload struct {
	ClientMutationId                      *string                                `json:"clientMutationId"`
	Errors                                []string                               `json:"errors"`
	InstanceExternalAuditEventDestination *InstanceExternalAuditEventDestination `json:"instanceExternalAuditEventDestination"`
}

type InstanceExternalAuditEventDestinationDestroyInput struct {
	ClientMutationId *string                                            `json:"clientMutationId"`
	Id               AuditEventsInstanceExternalAuditEventDestinationID `json:"id"`
}

type InstanceExternalAuditEventDestinationDestroyPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
}

type InstanceExternalAuditEventDestinationEdge struct {
	Cursor string                                 `json:"cursor"`
	Node   *InstanceExternalAuditEventDestination `json:"node"`
}

type InstanceExternalAuditEventDestinationUpdateInput struct {
	ClientMutationId *string                                            `json:"clientMutationId"`
	DestinationUrl   *string                                            `json:"destinationUrl"`
	Id               AuditEventsInstanceExternalAuditEventDestinationID `json:"id"`
	Name             *string                                            `json:"name"`
}

type InstanceExternalAuditEventDestinationUpdatePayload struct {
	ClientMutationId                      *string                                `json:"clientMutationId"`
	Errors                                []string                               `json:"errors"`
	InstanceExternalAuditEventDestination *InstanceExternalAuditEventDestination `json:"instanceExternalAuditEventDestination"`
}

type InstanceSecurityDashboard struct {
	ClusterAgents                *ClusterAgentConnection         `json:"clusterAgents"`
	Projects                     ProjectConnection               `json:"projects"`
	VulnerabilityGrades          []VulnerableProjectsByGrade     `json:"vulnerabilityGrades"`
	VulnerabilityScanners        *VulnerabilityScannerConnection `json:"vulnerabilityScanners"`
	VulnerabilitySeveritiesCount *VulnerabilitySeveritiesCount   `json:"vulnerabilitySeveritiesCount"`
}

type Issuable struct {
	TypeName string `json:"__typeName"`
	Epic
	Issue
	MergeRequest
	WorkItem
}

type IssuableResourceLink struct {
	Id       IncidentManagementIssuableResourceLinkID `json:"id"`
	Issue    Issue                                    `json:"issue"`
	Link     string                                   `json:"link"`
	LinkText *string                                  `json:"linkText"`
	LinkType EnumIssuableResourceLinkType             `json:"linkType"`
}

type IssuableResourceLinkConnection struct {
	Edges    []*IssuableResourceLinkEdge `json:"edges"`
	Nodes    []*IssuableResourceLink     `json:"nodes"`
	PageInfo PageInfo                    `json:"pageInfo"`
}

type IssuableResourceLinkCreateInput struct {
	ClientMutationId *string                       `json:"clientMutationId"`
	Id               IssueID                       `json:"id"`
	Link             string                        `json:"link"`
	LinkText         *string                       `json:"linkText"`
	LinkType         *EnumIssuableResourceLinkType `json:"linkType"`
}

type IssuableResourceLinkCreatePayload struct {
	ClientMutationId     *string               `json:"clientMutationId"`
	Errors               []string              `json:"errors"`
	IssuableResourceLink *IssuableResourceLink `json:"issuableResourceLink"`
}

type IssuableResourceLinkDestroyInput struct {
	ClientMutationId *string                                  `json:"clientMutationId"`
	Id               IncidentManagementIssuableResourceLinkID `json:"id"`
}

type IssuableResourceLinkDestroyPayload struct {
	ClientMutationId     *string               `json:"clientMutationId"`
	Errors               []string              `json:"errors"`
	IssuableResourceLink *IssuableResourceLink `json:"issuableResourceLink"`
}

type IssuableResourceLinkEdge struct {
	Cursor string                `json:"cursor"`
	Node   *IssuableResourceLink `json:"node"`
}

type Issue struct {
	AlertManagementAlert        *AlertManagementAlert               `json:"alertManagementAlert"`
	AlertManagementAlerts       *AlertManagementAlertConnection     `json:"alertManagementAlerts"`
	Assignees                   *UserCoreConnection                 `json:"assignees"`
	Author                      UserCore                            `json:"author"`
	Blocked                     bool                                `json:"blocked"`
	BlockedByCount              *int64                              `json:"blockedByCount"`
	BlockedByIssues             *IssueConnection                    `json:"blockedByIssues"`
	BlockingCount               int64                               `json:"blockingCount"`
	ClosedAsDuplicateOf         *Issue                              `json:"closedAsDuplicateOf"`
	ClosedAt                    *Time                               `json:"closedAt"`
	Commenters                  UserCoreConnection                  `json:"commenters"`
	Confidential                bool                                `json:"confidential"`
	CreateNoteEmail             *string                             `json:"createNoteEmail"`
	CreatedAt                   Time                                `json:"createdAt"`
	CurrentUserTodos            TodoConnection                      `json:"currentUserTodos"`
	CustomerRelationsContacts   *CustomerRelationsContactConnection `json:"customerRelationsContacts"`
	Description                 *string                             `json:"description"`
	DescriptionHtml             *string                             `json:"descriptionHtml"`
	DesignCollection            *DesignCollection                   `json:"designCollection"`
	DiscussionLocked            bool                                `json:"discussionLocked"`
	Discussions                 DiscussionConnection                `json:"discussions"`
	Downvotes                   int64                               `json:"downvotes"`
	DueDate                     *Time                               `json:"dueDate"`
	EmailsDisabled              bool                                `json:"emailsDisabled"`
	EmailsEnabled               bool                                `json:"emailsEnabled"`
	Epic                        *Epic                               `json:"epic"`
	EscalationPolicy            *EscalationPolicyType               `json:"escalationPolicy"`
	EscalationStatus            *EnumIssueEscalationStatus          `json:"escalationStatus"`
	HasEpic                     bool                                `json:"hasEpic"`
	HealthStatus                *EnumHealthStatus                   `json:"healthStatus"`
	Hidden                      *bool                               `json:"hidden"`
	HumanTimeEstimate           *string                             `json:"humanTimeEstimate"`
	HumanTotalTimeSpent         *string                             `json:"humanTotalTimeSpent"`
	Id                          string                              `json:"id"`
	Iid                         string                              `json:"iid"`
	IssuableResourceLinks       *IssuableResourceLinkConnection     `json:"issuableResourceLinks"`
	Iteration                   *Iteration                          `json:"iteration"`
	Labels                      *LabelConnection                    `json:"labels"`
	MergeRequestsCount          int64                               `json:"mergeRequestsCount"`
	MetricImages                []MetricImage                       `json:"metricImages"`
	Milestone                   *Milestone                          `json:"milestone"`
	Moved                       *bool                               `json:"moved"`
	MovedTo                     *Issue                              `json:"movedTo"`
	Notes                       NoteConnection                      `json:"notes"`
	Participants                *UserCoreConnection                 `json:"participants"`
	ProjectId                   int64                               `json:"projectId"`
	Reference                   string                              `json:"reference"`
	RelatedMergeRequests        *MergeRequestConnection             `json:"relatedMergeRequests"`
	RelatedVulnerabilities      *VulnerabilityConnection            `json:"relatedVulnerabilities"`
	RelativePosition            *int64                              `json:"relativePosition"`
	Severity                    *EnumIssuableSeverity               `json:"severity"`
	SlaDueAt                    *Time                               `json:"slaDueAt"`
	State                       EnumIssueState                      `json:"state"`
	StatusPagePublishedIncident *bool                               `json:"statusPagePublishedIncident"`
	Subscribed                  bool                                `json:"subscribed"`
	TaskCompletionStatus        TaskCompletionStatus                `json:"taskCompletionStatus"`
	TimeEstimate                int64                               `json:"timeEstimate"`
	Timelogs                    TimelogConnection                   `json:"timelogs"`
	Title                       string                              `json:"title"`
	TitleHtml                   *string                             `json:"titleHtml"`
	TotalTimeSpent              int64                               `json:"totalTimeSpent"`
	Type                        *EnumIssueType                      `json:"type"`
	UpdatedAt                   Time                                `json:"updatedAt"`
	UpdatedBy                   *UserCore                           `json:"updatedBy"`
	Upvotes                     int64                               `json:"upvotes"`
	UserDiscussionsCount        int64                               `json:"userDiscussionsCount"`
	UserNotesCount              int64                               `json:"userNotesCount"`
	UserPermissions             IssuePermissions                    `json:"userPermissions"`
	WebPath                     string                              `json:"webPath"`
	WebUrl                      string                              `json:"webUrl"`
	Weight                      *int64                              `json:"weight"`
}

type IssueConnection struct {
	Count    int64        `json:"count"`
	Edges    []*IssueEdge `json:"edges"`
	Nodes    []*Issue     `json:"nodes"`
	PageInfo PageInfo     `json:"pageInfo"`
	Weight   int64        `json:"weight"`
}

type IssueEdge struct {
	Cursor string `json:"cursor"`
	Node   *Issue `json:"node"`
}

type IssueLinkAlertsInput struct {
	AlertReferences  []string `json:"alertReferences"`
	ClientMutationId *string  `json:"clientMutationId"`
	Iid              string   `json:"iid"`
	ProjectPath      string   `json:"projectPath"`
}

type IssueLinkAlertsPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	Issue            *Issue   `json:"issue"`
}

type IssueMoveInput struct {
	ClientMutationId  *string `json:"clientMutationId"`
	Iid               string  `json:"iid"`
	ProjectPath       string  `json:"projectPath"`
	TargetProjectPath string  `json:"targetProjectPath"`
}

type IssueMoveListInput struct {
	BoardId          BoardID `json:"boardId"`
	ClientMutationId *string `json:"clientMutationId"`
	EpicId           *EpicID `json:"epicId"`
	FromListId       *string `json:"fromListId"`
	Iid              string  `json:"iid"`
	MoveAfterId      *string `json:"moveAfterId"`
	MoveBeforeId     *string `json:"moveBeforeId"`
	PositionInList   *int64  `json:"positionInList"`
	ProjectPath      string  `json:"projectPath"`
	ToListId         *string `json:"toListId"`
}

type IssueMoveListPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	Issue            *Issue   `json:"issue"`
}

type IssueMovePayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	Issue            *Issue   `json:"issue"`
}

type IssuePermissions struct {
	AdminIssue    bool `json:"adminIssue"`
	CreateDesign  bool `json:"createDesign"`
	CreateNote    bool `json:"createNote"`
	DestroyDesign bool `json:"destroyDesign"`
	ReadDesign    bool `json:"readDesign"`
	ReadIssue     bool `json:"readIssue"`
	ReopenIssue   bool `json:"reopenIssue"`
	UpdateDesign  bool `json:"updateDesign"`
	UpdateIssue   bool `json:"updateIssue"`
}

type IssueSetAssigneesInput struct {
	AssigneeUsernames []string                   `json:"assigneeUsernames"`
	ClientMutationId  *string                    `json:"clientMutationId"`
	Iid               string                     `json:"iid"`
	OperationMode     *EnumMutationOperationMode `json:"operationMode"`
	ProjectPath       string                     `json:"projectPath"`
}

type IssueSetAssigneesPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	Issue            *Issue   `json:"issue"`
}

type IssueSetConfidentialInput struct {
	ClientMutationId *string `json:"clientMutationId"`
	Confidential     bool    `json:"confidential"`
	Iid              string  `json:"iid"`
	ProjectPath      string  `json:"projectPath"`
}

type IssueSetConfidentialPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	Issue            *Issue   `json:"issue"`
}

type IssueSetCrmContactsInput struct {
	ClientMutationId *string                      `json:"clientMutationId"`
	ContactIds       []CustomerRelationsContactID `json:"contactIds"`
	Iid              string                       `json:"iid"`
	OperationMode    *EnumMutationOperationMode   `json:"operationMode"`
	ProjectPath      string                       `json:"projectPath"`
}

type IssueSetCrmContactsPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	Issue            *Issue   `json:"issue"`
}

type IssueSetDueDateInput struct {
	ClientMutationId *string `json:"clientMutationId"`
	DueDate          *Time   `json:"dueDate"`
	Iid              string  `json:"iid"`
	ProjectPath      string  `json:"projectPath"`
}

type IssueSetDueDatePayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	Issue            *Issue   `json:"issue"`
}

type IssueSetEpicInput struct {
	ClientMutationId *string `json:"clientMutationId"`
	EpicId           *EpicID `json:"epicId"`
	Iid              string  `json:"iid"`
	ProjectPath      string  `json:"projectPath"`
}

type IssueSetEpicPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	Issue            *Issue   `json:"issue"`
}

type IssueSetEscalationPolicyInput struct {
	ClientMutationId   *string                               `json:"clientMutationId"`
	EscalationPolicyId *IncidentManagementEscalationPolicyID `json:"escalationPolicyId"`
	Iid                string                                `json:"iid"`
	ProjectPath        string                                `json:"projectPath"`
}

type IssueSetEscalationPolicyPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	Issue            *Issue   `json:"issue"`
}

type IssueSetEscalationStatusInput struct {
	ClientMutationId *string                   `json:"clientMutationId"`
	Iid              string                    `json:"iid"`
	ProjectPath      string                    `json:"projectPath"`
	Status           EnumIssueEscalationStatus `json:"status"`
}

type IssueSetEscalationStatusPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	Issue            *Issue   `json:"issue"`
}

type IssueSetIterationInput struct {
	ClientMutationId *string      `json:"clientMutationId"`
	Iid              string       `json:"iid"`
	IterationId      *IterationID `json:"iterationId"`
	ProjectPath      string       `json:"projectPath"`
}

type IssueSetIterationPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	Issue            *Issue   `json:"issue"`
}

type IssueSetLockedInput struct {
	ClientMutationId *string `json:"clientMutationId"`
	Iid              string  `json:"iid"`
	Locked           bool    `json:"locked"`
	ProjectPath      string  `json:"projectPath"`
}

type IssueSetLockedPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	Issue            *Issue   `json:"issue"`
}

type IssueSetSeverityInput struct {
	ClientMutationId *string              `json:"clientMutationId"`
	Iid              string               `json:"iid"`
	ProjectPath      string               `json:"projectPath"`
	Severity         EnumIssuableSeverity `json:"severity"`
}

type IssueSetSeverityPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	Issue            *Issue   `json:"issue"`
}

type IssueSetSubscriptionInput struct {
	ClientMutationId *string `json:"clientMutationId"`
	Iid              string  `json:"iid"`
	ProjectPath      string  `json:"projectPath"`
	SubscribedState  bool    `json:"subscribedState"`
}

type IssueSetSubscriptionPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	Issue            *Issue   `json:"issue"`
}

type IssueSetWeightInput struct {
	ClientMutationId *string `json:"clientMutationId"`
	Iid              string  `json:"iid"`
	ProjectPath      string  `json:"projectPath"`
	Weight           *int64  `json:"weight"`
}

type IssueSetWeightPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	Issue            *Issue   `json:"issue"`
}

type IssueStatusCountsType struct {
	All    *int64 `json:"all"`
	Closed *int64 `json:"closed"`
	Opened *int64 `json:"opened"`
}

type IssueUnlinkAlertInput struct {
	AlertId          AlertManagementAlertID `json:"alertId"`
	ClientMutationId *string                `json:"clientMutationId"`
	Iid              string                 `json:"iid"`
	ProjectPath      string                 `json:"projectPath"`
}

type IssueUnlinkAlertPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	Issue            *Issue   `json:"issue"`
}

type IssuesBulkUpdateInput struct {
	AddLabelIds       []LabelID                      `json:"addLabelIds"`
	AssigneeIds       []UserID                       `json:"assigneeIds"`
	ClientMutationId  *string                        `json:"clientMutationId"`
	EpicId            *EpicID                        `json:"epicId"`
	HealthStatus      *EnumHealthStatus              `json:"healthStatus"`
	Ids               []IssueID                      `json:"ids"`
	IterationId       *IterationID                   `json:"iterationId"`
	MilestoneId       *MilestoneID                   `json:"milestoneId"`
	ParentId          IssueParentID                  `json:"parentId"`
	RemoveLabelIds    []LabelID                      `json:"removeLabelIds"`
	StateEvent        *EnumIssueStateEvent           `json:"stateEvent"`
	SubscriptionEvent *EnumIssuableSubscriptionEvent `json:"subscriptionEvent"`
}

type IssuesBulkUpdatePayload struct {
	ClientMutationId  *string  `json:"clientMutationId"`
	Errors            []string `json:"errors"`
	UpdatedIssueCount *int64   `json:"updatedIssueCount"`
}

type Iteration struct {
	CreatedAt        Time               `json:"createdAt"`
	Description      *string            `json:"description"`
	DescriptionHtml  *string            `json:"descriptionHtml"`
	DueDate          *Time              `json:"dueDate"`
	Id               string             `json:"id"`
	Iid              string             `json:"iid"`
	IterationCadence IterationCadence   `json:"iterationCadence"`
	Report           *TimeboxReport     `json:"report"`
	ScopedPath       *string            `json:"scopedPath"`
	ScopedUrl        *string            `json:"scopedUrl"`
	Sequence         int64              `json:"sequence"`
	StartDate        *Time              `json:"startDate"`
	State            EnumIterationState `json:"state"`
	Title            *string            `json:"title"`
	UpdatedAt        Time               `json:"updatedAt"`
	WebPath          string             `json:"webPath"`
	WebUrl           string             `json:"webUrl"`
}

type IterationCadence struct {
	Active              *bool               `json:"active"`
	Automatic           *bool               `json:"automatic"`
	Description         *string             `json:"description"`
	DurationInWeeks     *int64              `json:"durationInWeeks"`
	Id                  IterationsCadenceID `json:"id"`
	IterationsInAdvance *int64              `json:"iterationsInAdvance"`
	RollOver            bool                `json:"rollOver"`
	StartDate           *Time               `json:"startDate"`
	Title               string              `json:"title"`
}

type IterationCadenceConnection struct {
	Edges    []*IterationCadenceEdge `json:"edges"`
	Nodes    []*IterationCadence     `json:"nodes"`
	PageInfo PageInfo                `json:"pageInfo"`
}

type IterationCadenceCreateInput struct {
	Active              bool    `json:"active"`
	Automatic           bool    `json:"automatic"`
	ClientMutationId    *string `json:"clientMutationId"`
	Description         *string `json:"description"`
	DurationInWeeks     *int64  `json:"durationInWeeks"`
	GroupPath           string  `json:"groupPath"`
	IterationsInAdvance *int64  `json:"iterationsInAdvance"`
	RollOver            *bool   `json:"rollOver"`
	StartDate           *Time   `json:"startDate"`
	Title               *string `json:"title"`
}

type IterationCadenceCreatePayload struct {
	ClientMutationId *string           `json:"clientMutationId"`
	Errors           []string          `json:"errors"`
	IterationCadence *IterationCadence `json:"iterationCadence"`
}

type IterationCadenceDestroyInput struct {
	ClientMutationId *string             `json:"clientMutationId"`
	Id               IterationsCadenceID `json:"id"`
}

type IterationCadenceDestroyPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	Group            Group    `json:"group"`
}

type IterationCadenceEdge struct {
	Cursor string            `json:"cursor"`
	Node   *IterationCadence `json:"node"`
}

type IterationCadenceUpdateInput struct {
	Active              *bool               `json:"active"`
	Automatic           *bool               `json:"automatic"`
	ClientMutationId    *string             `json:"clientMutationId"`
	Description         *string             `json:"description"`
	DurationInWeeks     *int64              `json:"durationInWeeks"`
	Id                  IterationsCadenceID `json:"id"`
	IterationsInAdvance *int64              `json:"iterationsInAdvance"`
	RollOver            *bool               `json:"rollOver"`
	StartDate           *Time               `json:"startDate"`
	Title               *string             `json:"title"`
}

type IterationCadenceUpdatePayload struct {
	ClientMutationId *string           `json:"clientMutationId"`
	Errors           []string          `json:"errors"`
	IterationCadence *IterationCadence `json:"iterationCadence"`
}

type IterationConnection struct {
	Edges    []*IterationEdge `json:"edges"`
	Nodes    []*Iteration     `json:"nodes"`
	PageInfo PageInfo         `json:"pageInfo"`
}

type IterationDeleteInput struct {
	ClientMutationId *string     `json:"clientMutationId"`
	Id               IterationID `json:"id"`
}

type IterationDeletePayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	Group            Group    `json:"group"`
}

type IterationEdge struct {
	Cursor string     `json:"cursor"`
	Node   *Iteration `json:"node"`
}

type JiraImport struct {
	CreatedAt           *Time     `json:"createdAt"`
	FailedToImportCount int64     `json:"failedToImportCount"`
	ImportedIssuesCount int64     `json:"importedIssuesCount"`
	JiraProjectKey      string    `json:"jiraProjectKey"`
	ScheduledAt         *Time     `json:"scheduledAt"`
	ScheduledBy         *UserCore `json:"scheduledBy"`
	TotalIssueCount     int64     `json:"totalIssueCount"`
}

type JiraImportConnection struct {
	Edges    []*JiraImportEdge `json:"edges"`
	Nodes    []*JiraImport     `json:"nodes"`
	PageInfo PageInfo          `json:"pageInfo"`
}

type JiraImportEdge struct {
	Cursor string      `json:"cursor"`
	Node   *JiraImport `json:"node"`
}

type JiraImportStartInput struct {
	ClientMutationId *string                     `json:"clientMutationId"`
	JiraProjectKey   string                      `json:"jiraProjectKey"`
	JiraProjectName  *string                     `json:"jiraProjectName"`
	ProjectPath      string                      `json:"projectPath"`
	UsersMapping     []JiraUsersMappingInputType `json:"usersMapping"`
}

type JiraImportStartPayload struct {
	ClientMutationId *string     `json:"clientMutationId"`
	Errors           []string    `json:"errors"`
	JiraImport       *JiraImport `json:"jiraImport"`
}

type JiraImportUsersInput struct {
	ClientMutationId *string `json:"clientMutationId"`
	ProjectPath      string  `json:"projectPath"`
	StartAt          *int64  `json:"startAt"`
}

type JiraImportUsersPayload struct {
	ClientMutationId *string    `json:"clientMutationId"`
	Errors           []string   `json:"errors"`
	JiraUsers        []JiraUser `json:"jiraUsers"`
}

type JiraProject struct {
	Key       string  `json:"key"`
	Name      *string `json:"name"`
	ProjectId int64   `json:"projectId"`
}

type JiraProjectConnection struct {
	Edges    []*JiraProjectEdge `json:"edges"`
	Nodes    []*JiraProject     `json:"nodes"`
	PageInfo PageInfo           `json:"pageInfo"`
}

type JiraProjectEdge struct {
	Cursor string       `json:"cursor"`
	Node   *JiraProject `json:"node"`
}

type JiraService struct {
	Active      *bool                  `json:"active"`
	Projects    *JiraProjectConnection `json:"projects"`
	ServiceType *EnumServiceType       `json:"serviceType"`
	Type        *string                `json:"type"`
}

type JiraUser struct {
	GitlabId        *int64  `json:"gitlabId"`
	GitlabName      *string `json:"gitlabName"`
	GitlabUsername  *string `json:"gitlabUsername"`
	JiraAccountId   string  `json:"jiraAccountId"`
	JiraDisplayName string  `json:"jiraDisplayName"`
	JiraEmail       *string `json:"jiraEmail"`
}

type JiraUsersMappingInputType struct {
	GitlabId      *int64 `json:"gitlabId"`
	JiraAccountId string `json:"jiraAccountId"`
}

type JobArtifactRegistry struct {
	ArtifactId             string                     `json:"artifactId"`
	CreatedAt              *Time                      `json:"createdAt"`
	Id                     string                     `json:"id"`
	LastSyncFailure        *string                    `json:"lastSyncFailure"`
	LastSyncedAt           *Time                      `json:"lastSyncedAt"`
	RetryAt                *Time                      `json:"retryAt"`
	RetryCount             *int64                     `json:"retryCount"`
	State                  *EnumRegistryState         `json:"state"`
	VerificationChecksum   *string                    `json:"verificationChecksum"`
	VerificationFailure    *string                    `json:"verificationFailure"`
	VerificationRetryAt    *Time                      `json:"verificationRetryAt"`
	VerificationRetryCount *int64                     `json:"verificationRetryCount"`
	VerificationStartedAt  *Time                      `json:"verificationStartedAt"`
	VerificationState      *EnumVerificationStateEnum `json:"verificationState"`
	VerifiedAt             *Time                      `json:"verifiedAt"`
}

type JobArtifactRegistryConnection struct {
	Edges    []*JobArtifactRegistryEdge `json:"edges"`
	Nodes    []*JobArtifactRegistry     `json:"nodes"`
	PageInfo PageInfo                   `json:"pageInfo"`
}

type JobArtifactRegistryEdge struct {
	Cursor string               `json:"cursor"`
	Node   *JobArtifactRegistry `json:"node"`
}

type JobArtifactsDestroyInput struct {
	ClientMutationId *string   `json:"clientMutationId"`
	Id               CiBuildID `json:"id"`
}

type JobArtifactsDestroyPayload struct {
	ClientMutationId        *string  `json:"clientMutationId"`
	DestroyedArtifactsCount int64    `json:"destroyedArtifactsCount"`
	Errors                  []string `json:"errors"`
	Job                     *CiJob   `json:"job"`
}

type JobCancelInput struct {
	ClientMutationId *string   `json:"clientMutationId"`
	Id               CiBuildID `json:"id"`
}

type JobCancelPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	Job              *CiJob   `json:"job"`
}

type JobNeedUnion struct {
	TypeName string `json:"__typeName"`
	CiBuildNeed
	CiJob
}

type JobNeedUnionConnection struct {
	Edges    []*JobNeedUnionEdge `json:"edges"`
	Nodes    []*JobNeedUnion     `json:"nodes"`
	PageInfo PageInfo            `json:"pageInfo"`
}

type JobNeedUnionEdge struct {
	Cursor string        `json:"cursor"`
	Node   *JobNeedUnion `json:"node"`
}

type JobPermissions struct {
	ReadBuild        bool `json:"readBuild"`
	ReadJobArtifacts bool `json:"readJobArtifacts"`
	UpdateBuild      bool `json:"updateBuild"`
}

type JobPlayInput struct {
	ClientMutationId *string           `json:"clientMutationId"`
	Id               CiBuildID         `json:"id"`
	Variables        []CiVariableInput `json:"variables"`
}

type JobPlayPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	Job              *CiJob   `json:"job"`
}

type JobRetryInput struct {
	ClientMutationId *string           `json:"clientMutationId"`
	Id               CiBuildID         `json:"id"`
	Variables        []CiVariableInput `json:"variables"`
}

type JobRetryPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	Job              *CiJob   `json:"job"`
}

type JobUnscheduleInput struct {
	ClientMutationId *string   `json:"clientMutationId"`
	Id               CiBuildID `json:"id"`
}

type JobUnschedulePayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	Job              *CiJob   `json:"job"`
}

type Kas struct {
	Enabled     bool    `json:"enabled"`
	ExternalUrl *string `json:"externalUrl"`
	Version     *string `json:"version"`
}

type Key struct {
	CreatedAt Time   `json:"createdAt"`
	ExpiresAt Time   `json:"expiresAt"`
	Id        string `json:"id"`
	Key       string `json:"key"`
	Title     string `json:"title"`
}

type Label struct {
	Color           string  `json:"color"`
	CreatedAt       Time    `json:"createdAt"`
	Description     *string `json:"description"`
	DescriptionHtml *string `json:"descriptionHtml"`
	Id              string  `json:"id"`
	TextColor       string  `json:"textColor"`
	Title           string  `json:"title"`
	UpdatedAt       Time    `json:"updatedAt"`
}

type LabelConnection struct {
	Count    int64        `json:"count"`
	Edges    []*LabelEdge `json:"edges"`
	Nodes    []*Label     `json:"nodes"`
	PageInfo PageInfo     `json:"pageInfo"`
}

type LabelCreateInput struct {
	ClientMutationId *string `json:"clientMutationId"`
	Color            *string `json:"color"`
	Description      *string `json:"description"`
	GroupPath        *string `json:"groupPath"`
	ProjectPath      *string `json:"projectPath"`
	Title            string  `json:"title"`
}

type LabelCreatePayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	Label            *Label   `json:"label"`
}

type LabelEdge struct {
	Cursor string `json:"cursor"`
	Node   *Label `json:"node"`
}

type LfsObjectRegistry struct {
	CreatedAt              *Time                      `json:"createdAt"`
	Id                     string                     `json:"id"`
	LastSyncFailure        *string                    `json:"lastSyncFailure"`
	LastSyncedAt           *Time                      `json:"lastSyncedAt"`
	LfsObjectId            string                     `json:"lfsObjectId"`
	RetryAt                *Time                      `json:"retryAt"`
	RetryCount             *int64                     `json:"retryCount"`
	State                  *EnumRegistryState         `json:"state"`
	VerificationChecksum   *string                    `json:"verificationChecksum"`
	VerificationFailure    *string                    `json:"verificationFailure"`
	VerificationRetryAt    *Time                      `json:"verificationRetryAt"`
	VerificationRetryCount *int64                     `json:"verificationRetryCount"`
	VerificationStartedAt  *Time                      `json:"verificationStartedAt"`
	VerificationState      *EnumVerificationStateEnum `json:"verificationState"`
	VerifiedAt             *Time                      `json:"verifiedAt"`
}

type LfsObjectRegistryConnection struct {
	Edges    []*LfsObjectRegistryEdge `json:"edges"`
	Nodes    []*LfsObjectRegistry     `json:"nodes"`
	PageInfo PageInfo                 `json:"pageInfo"`
}

type LfsObjectRegistryEdge struct {
	Cursor string             `json:"cursor"`
	Node   *LfsObjectRegistry `json:"node"`
}

type LicenseHistoryEntry struct {
	ActivatedAt         *Date   `json:"activatedAt"`
	BlockChangesAt      *Date   `json:"blockChangesAt"`
	Company             *string `json:"company"`
	CreatedAt           *Date   `json:"createdAt"`
	Email               *string `json:"email"`
	ExpiresAt           *Date   `json:"expiresAt"`
	Id                  string  `json:"id"`
	Name                *string `json:"name"`
	Plan                string  `json:"plan"`
	StartsAt            *Date   `json:"startsAt"`
	Type                string  `json:"type"`
	UsersInLicenseCount *int64  `json:"usersInLicenseCount"`
}

type LicenseHistoryEntryConnection struct {
	Edges    []*LicenseHistoryEntryEdge `json:"edges"`
	Nodes    []*LicenseHistoryEntry     `json:"nodes"`
	PageInfo PageInfo                   `json:"pageInfo"`
}

type LicenseHistoryEntryEdge struct {
	Cursor string               `json:"cursor"`
	Node   *LicenseHistoryEntry `json:"node"`
}

type Location struct {
	BlobPath *string `json:"blobPath"`
	Path     *string `json:"path"`
}

type MarkAsSpamSnippetInput struct {
	ClientMutationId *string   `json:"clientMutationId"`
	Id               SnippetID `json:"id"`
}

type MarkAsSpamSnippetPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	Snippet          *Snippet `json:"snippet"`
}

type MavenMetadata struct {
	AppGroup   string                   `json:"appGroup"`
	AppName    string                   `json:"appName"`
	AppVersion *string                  `json:"appVersion"`
	CreatedAt  Time                     `json:"createdAt"`
	Id         PackagesMavenMetadatumID `json:"id"`
	Path       string                   `json:"path"`
	UpdatedAt  Time                     `json:"updatedAt"`
}

type MemberInterfaceConnection struct {
	Edges    []*MemberInterfaceEdge `json:"edges"`
	Nodes    []*MemberInterface     `json:"nodes"`
	PageInfo PageInfo               `json:"pageInfo"`
}

type MemberInterfaceEdge struct {
	Cursor string           `json:"cursor"`
	Node   *MemberInterface `json:"node"`
}

type MergeAccessLevel struct {
	AccessLevel            int64             `json:"accessLevel"`
	AccessLevelDescription string            `json:"accessLevelDescription"`
	Group                  *AccessLevelGroup `json:"group"`
	User                   *AccessLevelUser  `json:"user"`
}

type MergeAccessLevelConnection struct {
	Edges    []*MergeAccessLevelEdge `json:"edges"`
	Nodes    []*MergeAccessLevel     `json:"nodes"`
	PageInfo PageInfo                `json:"pageInfo"`
}

type MergeAccessLevelEdge struct {
	Cursor string            `json:"cursor"`
	Node   *MergeAccessLevel `json:"node"`
}

type MergeRequest struct {
	AllowCollaboration                    *bool                                 `json:"allowCollaboration"`
	ApprovalState                         MergeRequestApprovalState             `json:"approvalState"`
	ApprovalsLeft                         *int64                                `json:"approvalsLeft"`
	ApprovalsRequired                     *int64                                `json:"approvalsRequired"`
	Approved                              bool                                  `json:"approved"`
	ApprovedBy                            *UserCoreConnection                   `json:"approvedBy"`
	Assignees                             *MergeRequestAssigneeConnection       `json:"assignees"`
	Author                                *MergeRequestAuthor                   `json:"author"`
	AutoMergeEnabled                      bool                                  `json:"autoMergeEnabled"`
	AutoMergeStrategy                     *string                               `json:"autoMergeStrategy"`
	AvailableAutoMergeStrategies          []string                              `json:"availableAutoMergeStrategies"`
	AwardEmoji                            *AwardEmojiConnection                 `json:"awardEmoji"`
	Commenters                            UserCoreConnection                    `json:"commenters"`
	CommitCount                           *int64                                `json:"commitCount"`
	Commits                               *CommitConnection                     `json:"commits"`
	CommitsWithoutMergeCommits            *CommitConnection                     `json:"commitsWithoutMergeCommits"`
	Committers                            *UserCoreConnection                   `json:"committers"`
	Conflicts                             bool                                  `json:"conflicts"`
	CreatedAt                             Time                                  `json:"createdAt"`
	CurrentUserTodos                      TodoConnection                        `json:"currentUserTodos"`
	DefaultMergeCommitMessage             *string                               `json:"defaultMergeCommitMessage"`
	DefaultSquashCommitMessage            *string                               `json:"defaultSquashCommitMessage"`
	Description                           *string                               `json:"description"`
	DescriptionHtml                       *string                               `json:"descriptionHtml"`
	DetailedMergeStatus                   *EnumDetailedMergeStatus              `json:"detailedMergeStatus"`
	DiffHeadSha                           *string                               `json:"diffHeadSha"`
	DiffLlmSummaries                      *MergeRequestDiffLlmSummaryConnection `json:"diffLlmSummaries"`
	DiffRefs                              *DiffRefs                             `json:"diffRefs"`
	DiffStats                             []DiffStats                           `json:"diffStats"`
	DiffStatsSummary                      *DiffStatsSummary                     `json:"diffStatsSummary"`
	DiscussionLocked                      bool                                  `json:"discussionLocked"`
	Discussions                           DiscussionConnection                  `json:"discussions"`
	DivergedFromTargetBranch              bool                                  `json:"divergedFromTargetBranch"`
	Downvotes                             int64                                 `json:"downvotes"`
	Draft                                 bool                                  `json:"draft"`
	FindingReportsComparer                *FindingReportsComparer               `json:"findingReportsComparer"`
	ForceRemoveSourceBranch               *bool                                 `json:"forceRemoveSourceBranch"`
	HasCi                                 bool                                  `json:"hasCi"`
	HasSecurityReports                    bool                                  `json:"hasSecurityReports"`
	HeadPipeline                          *Pipeline                             `json:"headPipeline"`
	HumanTimeEstimate                     *string                               `json:"humanTimeEstimate"`
	HumanTotalTimeSpent                   *string                               `json:"humanTotalTimeSpent"`
	Id                                    string                                `json:"id"`
	Iid                                   string                                `json:"iid"`
	InProgressMergeCommitSha              *string                               `json:"inProgressMergeCommitSha"`
	Labels                                *LabelConnection                      `json:"labels"`
	MergeCommitSha                        *string                               `json:"mergeCommitSha"`
	MergeError                            *string                               `json:"mergeError"`
	MergeOngoing                          bool                                  `json:"mergeOngoing"`
	MergeRequestDiffs                     *MergeRequestDiffConnection           `json:"mergeRequestDiffs"`
	MergeStatus                           *string                               `json:"mergeStatus"`
	MergeStatusEnum                       *EnumMergeStatus                      `json:"mergeStatusEnum"`
	MergeTrainsCount                      *int64                                `json:"mergeTrainsCount"`
	MergeUser                             *UserCore                             `json:"mergeUser"`
	MergeWhenPipelineSucceeds             *bool                                 `json:"mergeWhenPipelineSucceeds"`
	Mergeable                             bool                                  `json:"mergeable"`
	MergeableDiscussionsState             *bool                                 `json:"mergeableDiscussionsState"`
	MergedAt                              *Time                                 `json:"mergedAt"`
	Milestone                             *Milestone                            `json:"milestone"`
	Notes                                 NoteConnection                        `json:"notes"`
	Participants                          *MergeRequestParticipantConnection    `json:"participants"`
	Pipelines                             *PipelineConnection                   `json:"pipelines"`
	PreparedAt                            *Time                                 `json:"preparedAt"`
	Project                               Project                               `json:"project"`
	ProjectId                             int64                                 `json:"projectId"`
	RebaseCommitSha                       *string                               `json:"rebaseCommitSha"`
	RebaseInProgress                      bool                                  `json:"rebaseInProgress"`
	Reference                             string                                `json:"reference"`
	Reviewers                             *MergeRequestReviewerConnection       `json:"reviewers"`
	SecurityAutoFix                       *bool                                 `json:"securityAutoFix"`
	SecurityReportsUpToDateOnTargetBranch bool                                  `json:"securityReportsUpToDateOnTargetBranch"`
	ShouldBeRebased                       bool                                  `json:"shouldBeRebased"`
	ShouldRemoveSourceBranch              *bool                                 `json:"shouldRemoveSourceBranch"`
	SourceBranch                          string                                `json:"sourceBranch"`
	SourceBranchExists                    bool                                  `json:"sourceBranchExists"`
	SourceBranchProtected                 bool                                  `json:"sourceBranchProtected"`
	SourceProject                         *Project                              `json:"sourceProject"`
	SourceProjectId                       *int64                                `json:"sourceProjectId"`
	Squash                                bool                                  `json:"squash"`
	SquashOnMerge                         bool                                  `json:"squashOnMerge"`
	State                                 EnumMergeRequestState                 `json:"state"`
	Subscribed                            bool                                  `json:"subscribed"`
	SuggestedReviewers                    *SuggestedReviewersType               `json:"suggestedReviewers"`
	TargetBranch                          string                                `json:"targetBranch"`
	TargetBranchExists                    bool                                  `json:"targetBranchExists"`
	TargetProject                         Project                               `json:"targetProject"`
	TargetProjectId                       int64                                 `json:"targetProjectId"`
	TaskCompletionStatus                  TaskCompletionStatus                  `json:"taskCompletionStatus"`
	TimeEstimate                          int64                                 `json:"timeEstimate"`
	Timelogs                              TimelogConnection                     `json:"timelogs"`
	Title                                 string                                `json:"title"`
	TitleHtml                             *string                               `json:"titleHtml"`
	TotalTimeSpent                        int64                                 `json:"totalTimeSpent"`
	UpdatedAt                             Time                                  `json:"updatedAt"`
	Upvotes                               int64                                 `json:"upvotes"`
	UserDiscussionsCount                  *int64                                `json:"userDiscussionsCount"`
	UserNotesCount                        *int64                                `json:"userNotesCount"`
	UserPermissions                       MergeRequestPermissions               `json:"userPermissions"`
	WebUrl                                *string                               `json:"webUrl"`
}

type MergeRequestAcceptInput struct {
	ClientMutationId         *string                `json:"clientMutationId"`
	CommitMessage            *string                `json:"commitMessage"`
	Iid                      string                 `json:"iid"`
	ProjectPath              string                 `json:"projectPath"`
	Sha                      string                 `json:"sha"`
	ShouldRemoveSourceBranch *bool                  `json:"shouldRemoveSourceBranch"`
	Squash                   *bool                  `json:"squash"`
	SquashCommitMessage      *string                `json:"squashCommitMessage"`
	Strategy                 *EnumMergeStrategyEnum `json:"strategy"`
}

type MergeRequestAcceptPayload struct {
	ClientMutationId *string       `json:"clientMutationId"`
	Errors           []string      `json:"errors"`
	MergeRequest     *MergeRequest `json:"mergeRequest"`
}

type MergeRequestApprovalState struct {
	ApprovalRulesOverwritten *bool               `json:"approvalRulesOverwritten"`
	InvalidApproversRules    []ApprovalRule      `json:"invalidApproversRules"`
	Rules                    []ApprovalRule      `json:"rules"`
	SuggestedApprovers       *UserCoreConnection `json:"suggestedApprovers"`
}

type MergeRequestAssignee struct {
	AssignedMergeRequests        *MergeRequestConnection         `json:"assignedMergeRequests"`
	AuthoredMergeRequests        *MergeRequestConnection         `json:"authoredMergeRequests"`
	AvatarUrl                    *string                         `json:"avatarUrl"`
	Bio                          *string                         `json:"bio"`
	Bot                          bool                            `json:"bot"`
	Callouts                     *UserCalloutConnection          `json:"callouts"`
	CommitEmail                  *string                         `json:"commitEmail"`
	CreatedAt                    *Time                           `json:"createdAt"`
	Discord                      *string                         `json:"discord"`
	Email                        *string                         `json:"email"`
	Emails                       *EmailConnection                `json:"emails"`
	GitpodEnabled                *bool                           `json:"gitpodEnabled"`
	GroupCount                   *int64                          `json:"groupCount"`
	GroupMemberships             *GroupMemberConnection          `json:"groupMemberships"`
	Groups                       *GroupConnection                `json:"groups"`
	Id                           string                          `json:"id"`
	Ide                          *Ide                            `json:"ide"`
	JobTitle                     *string                         `json:"jobTitle"`
	Linkedin                     *string                         `json:"linkedin"`
	Location                     *string                         `json:"location"`
	MergeRequestInteraction      *UserMergeRequestInteraction    `json:"mergeRequestInteraction"`
	Name                         string                          `json:"name"`
	Namespace                    *Namespace                      `json:"namespace"`
	NamespaceCommitEmails        *NamespaceCommitEmailConnection `json:"namespaceCommitEmails"`
	Organization                 *string                         `json:"organization"`
	PreferencesGitpodPath        *string                         `json:"preferencesGitpodPath"`
	ProfileEnableGitpodPath      *string                         `json:"profileEnableGitpodPath"`
	ProjectMemberships           *ProjectMemberConnection        `json:"projectMemberships"`
	Pronouns                     *string                         `json:"pronouns"`
	PublicEmail                  *string                         `json:"publicEmail"`
	ReviewRequestedMergeRequests *MergeRequestConnection         `json:"reviewRequestedMergeRequests"`
	SavedReplies                 *SavedReplyConnection           `json:"savedReplies"`
	SavedReply                   *SavedReply                     `json:"savedReply"`
	Snippets                     *SnippetConnection              `json:"snippets"`
	StarredProjects              *ProjectConnection              `json:"starredProjects"`
	State                        EnumUserState                   `json:"state"`
	Status                       *UserStatus                     `json:"status"`
	Timelogs                     *TimelogConnection              `json:"timelogs"`
	Todos                        *TodoConnection                 `json:"todos"`
	Twitter                      *string                         `json:"twitter"`
	UserAchievements             *UserAchievementConnection      `json:"userAchievements"`
	UserPermissions              UserPermissions                 `json:"userPermissions"`
	Username                     string                          `json:"username"`
	WebPath                      string                          `json:"webPath"`
	WebUrl                       string                          `json:"webUrl"`
	Workspaces                   *WorkspaceConnection            `json:"workspaces"`
}

type MergeRequestAssigneeConnection struct {
	Edges    []*MergeRequestAssigneeEdge `json:"edges"`
	Nodes    []*MergeRequestAssignee     `json:"nodes"`
	PageInfo PageInfo                    `json:"pageInfo"`
}

type MergeRequestAssigneeEdge struct {
	Cursor string                `json:"cursor"`
	Node   *MergeRequestAssignee `json:"node"`
}

type MergeRequestAuthor struct {
	AssignedMergeRequests        *MergeRequestConnection         `json:"assignedMergeRequests"`
	AuthoredMergeRequests        *MergeRequestConnection         `json:"authoredMergeRequests"`
	AvatarUrl                    *string                         `json:"avatarUrl"`
	Bio                          *string                         `json:"bio"`
	Bot                          bool                            `json:"bot"`
	Callouts                     *UserCalloutConnection          `json:"callouts"`
	CommitEmail                  *string                         `json:"commitEmail"`
	CreatedAt                    *Time                           `json:"createdAt"`
	Discord                      *string                         `json:"discord"`
	Email                        *string                         `json:"email"`
	Emails                       *EmailConnection                `json:"emails"`
	GitpodEnabled                *bool                           `json:"gitpodEnabled"`
	GroupCount                   *int64                          `json:"groupCount"`
	GroupMemberships             *GroupMemberConnection          `json:"groupMemberships"`
	Groups                       *GroupConnection                `json:"groups"`
	Id                           string                          `json:"id"`
	Ide                          *Ide                            `json:"ide"`
	JobTitle                     *string                         `json:"jobTitle"`
	Linkedin                     *string                         `json:"linkedin"`
	Location                     *string                         `json:"location"`
	MergeRequestInteraction      *UserMergeRequestInteraction    `json:"mergeRequestInteraction"`
	Name                         string                          `json:"name"`
	Namespace                    *Namespace                      `json:"namespace"`
	NamespaceCommitEmails        *NamespaceCommitEmailConnection `json:"namespaceCommitEmails"`
	Organization                 *string                         `json:"organization"`
	PreferencesGitpodPath        *string                         `json:"preferencesGitpodPath"`
	ProfileEnableGitpodPath      *string                         `json:"profileEnableGitpodPath"`
	ProjectMemberships           *ProjectMemberConnection        `json:"projectMemberships"`
	Pronouns                     *string                         `json:"pronouns"`
	PublicEmail                  *string                         `json:"publicEmail"`
	ReviewRequestedMergeRequests *MergeRequestConnection         `json:"reviewRequestedMergeRequests"`
	SavedReplies                 *SavedReplyConnection           `json:"savedReplies"`
	SavedReply                   *SavedReply                     `json:"savedReply"`
	Snippets                     *SnippetConnection              `json:"snippets"`
	StarredProjects              *ProjectConnection              `json:"starredProjects"`
	State                        EnumUserState                   `json:"state"`
	Status                       *UserStatus                     `json:"status"`
	Timelogs                     *TimelogConnection              `json:"timelogs"`
	Todos                        *TodoConnection                 `json:"todos"`
	Twitter                      *string                         `json:"twitter"`
	UserAchievements             *UserAchievementConnection      `json:"userAchievements"`
	UserPermissions              UserPermissions                 `json:"userPermissions"`
	Username                     string                          `json:"username"`
	WebPath                      string                          `json:"webPath"`
	WebUrl                       string                          `json:"webUrl"`
	Workspaces                   *WorkspaceConnection            `json:"workspaces"`
}

type MergeRequestConnection struct {
	Count            int64               `json:"count"`
	Edges            []*MergeRequestEdge `json:"edges"`
	Nodes            []*MergeRequest     `json:"nodes"`
	PageInfo         PageInfo            `json:"pageInfo"`
	TotalTimeToMerge *float64            `json:"totalTimeToMerge"`
}

type MergeRequestCreateInput struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Description      *string  `json:"description"`
	Labels           []string `json:"labels"`
	ProjectPath      string   `json:"projectPath"`
	SourceBranch     string   `json:"sourceBranch"`
	TargetBranch     string   `json:"targetBranch"`
	Title            string   `json:"title"`
}

type MergeRequestCreatePayload struct {
	ClientMutationId *string       `json:"clientMutationId"`
	Errors           []string      `json:"errors"`
	MergeRequest     *MergeRequest `json:"mergeRequest"`
}

type MergeRequestDiff struct {
	CreatedAt          Time                                    `json:"createdAt"`
	DiffLlmSummary     *MergeRequestDiffLlmSummary             `json:"diffLlmSummary"`
	ReviewLlmSummaries *MergeRequestReviewLlmSummaryConnection `json:"reviewLlmSummaries"`
	UpdatedAt          Time                                    `json:"updatedAt"`
}

type MergeRequestDiffConnection struct {
	Edges    []*MergeRequestDiffEdge `json:"edges"`
	Nodes    []*MergeRequestDiff     `json:"nodes"`
	PageInfo PageInfo                `json:"pageInfo"`
}

type MergeRequestDiffEdge struct {
	Cursor string            `json:"cursor"`
	Node   *MergeRequestDiff `json:"node"`
}

type MergeRequestDiffLlmSummary struct {
	Content            string    `json:"content"`
	CreatedAt          Time      `json:"createdAt"`
	MergeRequestDiffId string    `json:"mergeRequestDiffId"`
	Provider           string    `json:"provider"`
	UpdatedAt          Time      `json:"updatedAt"`
	User               *UserCore `json:"user"`
}

type MergeRequestDiffLlmSummaryConnection struct {
	Edges    []*MergeRequestDiffLlmSummaryEdge `json:"edges"`
	Nodes    []*MergeRequestDiffLlmSummary     `json:"nodes"`
	PageInfo PageInfo                          `json:"pageInfo"`
}

type MergeRequestDiffLlmSummaryEdge struct {
	Cursor string                      `json:"cursor"`
	Node   *MergeRequestDiffLlmSummary `json:"node"`
}

type MergeRequestDiffRegistry struct {
	CreatedAt              *Time                      `json:"createdAt"`
	Id                     string                     `json:"id"`
	LastSyncFailure        *string                    `json:"lastSyncFailure"`
	LastSyncedAt           *Time                      `json:"lastSyncedAt"`
	MergeRequestDiffId     string                     `json:"mergeRequestDiffId"`
	RetryAt                *Time                      `json:"retryAt"`
	RetryCount             *int64                     `json:"retryCount"`
	State                  *EnumRegistryState         `json:"state"`
	VerificationChecksum   *string                    `json:"verificationChecksum"`
	VerificationFailure    *string                    `json:"verificationFailure"`
	VerificationRetryAt    *Time                      `json:"verificationRetryAt"`
	VerificationRetryCount *int64                     `json:"verificationRetryCount"`
	VerificationStartedAt  *Time                      `json:"verificationStartedAt"`
	VerificationState      *EnumVerificationStateEnum `json:"verificationState"`
	VerifiedAt             *Time                      `json:"verifiedAt"`
}

type MergeRequestDiffRegistryConnection struct {
	Edges    []*MergeRequestDiffRegistryEdge `json:"edges"`
	Nodes    []*MergeRequestDiffRegistry     `json:"nodes"`
	PageInfo PageInfo                        `json:"pageInfo"`
}

type MergeRequestDiffRegistryEdge struct {
	Cursor string                    `json:"cursor"`
	Node   *MergeRequestDiffRegistry `json:"node"`
}

type MergeRequestEdge struct {
	Cursor string        `json:"cursor"`
	Node   *MergeRequest `json:"node"`
}

type MergeRequestParticipant struct {
	AssignedMergeRequests        *MergeRequestConnection         `json:"assignedMergeRequests"`
	AuthoredMergeRequests        *MergeRequestConnection         `json:"authoredMergeRequests"`
	AvatarUrl                    *string                         `json:"avatarUrl"`
	Bio                          *string                         `json:"bio"`
	Bot                          bool                            `json:"bot"`
	Callouts                     *UserCalloutConnection          `json:"callouts"`
	CommitEmail                  *string                         `json:"commitEmail"`
	CreatedAt                    *Time                           `json:"createdAt"`
	Discord                      *string                         `json:"discord"`
	Email                        *string                         `json:"email"`
	Emails                       *EmailConnection                `json:"emails"`
	GitpodEnabled                *bool                           `json:"gitpodEnabled"`
	GroupCount                   *int64                          `json:"groupCount"`
	GroupMemberships             *GroupMemberConnection          `json:"groupMemberships"`
	Groups                       *GroupConnection                `json:"groups"`
	Id                           string                          `json:"id"`
	Ide                          *Ide                            `json:"ide"`
	JobTitle                     *string                         `json:"jobTitle"`
	Linkedin                     *string                         `json:"linkedin"`
	Location                     *string                         `json:"location"`
	MergeRequestInteraction      *UserMergeRequestInteraction    `json:"mergeRequestInteraction"`
	Name                         string                          `json:"name"`
	Namespace                    *Namespace                      `json:"namespace"`
	NamespaceCommitEmails        *NamespaceCommitEmailConnection `json:"namespaceCommitEmails"`
	Organization                 *string                         `json:"organization"`
	PreferencesGitpodPath        *string                         `json:"preferencesGitpodPath"`
	ProfileEnableGitpodPath      *string                         `json:"profileEnableGitpodPath"`
	ProjectMemberships           *ProjectMemberConnection        `json:"projectMemberships"`
	Pronouns                     *string                         `json:"pronouns"`
	PublicEmail                  *string                         `json:"publicEmail"`
	ReviewRequestedMergeRequests *MergeRequestConnection         `json:"reviewRequestedMergeRequests"`
	SavedReplies                 *SavedReplyConnection           `json:"savedReplies"`
	SavedReply                   *SavedReply                     `json:"savedReply"`
	Snippets                     *SnippetConnection              `json:"snippets"`
	StarredProjects              *ProjectConnection              `json:"starredProjects"`
	State                        EnumUserState                   `json:"state"`
	Status                       *UserStatus                     `json:"status"`
	Timelogs                     *TimelogConnection              `json:"timelogs"`
	Todos                        *TodoConnection                 `json:"todos"`
	Twitter                      *string                         `json:"twitter"`
	UserAchievements             *UserAchievementConnection      `json:"userAchievements"`
	UserPermissions              UserPermissions                 `json:"userPermissions"`
	Username                     string                          `json:"username"`
	WebPath                      string                          `json:"webPath"`
	WebUrl                       string                          `json:"webUrl"`
	Workspaces                   *WorkspaceConnection            `json:"workspaces"`
}

type MergeRequestParticipantConnection struct {
	Edges    []*MergeRequestParticipantEdge `json:"edges"`
	Nodes    []*MergeRequestParticipant     `json:"nodes"`
	PageInfo PageInfo                       `json:"pageInfo"`
}

type MergeRequestParticipantEdge struct {
	Cursor string                   `json:"cursor"`
	Node   *MergeRequestParticipant `json:"node"`
}

type MergeRequestPermissions struct {
	AdminMergeRequest               bool `json:"adminMergeRequest"`
	CanApprove                      bool `json:"canApprove"`
	CanMerge                        bool `json:"canMerge"`
	CherryPickOnCurrentMergeRequest bool `json:"cherryPickOnCurrentMergeRequest"`
	CreateNote                      bool `json:"createNote"`
	PushToSourceBranch              bool `json:"pushToSourceBranch"`
	ReadMergeRequest                bool `json:"readMergeRequest"`
	RemoveSourceBranch              bool `json:"removeSourceBranch"`
	RevertOnCurrentMergeRequest     bool `json:"revertOnCurrentMergeRequest"`
	UpdateMergeRequest              bool `json:"updateMergeRequest"`
}

type MergeRequestReviewLlmSummary struct {
	Content            string    `json:"content"`
	CreatedAt          Time      `json:"createdAt"`
	MergeRequestDiffId string    `json:"mergeRequestDiffId"`
	Provider           string    `json:"provider"`
	Reviewer           *UserCore `json:"reviewer"`
	UpdatedAt          Time      `json:"updatedAt"`
	User               *UserCore `json:"user"`
}

type MergeRequestReviewLlmSummaryConnection struct {
	Edges    []*MergeRequestReviewLlmSummaryEdge `json:"edges"`
	Nodes    []*MergeRequestReviewLlmSummary     `json:"nodes"`
	PageInfo PageInfo                            `json:"pageInfo"`
}

type MergeRequestReviewLlmSummaryEdge struct {
	Cursor string                        `json:"cursor"`
	Node   *MergeRequestReviewLlmSummary `json:"node"`
}

type MergeRequestReviewer struct {
	AssignedMergeRequests        *MergeRequestConnection         `json:"assignedMergeRequests"`
	AuthoredMergeRequests        *MergeRequestConnection         `json:"authoredMergeRequests"`
	AvatarUrl                    *string                         `json:"avatarUrl"`
	Bio                          *string                         `json:"bio"`
	Bot                          bool                            `json:"bot"`
	Callouts                     *UserCalloutConnection          `json:"callouts"`
	CommitEmail                  *string                         `json:"commitEmail"`
	CreatedAt                    *Time                           `json:"createdAt"`
	Discord                      *string                         `json:"discord"`
	Email                        *string                         `json:"email"`
	Emails                       *EmailConnection                `json:"emails"`
	GitpodEnabled                *bool                           `json:"gitpodEnabled"`
	GroupCount                   *int64                          `json:"groupCount"`
	GroupMemberships             *GroupMemberConnection          `json:"groupMemberships"`
	Groups                       *GroupConnection                `json:"groups"`
	Id                           string                          `json:"id"`
	Ide                          *Ide                            `json:"ide"`
	JobTitle                     *string                         `json:"jobTitle"`
	Linkedin                     *string                         `json:"linkedin"`
	Location                     *string                         `json:"location"`
	MergeRequestInteraction      *UserMergeRequestInteraction    `json:"mergeRequestInteraction"`
	Name                         string                          `json:"name"`
	Namespace                    *Namespace                      `json:"namespace"`
	NamespaceCommitEmails        *NamespaceCommitEmailConnection `json:"namespaceCommitEmails"`
	Organization                 *string                         `json:"organization"`
	PreferencesGitpodPath        *string                         `json:"preferencesGitpodPath"`
	ProfileEnableGitpodPath      *string                         `json:"profileEnableGitpodPath"`
	ProjectMemberships           *ProjectMemberConnection        `json:"projectMemberships"`
	Pronouns                     *string                         `json:"pronouns"`
	PublicEmail                  *string                         `json:"publicEmail"`
	ReviewRequestedMergeRequests *MergeRequestConnection         `json:"reviewRequestedMergeRequests"`
	SavedReplies                 *SavedReplyConnection           `json:"savedReplies"`
	SavedReply                   *SavedReply                     `json:"savedReply"`
	Snippets                     *SnippetConnection              `json:"snippets"`
	StarredProjects              *ProjectConnection              `json:"starredProjects"`
	State                        EnumUserState                   `json:"state"`
	Status                       *UserStatus                     `json:"status"`
	Timelogs                     *TimelogConnection              `json:"timelogs"`
	Todos                        *TodoConnection                 `json:"todos"`
	Twitter                      *string                         `json:"twitter"`
	UserAchievements             *UserAchievementConnection      `json:"userAchievements"`
	UserPermissions              UserPermissions                 `json:"userPermissions"`
	Username                     string                          `json:"username"`
	WebPath                      string                          `json:"webPath"`
	WebUrl                       string                          `json:"webUrl"`
	Workspaces                   *WorkspaceConnection            `json:"workspaces"`
}

type MergeRequestReviewerConnection struct {
	Edges    []*MergeRequestReviewerEdge `json:"edges"`
	Nodes    []*MergeRequestReviewer     `json:"nodes"`
	PageInfo PageInfo                    `json:"pageInfo"`
}

type MergeRequestReviewerEdge struct {
	Cursor string                `json:"cursor"`
	Node   *MergeRequestReviewer `json:"node"`
}

type MergeRequestReviewerRereviewInput struct {
	ClientMutationId *string `json:"clientMutationId"`
	Iid              string  `json:"iid"`
	ProjectPath      string  `json:"projectPath"`
	UserId           UserID  `json:"userId"`
}

type MergeRequestReviewerRereviewPayload struct {
	ClientMutationId *string       `json:"clientMutationId"`
	Errors           []string      `json:"errors"`
	MergeRequest     *MergeRequest `json:"mergeRequest"`
}

type MergeRequestSetAssigneesInput struct {
	AssigneeUsernames []string                   `json:"assigneeUsernames"`
	ClientMutationId  *string                    `json:"clientMutationId"`
	Iid               string                     `json:"iid"`
	OperationMode     *EnumMutationOperationMode `json:"operationMode"`
	ProjectPath       string                     `json:"projectPath"`
}

type MergeRequestSetAssigneesPayload struct {
	ClientMutationId *string       `json:"clientMutationId"`
	Errors           []string      `json:"errors"`
	MergeRequest     *MergeRequest `json:"mergeRequest"`
}

type MergeRequestSetDraftInput struct {
	ClientMutationId *string `json:"clientMutationId"`
	Draft            bool    `json:"draft"`
	Iid              string  `json:"iid"`
	ProjectPath      string  `json:"projectPath"`
}

type MergeRequestSetDraftPayload struct {
	ClientMutationId *string       `json:"clientMutationId"`
	Errors           []string      `json:"errors"`
	MergeRequest     *MergeRequest `json:"mergeRequest"`
}

type MergeRequestSetLabelsInput struct {
	ClientMutationId *string                    `json:"clientMutationId"`
	Iid              string                     `json:"iid"`
	LabelIds         []LabelID                  `json:"labelIds"`
	OperationMode    *EnumMutationOperationMode `json:"operationMode"`
	ProjectPath      string                     `json:"projectPath"`
}

type MergeRequestSetLabelsPayload struct {
	ClientMutationId *string       `json:"clientMutationId"`
	Errors           []string      `json:"errors"`
	MergeRequest     *MergeRequest `json:"mergeRequest"`
}

type MergeRequestSetLockedInput struct {
	ClientMutationId *string `json:"clientMutationId"`
	Iid              string  `json:"iid"`
	Locked           bool    `json:"locked"`
	ProjectPath      string  `json:"projectPath"`
}

type MergeRequestSetLockedPayload struct {
	ClientMutationId *string       `json:"clientMutationId"`
	Errors           []string      `json:"errors"`
	MergeRequest     *MergeRequest `json:"mergeRequest"`
}

type MergeRequestSetMilestoneInput struct {
	ClientMutationId *string      `json:"clientMutationId"`
	Iid              string       `json:"iid"`
	MilestoneId      *MilestoneID `json:"milestoneId"`
	ProjectPath      string       `json:"projectPath"`
}

type MergeRequestSetMilestonePayload struct {
	ClientMutationId *string       `json:"clientMutationId"`
	Errors           []string      `json:"errors"`
	MergeRequest     *MergeRequest `json:"mergeRequest"`
}

type MergeRequestSetReviewersInput struct {
	ClientMutationId  *string                    `json:"clientMutationId"`
	Iid               string                     `json:"iid"`
	OperationMode     *EnumMutationOperationMode `json:"operationMode"`
	ProjectPath       string                     `json:"projectPath"`
	ReviewerUsernames []string                   `json:"reviewerUsernames"`
}

type MergeRequestSetReviewersPayload struct {
	ClientMutationId *string       `json:"clientMutationId"`
	Errors           []string      `json:"errors"`
	MergeRequest     *MergeRequest `json:"mergeRequest"`
}

type MergeRequestSetSubscriptionInput struct {
	ClientMutationId *string `json:"clientMutationId"`
	Iid              string  `json:"iid"`
	ProjectPath      string  `json:"projectPath"`
	SubscribedState  bool    `json:"subscribedState"`
}

type MergeRequestSetSubscriptionPayload struct {
	ClientMutationId *string       `json:"clientMutationId"`
	Errors           []string      `json:"errors"`
	MergeRequest     *MergeRequest `json:"mergeRequest"`
}

type MergeRequestUpdateApprovalRuleInput struct {
	ApprovalRuleId     int64    `json:"approvalRuleId"`
	ApprovalsRequired  int64    `json:"approvalsRequired"`
	ClientMutationId   *string  `json:"clientMutationId"`
	GroupIds           []string `json:"groupIds"`
	Iid                string   `json:"iid"`
	Name               string   `json:"name"`
	ProjectPath        string   `json:"projectPath"`
	RemoveHiddenGroups *bool    `json:"removeHiddenGroups"`
	UserIds            []string `json:"userIds"`
}

type MergeRequestUpdateApprovalRulePayload struct {
	ClientMutationId *string       `json:"clientMutationId"`
	Errors           []string      `json:"errors"`
	MergeRequest     *MergeRequest `json:"mergeRequest"`
}

type MergeRequestUpdateInput struct {
	ClientMutationId *string                   `json:"clientMutationId"`
	Description      *string                   `json:"description"`
	Iid              string                    `json:"iid"`
	ProjectPath      string                    `json:"projectPath"`
	State            *EnumMergeRequestNewState `json:"state"`
	TargetBranch     *string                   `json:"targetBranch"`
	TimeEstimate     *string                   `json:"timeEstimate"`
	Title            *string                   `json:"title"`
}

type MergeRequestUpdatePayload struct {
	ClientMutationId *string       `json:"clientMutationId"`
	Errors           []string      `json:"errors"`
	MergeRequest     *MergeRequest `json:"mergeRequest"`
}

type MergeRequestsResolverNegatedParams struct {
	Labels         []string `json:"labels"`
	MilestoneTitle *string  `json:"milestoneTitle"`
}

type Metadata struct {
	Enterprise bool   `json:"enterprise"`
	Kas        Kas    `json:"kas"`
	Revision   string `json:"revision"`
	Version    string `json:"version"`
}

type MetricImage struct {
	FileName *string `json:"fileName"`
	FilePath *string `json:"filePath"`
	Id       string  `json:"id"`
	Iid      string  `json:"iid"`
	Url      string  `json:"url"`
}

type MetricsDashboardAnnotation struct {
	Description *string `json:"description"`
	EndingAt    *Time   `json:"endingAt"`
	Id          string  `json:"id"`
	PanelId     *string `json:"panelId"`
	StartingAt  *Time   `json:"startingAt"`
}

type Milestone struct {
	CreatedAt         Time                   `json:"createdAt"`
	Description       *string                `json:"description"`
	DueDate           *Time                  `json:"dueDate"`
	Expired           bool                   `json:"expired"`
	GroupMilestone    bool                   `json:"groupMilestone"`
	Id                string                 `json:"id"`
	Iid               string                 `json:"iid"`
	ProjectMilestone  bool                   `json:"projectMilestone"`
	Releases          *ReleaseConnection     `json:"releases"`
	Report            *TimeboxReport         `json:"report"`
	StartDate         *Time                  `json:"startDate"`
	State             EnumMilestoneStateEnum `json:"state"`
	Stats             *MilestoneStats        `json:"stats"`
	SubgroupMilestone bool                   `json:"subgroupMilestone"`
	Title             string                 `json:"title"`
	UpdatedAt         Time                   `json:"updatedAt"`
	WebPath           string                 `json:"webPath"`
}

type MilestoneConnection struct {
	Edges    []*MilestoneEdge `json:"edges"`
	Nodes    []*Milestone     `json:"nodes"`
	PageInfo PageInfo         `json:"pageInfo"`
}

type MilestoneEdge struct {
	Cursor string     `json:"cursor"`
	Node   *Milestone `json:"node"`
}

type MilestoneStats struct {
	ClosedIssuesCount *int64 `json:"closedIssuesCount"`
	TotalIssuesCount  *int64 `json:"totalIssuesCount"`
}

type Namespace struct {
	Achievements                      *AchievementConnection                 `json:"achievements"`
	ActualRepositorySizeLimit         *float64                               `json:"actualRepositorySizeLimit"`
	ActualSizeLimit                   *float64                               `json:"actualSizeLimit"`
	AddOnPurchase                     *AddOnPurchase                         `json:"addOnPurchase"`
	AdditionalPurchasedStorageSize    *float64                               `json:"additionalPurchasedStorageSize"`
	ComplianceFrameworks              *ComplianceFrameworkConnection         `json:"complianceFrameworks"`
	ContainsLockedProjects            bool                                   `json:"containsLockedProjects"`
	CrossProjectPipelineAvailable     bool                                   `json:"crossProjectPipelineAvailable"`
	Description                       *string                                `json:"description"`
	DescriptionHtml                   *string                                `json:"descriptionHtml"`
	FullName                          string                                 `json:"fullName"`
	FullPath                          string                                 `json:"fullPath"`
	Id                                string                                 `json:"id"`
	IsTemporaryStorageIncreaseEnabled bool                                   `json:"isTemporaryStorageIncreaseEnabled"`
	LfsEnabled                        *bool                                  `json:"lfsEnabled"`
	Name                              string                                 `json:"name"`
	PackageSettings                   *PackageSettings                       `json:"packageSettings"`
	Path                              string                                 `json:"path"`
	Projects                          ProjectConnection                      `json:"projects"`
	RepositorySizeExcessProjectCount  int64                                  `json:"repositorySizeExcessProjectCount"`
	RequestAccessEnabled              *bool                                  `json:"requestAccessEnabled"`
	RootStorageStatistics             *RootStorageStatistics                 `json:"rootStorageStatistics"`
	ScanExecutionPolicies             *ScanExecutionPolicyConnection         `json:"scanExecutionPolicies"`
	ScanResultPolicies                *ScanResultPolicyConnection            `json:"scanResultPolicies"`
	SharedRunnersSetting              *EnumSharedRunnersSetting              `json:"sharedRunnersSetting"`
	StorageSizeLimit                  *float64                               `json:"storageSizeLimit"`
	TemporaryStorageIncreaseEndsOn    *Time                                  `json:"temporaryStorageIncreaseEndsOn"`
	TimelogCategories                 *TimeTrackingTimelogCategoryConnection `json:"timelogCategories"`
	TotalRepositorySize               *float64                               `json:"totalRepositorySize"`
	TotalRepositorySizeExcess         *float64                               `json:"totalRepositorySizeExcess"`
	Visibility                        *string                                `json:"visibility"`
}

type NamespaceBan struct {
	Id        GlobalID  `json:"id"`
	Namespace Namespace `json:"namespace"`
	User      UserCore  `json:"user"`
}

type NamespaceBanDestroyInput struct {
	ClientMutationId *string                  `json:"clientMutationId"`
	Id               NamespacesNamespaceBanID `json:"id"`
}

type NamespaceBanDestroyPayload struct {
	ClientMutationId *string       `json:"clientMutationId"`
	Errors           []string      `json:"errors"`
	NamespaceBan     *NamespaceBan `json:"namespaceBan"`
}

type NamespaceCiCdSetting struct {
	AllowStaleRunnerPruning *bool      `json:"allowStaleRunnerPruning"`
	Namespace               *Namespace `json:"namespace"`
}

type NamespaceCiCdSettingsUpdateInput struct {
	AllowStaleRunnerPruning *bool   `json:"allowStaleRunnerPruning"`
	ClientMutationId        *string `json:"clientMutationId"`
	FullPath                string  `json:"fullPath"`
}

type NamespaceCiCdSettingsUpdatePayload struct {
	CiCdSettings     NamespaceCiCdSetting `json:"ciCdSettings"`
	ClientMutationId *string              `json:"clientMutationId"`
	Errors           []string             `json:"errors"`
}

type NamespaceCommitEmail struct {
	CreatedAt Time      `json:"createdAt"`
	Email     Email     `json:"email"`
	Id        string    `json:"id"`
	Namespace Namespace `json:"namespace"`
	UpdatedAt Time      `json:"updatedAt"`
}

type NamespaceCommitEmailConnection struct {
	Edges    []*NamespaceCommitEmailEdge `json:"edges"`
	Nodes    []*NamespaceCommitEmail     `json:"nodes"`
	PageInfo PageInfo                    `json:"pageInfo"`
}

type NamespaceCommitEmailEdge struct {
	Cursor string                `json:"cursor"`
	Node   *NamespaceCommitEmail `json:"node"`
}

type NamespaceConnection struct {
	Edges    []*NamespaceEdge `json:"edges"`
	Nodes    []*Namespace     `json:"nodes"`
	PageInfo PageInfo         `json:"pageInfo"`
}

type NamespaceEdge struct {
	Cursor string     `json:"cursor"`
	Node   *Namespace `json:"node"`
}

type NamespaceIncreaseStorageTemporarilyInput struct {
	ClientMutationId *string     `json:"clientMutationId"`
	Id               NamespaceID `json:"id"`
}

type NamespaceIncreaseStorageTemporarilyPayload struct {
	ClientMutationId *string    `json:"clientMutationId"`
	Errors           []string   `json:"errors"`
	Namespace        *Namespace `json:"namespace"`
}

type NegatedBoardIssueInput struct {
	AssigneeUsername    []*string                       `json:"assigneeUsername"`
	AuthorUsername      *string                         `json:"authorUsername"`
	EpicId              *EpicID                         `json:"epicId"`
	HealthStatusFilter  *EnumHealthStatus               `json:"healthStatusFilter"`
	Iids                []string                        `json:"iids"`
	IterationId         []IterationID                   `json:"iterationId"`
	IterationTitle      *string                         `json:"iterationTitle"`
	IterationWildcardId *EnumNegatedIterationWildcardId `json:"iterationWildcardId"`
	LabelName           []*string                       `json:"labelName"`
	MilestoneTitle      *string                         `json:"milestoneTitle"`
	MilestoneWildcardId *EnumMilestoneWildcardId        `json:"milestoneWildcardId"`
	MyReactionEmoji     *string                         `json:"myReactionEmoji"`
	ReleaseTag          *string                         `json:"releaseTag"`
	Types               []EnumIssueType                 `json:"types"`
	Weight              *string                         `json:"weight"`
}

type NegatedComplianceFrameworkFilters struct {
	Id *ComplianceManagementFrameworkID `json:"id"`
}

type NegatedEpicBoardIssueInput struct {
	AuthorUsername  *string   `json:"authorUsername"`
	LabelName       []*string `json:"labelName"`
	MyReactionEmoji *string   `json:"myReactionEmoji"`
}

type NegatedEpicFilterInput struct {
	AuthorUsername  *string   `json:"authorUsername"`
	LabelName       []*string `json:"labelName"`
	MyReactionEmoji *string   `json:"myReactionEmoji"`
}

type NegatedIssueFilterInput struct {
	AssigneeId          *string                         `json:"assigneeId"`
	AssigneeUsernames   []string                        `json:"assigneeUsernames"`
	AuthorUsername      *string                         `json:"authorUsername"`
	EpicId              *string                         `json:"epicId"`
	HealthStatusFilter  *EnumHealthStatus               `json:"healthStatusFilter"`
	Iids                []string                        `json:"iids"`
	IterationId         []string                        `json:"iterationId"`
	IterationWildcardId *EnumIterationWildcardId        `json:"iterationWildcardId"`
	LabelName           []string                        `json:"labelName"`
	MilestoneTitle      []string                        `json:"milestoneTitle"`
	MilestoneWildcardId *EnumNegatedMilestoneWildcardId `json:"milestoneWildcardId"`
	MyReactionEmoji     *string                         `json:"myReactionEmoji"`
	ReleaseTag          []string                        `json:"releaseTag"`
	Types               []EnumIssueType                 `json:"types"`
	Weight              *string                         `json:"weight"`
}

type NestedEnvironment struct {
	Environment *Environment `json:"environment"`
	Name        string       `json:"name"`
	Size        int64        `json:"size"`
}

type NestedEnvironmentConnection struct {
	Edges    []*NestedEnvironmentEdge `json:"edges"`
	Nodes    []*NestedEnvironment     `json:"nodes"`
	PageInfo PageInfo                 `json:"pageInfo"`
}

type NestedEnvironmentEdge struct {
	Cursor string             `json:"cursor"`
	Node   *NestedEnvironment `json:"node"`
}

type NetworkPolicy struct {
	Enabled        bool                   `json:"enabled"`
	Environments   *EnvironmentConnection `json:"environments"`
	FromAutoDevops bool                   `json:"fromAutoDevops"`
	Kind           EnumNetworkPolicyKind  `json:"kind"`
	Name           string                 `json:"name"`
	Namespace      string                 `json:"namespace"`
	UpdatedAt      Time                   `json:"updatedAt"`
	Yaml           string                 `json:"yaml"`
}

type NetworkPolicyConnection struct {
	Edges    []*NetworkPolicyEdge `json:"edges"`
	Nodes    []*NetworkPolicy     `json:"nodes"`
	PageInfo PageInfo             `json:"pageInfo"`
}

type NetworkPolicyEdge struct {
	Cursor string         `json:"cursor"`
	Node   *NetworkPolicy `json:"node"`
}

type Note struct {
	Author                 UserCore              `json:"author"`
	AuthorIsContributor    *bool                 `json:"authorIsContributor"`
	AwardEmoji             *AwardEmojiConnection `json:"awardEmoji"`
	Body                   string                `json:"body"`
	BodyHtml               *string               `json:"bodyHtml"`
	Confidential           *bool                 `json:"confidential"`
	CreatedAt              Time                  `json:"createdAt"`
	Discussion             *Discussion           `json:"discussion"`
	Id                     NoteID                `json:"id"`
	Internal               *bool                 `json:"internal"`
	LastEditedAt           *Time                 `json:"lastEditedAt"`
	LastEditedBy           *UserCore             `json:"lastEditedBy"`
	MaxAccessLevelOfAuthor *string               `json:"maxAccessLevelOfAuthor"`
	Position               *DiffPosition         `json:"position"`
	Project                *Project              `json:"project"`
	Resolvable             bool                  `json:"resolvable"`
	Resolved               bool                  `json:"resolved"`
	ResolvedAt             *Time                 `json:"resolvedAt"`
	ResolvedBy             *UserCore             `json:"resolvedBy"`
	System                 bool                  `json:"system"`
	SystemNoteIconName     *string               `json:"systemNoteIconName"`
	SystemNoteMetadata     *SystemNoteMetadata   `json:"systemNoteMetadata"`
	UpdatedAt              Time                  `json:"updatedAt"`
	Url                    *string               `json:"url"`
	UserPermissions        NotePermissions       `json:"userPermissions"`
}

type NoteConnection struct {
	Edges    []*NoteEdge `json:"edges"`
	Nodes    []*Note     `json:"nodes"`
	PageInfo PageInfo    `json:"pageInfo"`
}

type NoteEdge struct {
	Cursor string `json:"cursor"`
	Node   *Note  `json:"node"`
}

type NotePermissions struct {
	AdminNote      bool `json:"adminNote"`
	AwardEmoji     bool `json:"awardEmoji"`
	CreateNote     bool `json:"createNote"`
	ReadNote       bool `json:"readNote"`
	RepositionNote bool `json:"repositionNote"`
	ResolveNote    bool `json:"resolveNote"`
}

type NoteableType struct {
	TypeName string `json:"__typeName"`
	Design
	Issue
	MergeRequest
}

type NugetDependencyLinkMetadata struct {
	Id              PackagesNugetDependencyLinkMetadatumID `json:"id"`
	TargetFramework string                                 `json:"targetFramework"`
}

type NugetMetadata struct {
	IconUrl    *string                  `json:"iconUrl"`
	Id         PackagesNugetMetadatumID `json:"id"`
	LicenseUrl *string                  `json:"licenseUrl"`
	ProjectUrl *string                  `json:"projectUrl"`
}

type OncallParticipantType struct {
	ColorPalette *string                               `json:"colorPalette"`
	ColorWeight  *string                               `json:"colorWeight"`
	Id           IncidentManagementOncallParticipantID `json:"id"`
	User         UserCore                              `json:"user"`
}

type OncallParticipantTypeConnection struct {
	Edges    []*OncallParticipantTypeEdge `json:"edges"`
	Nodes    []*OncallParticipantType     `json:"nodes"`
	PageInfo PageInfo                     `json:"pageInfo"`
}

type OncallParticipantTypeEdge struct {
	Cursor string                 `json:"cursor"`
	Node   *OncallParticipantType `json:"node"`
}

type OncallRotationActivePeriodInputType struct {
	EndTime   string `json:"endTime"`
	StartTime string `json:"startTime"`
}

type OncallRotationActivePeriodType struct {
	EndTime   *string `json:"endTime"`
	StartTime *string `json:"startTime"`
}

type OncallRotationCreateInput struct {
	ActivePeriod     *OncallRotationActivePeriodInputType `json:"activePeriod"`
	ClientMutationId *string                              `json:"clientMutationId"`
	EndsAt           *OncallRotationDateInputType         `json:"endsAt"`
	Name             string                               `json:"name"`
	Participants     []OncallUserInputType                `json:"participants"`
	ProjectPath      string                               `json:"projectPath"`
	RotationLength   OncallRotationLengthInputType        `json:"rotationLength"`
	ScheduleIid      string                               `json:"scheduleIid"`
	StartsAt         OncallRotationDateInputType          `json:"startsAt"`
}

type OncallRotationCreatePayload struct {
	ClientMutationId *string                           `json:"clientMutationId"`
	Errors           []string                          `json:"errors"`
	OncallRotation   *IncidentManagementOncallRotation `json:"oncallRotation"`
}

type OncallRotationDateInputType struct {
	Date string `json:"date"`
	Time string `json:"time"`
}

type OncallRotationDestroyInput struct {
	ClientMutationId *string                            `json:"clientMutationId"`
	Id               IncidentManagementOncallRotationID `json:"id"`
	ProjectPath      string                             `json:"projectPath"`
	ScheduleIid      string                             `json:"scheduleIid"`
}

type OncallRotationDestroyPayload struct {
	ClientMutationId *string                           `json:"clientMutationId"`
	Errors           []string                          `json:"errors"`
	OncallRotation   *IncidentManagementOncallRotation `json:"oncallRotation"`
}

type OncallRotationLengthInputType struct {
	Length int64                      `json:"length"`
	Unit   EnumOncallRotationUnitEnum `json:"unit"`
}

type OncallRotationUpdateInput struct {
	ActivePeriod     *OncallRotationActivePeriodInputType `json:"activePeriod"`
	ClientMutationId *string                              `json:"clientMutationId"`
	EndsAt           *OncallRotationDateInputType         `json:"endsAt"`
	Id               IncidentManagementOncallRotationID   `json:"id"`
	Name             *string                              `json:"name"`
	Participants     []OncallUserInputType                `json:"participants"`
	RotationLength   *OncallRotationLengthInputType       `json:"rotationLength"`
	StartsAt         *OncallRotationDateInputType         `json:"startsAt"`
}

type OncallRotationUpdatePayload struct {
	ClientMutationId *string                           `json:"clientMutationId"`
	Errors           []string                          `json:"errors"`
	OncallRotation   *IncidentManagementOncallRotation `json:"oncallRotation"`
}

type OncallScheduleCreateInput struct {
	ClientMutationId *string `json:"clientMutationId"`
	Description      *string `json:"description"`
	Name             string  `json:"name"`
	ProjectPath      string  `json:"projectPath"`
	Timezone         string  `json:"timezone"`
}

type OncallScheduleCreatePayload struct {
	ClientMutationId *string                           `json:"clientMutationId"`
	Errors           []string                          `json:"errors"`
	OncallSchedule   *IncidentManagementOncallSchedule `json:"oncallSchedule"`
}

type OncallScheduleDestroyInput struct {
	ClientMutationId *string `json:"clientMutationId"`
	Iid              string  `json:"iid"`
	ProjectPath      string  `json:"projectPath"`
}

type OncallScheduleDestroyPayload struct {
	ClientMutationId *string                           `json:"clientMutationId"`
	Errors           []string                          `json:"errors"`
	OncallSchedule   *IncidentManagementOncallSchedule `json:"oncallSchedule"`
}

type OncallScheduleUpdateInput struct {
	ClientMutationId *string `json:"clientMutationId"`
	Description      *string `json:"description"`
	Iid              string  `json:"iid"`
	Name             *string `json:"name"`
	ProjectPath      string  `json:"projectPath"`
	Timezone         *string `json:"timezone"`
}

type OncallScheduleUpdatePayload struct {
	ClientMutationId *string                           `json:"clientMutationId"`
	Errors           []string                          `json:"errors"`
	OncallSchedule   *IncidentManagementOncallSchedule `json:"oncallSchedule"`
}

type OncallUserInputType struct {
	ColorPalette *EnumDataVisualizationColorEnum  `json:"colorPalette"`
	ColorWeight  *EnumDataVisualizationWeightEnum `json:"colorWeight"`
	Username     string                           `json:"username"`
}

type OrganizationStateCounts struct {
	Active   *int64 `json:"active"`
	All      *int64 `json:"all"`
	Inactive *int64 `json:"inactive"`
}

type Package struct {
	_links      PackageLinks          `json:"_links"`
	CanDestroy  bool                  `json:"canDestroy"`
	CreatedAt   Time                  `json:"createdAt"`
	Id          PackagesPackageID     `json:"id"`
	Metadata    *PackageMetadata      `json:"metadata"`
	Name        string                `json:"name"`
	PackageType EnumPackageTypeEnum   `json:"packageType"`
	Pipelines   *PipelineConnection   `json:"pipelines"`
	Project     Project               `json:"project"`
	Status      EnumPackageStatus     `json:"status"`
	Tags        *PackageTagConnection `json:"tags"`
	UpdatedAt   Time                  `json:"updatedAt"`
	Version     *string               `json:"version"`
}

type PackageBase struct {
	_links      PackageLinks          `json:"_links"`
	CanDestroy  bool                  `json:"canDestroy"`
	CreatedAt   Time                  `json:"createdAt"`
	Id          PackagesPackageID     `json:"id"`
	Metadata    *PackageMetadata      `json:"metadata"`
	Name        string                `json:"name"`
	PackageType EnumPackageTypeEnum   `json:"packageType"`
	Project     Project               `json:"project"`
	Status      EnumPackageStatus     `json:"status"`
	Tags        *PackageTagConnection `json:"tags"`
	UpdatedAt   Time                  `json:"updatedAt"`
	Version     *string               `json:"version"`
}

type PackageBaseConnection struct {
	Count    int64              `json:"count"`
	Edges    []*PackageBaseEdge `json:"edges"`
	Nodes    []*PackageBase     `json:"nodes"`
	PageInfo PageInfo           `json:"pageInfo"`
}

type PackageBaseEdge struct {
	Cursor string       `json:"cursor"`
	Node   *PackageBase `json:"node"`
}

type PackageComposerJsonType struct {
	License *string `json:"license"`
	Name    *string `json:"name"`
	Type    *string `json:"type"`
	Version *string `json:"version"`
}

type PackageConnection struct {
	Count    int64          `json:"count"`
	Edges    []*PackageEdge `json:"edges"`
	Nodes    []*Package     `json:"nodes"`
	PageInfo PageInfo       `json:"pageInfo"`
}

type PackageDependency struct {
	Id             PackagesDependencyID `json:"id"`
	Name           string               `json:"name"`
	VersionPattern string               `json:"versionPattern"`
}

type PackageDependencyLink struct {
	Dependency     *PackageDependency        `json:"dependency"`
	DependencyType EnumPackageDependencyType `json:"dependencyType"`
	Id             PackagesDependencyLinkID  `json:"id"`
	Metadata       *DependencyLinkMetadata   `json:"metadata"`
}

type PackageDependencyLinkConnection struct {
	Edges    []*PackageDependencyLinkEdge `json:"edges"`
	Nodes    []*PackageDependencyLink     `json:"nodes"`
	PageInfo PageInfo                     `json:"pageInfo"`
}

type PackageDependencyLinkEdge struct {
	Cursor string                 `json:"cursor"`
	Node   *PackageDependencyLink `json:"node"`
}

type PackageDetailsType struct {
	_links                      PackageLinks                     `json:"_links"`
	CanDestroy                  bool                             `json:"canDestroy"`
	ComposerConfigRepositoryUrl *string                          `json:"composerConfigRepositoryUrl"`
	ComposerUrl                 *string                          `json:"composerUrl"`
	ConanUrl                    *string                          `json:"conanUrl"`
	CreatedAt                   Time                             `json:"createdAt"`
	DependencyLinks             *PackageDependencyLinkConnection `json:"dependencyLinks"`
	Id                          PackagesPackageID                `json:"id"`
	LastDownloadedAt            *Time                            `json:"lastDownloadedAt"`
	MavenUrl                    *string                          `json:"mavenUrl"`
	Metadata                    *PackageMetadata                 `json:"metadata"`
	Name                        string                           `json:"name"`
	NpmUrl                      *string                          `json:"npmUrl"`
	NugetUrl                    *string                          `json:"nugetUrl"`
	PackageFiles                *PackageFileConnection           `json:"packageFiles"`
	PackageType                 EnumPackageTypeEnum              `json:"packageType"`
	Pipelines                   *PipelineConnection              `json:"pipelines"`
	Project                     Project                          `json:"project"`
	PublicPackage               *bool                            `json:"publicPackage"`
	PypiSetupUrl                *string                          `json:"pypiSetupUrl"`
	PypiUrl                     *string                          `json:"pypiUrl"`
	Status                      EnumPackageStatus                `json:"status"`
	Tags                        *PackageTagConnection            `json:"tags"`
	UpdatedAt                   Time                             `json:"updatedAt"`
	Version                     *string                          `json:"version"`
	Versions                    *PackageBaseConnection           `json:"versions"`
}

type PackageEdge struct {
	Cursor string   `json:"cursor"`
	Node   *Package `json:"node"`
}

type PackageFile struct {
	CreatedAt    Time                  `json:"createdAt"`
	DownloadPath string                `json:"downloadPath"`
	FileMd5      *string               `json:"fileMd5"`
	FileMetadata *PackageFileMetadata  `json:"fileMetadata"`
	FileName     string                `json:"fileName"`
	FileSha1     *string               `json:"fileSha1"`
	FileSha256   *string               `json:"fileSha256"`
	Id           PackagesPackageFileID `json:"id"`
	Size         string                `json:"size"`
	UpdatedAt    Time                  `json:"updatedAt"`
}

type PackageFileConnection struct {
	Edges    []*PackageFileEdge `json:"edges"`
	Nodes    []*PackageFile     `json:"nodes"`
	PageInfo PageInfo           `json:"pageInfo"`
}

type PackageFileEdge struct {
	Cursor string       `json:"cursor"`
	Node   *PackageFile `json:"node"`
}

type PackageFileRegistry struct {
	CreatedAt              *Time                      `json:"createdAt"`
	Id                     string                     `json:"id"`
	LastSyncFailure        *string                    `json:"lastSyncFailure"`
	LastSyncedAt           *Time                      `json:"lastSyncedAt"`
	PackageFileId          string                     `json:"packageFileId"`
	RetryAt                *Time                      `json:"retryAt"`
	RetryCount             *int64                     `json:"retryCount"`
	State                  *EnumRegistryState         `json:"state"`
	VerificationChecksum   *string                    `json:"verificationChecksum"`
	VerificationFailure    *string                    `json:"verificationFailure"`
	VerificationRetryAt    *Time                      `json:"verificationRetryAt"`
	VerificationRetryCount *int64                     `json:"verificationRetryCount"`
	VerificationStartedAt  *Time                      `json:"verificationStartedAt"`
	VerificationState      *EnumVerificationStateEnum `json:"verificationState"`
	VerifiedAt             *Time                      `json:"verifiedAt"`
}

type PackageFileRegistryConnection struct {
	Edges    []*PackageFileRegistryEdge `json:"edges"`
	Nodes    []*PackageFileRegistry     `json:"nodes"`
	PageInfo PageInfo                   `json:"pageInfo"`
}

type PackageFileRegistryEdge struct {
	Cursor string               `json:"cursor"`
	Node   *PackageFileRegistry `json:"node"`
}

type PackageHelmDependencyType struct {
	Alias        *string  `json:"alias"`
	Condition    *string  `json:"condition"`
	Enabled      *bool    `json:"enabled"`
	ImportValues []JSON   `json:"importValues"`
	Name         *string  `json:"name"`
	Repository   *string  `json:"repository"`
	Tags         []string `json:"tags"`
	Version      *string  `json:"version"`
}

type PackageHelmMaintainerType struct {
	Email *string `json:"email"`
	Name  *string `json:"name"`
	Url   *string `json:"url"`
}

type PackageHelmMetadataType struct {
	Annotations  *JSON                       `json:"annotations"`
	ApiVersion   string                      `json:"apiVersion"`
	AppVersion   *string                     `json:"appVersion"`
	Condition    *string                     `json:"condition"`
	Dependencies []PackageHelmDependencyType `json:"dependencies"`
	Deprecated   *bool                       `json:"deprecated"`
	Description  *string                     `json:"description"`
	Home         *string                     `json:"home"`
	Icon         *string                     `json:"icon"`
	Keywords     []string                    `json:"keywords"`
	KubeVersion  *string                     `json:"kubeVersion"`
	Maintainers  []PackageHelmMaintainerType `json:"maintainers"`
	Name         string                      `json:"name"`
	Sources      []string                    `json:"sources"`
	Tags         *string                     `json:"tags"`
	Type         *string                     `json:"type"`
	Version      string                      `json:"version"`
}

type PackageLinks struct {
	WebPath *string `json:"webPath"`
}

type PackageMetadata struct {
	TypeName string `json:"__typeName"`
	ComposerMetadata
	ConanMetadata
	MavenMetadata
	NugetMetadata
	PypiMetadata
}

type PackageSettings struct {
	GenericDuplicateExceptionRegex       *UntrustedRegexp `json:"genericDuplicateExceptionRegex"`
	GenericDuplicatesAllowed             bool             `json:"genericDuplicatesAllowed"`
	LockMavenPackageRequestsForwarding   bool             `json:"lockMavenPackageRequestsForwarding"`
	LockNpmPackageRequestsForwarding     bool             `json:"lockNpmPackageRequestsForwarding"`
	LockPypiPackageRequestsForwarding    bool             `json:"lockPypiPackageRequestsForwarding"`
	MavenDuplicateExceptionRegex         *UntrustedRegexp `json:"mavenDuplicateExceptionRegex"`
	MavenDuplicatesAllowed               bool             `json:"mavenDuplicatesAllowed"`
	MavenPackageRequestsForwarding       *bool            `json:"mavenPackageRequestsForwarding"`
	MavenPackageRequestsForwardingLocked bool             `json:"mavenPackageRequestsForwardingLocked"`
	NpmPackageRequestsForwarding         *bool            `json:"npmPackageRequestsForwarding"`
	NpmPackageRequestsForwardingLocked   bool             `json:"npmPackageRequestsForwardingLocked"`
	PypiPackageRequestsForwarding        *bool            `json:"pypiPackageRequestsForwarding"`
	PypiPackageRequestsForwardingLocked  bool             `json:"pypiPackageRequestsForwardingLocked"`
}

type PackageTag struct {
	CreatedAt Time   `json:"createdAt"`
	Id        string `json:"id"`
	Name      string `json:"name"`
	UpdatedAt Time   `json:"updatedAt"`
}

type PackageTagConnection struct {
	Edges    []*PackageTagEdge `json:"edges"`
	Nodes    []*PackageTag     `json:"nodes"`
	PageInfo PageInfo          `json:"pageInfo"`
}

type PackageTagEdge struct {
	Cursor string      `json:"cursor"`
	Node   *PackageTag `json:"node"`
}

type PackagesCleanupPolicy struct {
	KeepNDuplicatedPackageFiles EnumPackagesCleanupKeepDuplicatedPackageFilesEnum `json:"keepNDuplicatedPackageFiles"`
	NextRunAt                   *Time                                             `json:"nextRunAt"`
}

type PageInfo struct {
	EndCursor       *string `json:"endCursor"`
	HasNextPage     bool    `json:"hasNextPage"`
	HasPreviousPage bool    `json:"hasPreviousPage"`
	StartCursor     *string `json:"startCursor"`
}

type PagesDeploymentRegistry struct {
	CreatedAt              *Time                      `json:"createdAt"`
	Id                     string                     `json:"id"`
	LastSyncFailure        *string                    `json:"lastSyncFailure"`
	LastSyncedAt           *Time                      `json:"lastSyncedAt"`
	PagesDeploymentId      string                     `json:"pagesDeploymentId"`
	RetryAt                *Time                      `json:"retryAt"`
	RetryCount             *int64                     `json:"retryCount"`
	State                  *EnumRegistryState         `json:"state"`
	VerificationChecksum   *string                    `json:"verificationChecksum"`
	VerificationFailure    *string                    `json:"verificationFailure"`
	VerificationRetryAt    *Time                      `json:"verificationRetryAt"`
	VerificationRetryCount *int64                     `json:"verificationRetryCount"`
	VerificationStartedAt  *Time                      `json:"verificationStartedAt"`
	VerificationState      *EnumVerificationStateEnum `json:"verificationState"`
	VerifiedAt             *Time                      `json:"verifiedAt"`
}

type PagesDeploymentRegistryConnection struct {
	Edges    []*PagesDeploymentRegistryEdge `json:"edges"`
	Nodes    []*PagesDeploymentRegistry     `json:"nodes"`
	PageInfo PageInfo                       `json:"pageInfo"`
}

type PagesDeploymentRegistryEdge struct {
	Cursor string                   `json:"cursor"`
	Node   *PagesDeploymentRegistry `json:"node"`
}

type PagesMarkOnboardingCompleteInput struct {
	ClientMutationId *string `json:"clientMutationId"`
	ProjectPath      string  `json:"projectPath"`
}

type PagesMarkOnboardingCompletePayload struct {
	ClientMutationId   *string  `json:"clientMutationId"`
	Errors             []string `json:"errors"`
	OnboardingComplete bool     `json:"onboardingComplete"`
}

type PathLock struct {
	Id   PathLockID `json:"id"`
	Path *string    `json:"path"`
	User *UserCore  `json:"user"`
}

type PathLockConnection struct {
	Edges    []*PathLockEdge `json:"edges"`
	Nodes    []*PathLock     `json:"nodes"`
	PageInfo PageInfo        `json:"pageInfo"`
}

type PathLockEdge struct {
	Cursor string    `json:"cursor"`
	Node   *PathLock `json:"node"`
}

type Pipeline struct {
	Active                   bool                                     `json:"active"`
	BeforeSha                *string                                  `json:"beforeSha"`
	Cancelable               bool                                     `json:"cancelable"`
	CodeQualityReportSummary *CodeQualityReportSummary                `json:"codeQualityReportSummary"`
	CodeQualityReports       *CodeQualityDegradationConnection        `json:"codeQualityReports"`
	Commit                   *Commit                                  `json:"commit"`
	CommitPath               *string                                  `json:"commitPath"`
	CommittedAt              *Time                                    `json:"committedAt"`
	Complete                 bool                                     `json:"complete"`
	ConfigSource             *EnumPipelineConfigSourceEnum            `json:"configSource"`
	Coverage                 *float64                                 `json:"coverage"`
	CreatedAt                Time                                     `json:"createdAt"`
	DastProfile              *DastProfile                             `json:"dastProfile"`
	DetailedStatus           DetailedStatus                           `json:"detailedStatus"`
	Downstream               *PipelineConnection                      `json:"downstream"`
	Duration                 *int64                                   `json:"duration"`
	FinishedAt               *Time                                    `json:"finishedAt"`
	Id                       string                                   `json:"id"`
	Iid                      string                                   `json:"iid"`
	Job                      *CiJob                                   `json:"job"`
	JobArtifacts             []CiJobArtifact                          `json:"jobArtifacts"`
	Jobs                     *CiJobConnection                         `json:"jobs"`
	MergeRequestEventType    *EnumPipelineMergeRequestEventType       `json:"mergeRequestEventType"`
	Path                     *string                                  `json:"path"`
	Project                  *Project                                 `json:"project"`
	QueuedDuration           *Duration                                `json:"queuedDuration"`
	Ref                      *string                                  `json:"ref"`
	RefPath                  *string                                  `json:"refPath"`
	Retryable                bool                                     `json:"retryable"`
	SecurityReportFinding    *PipelineSecurityReportFinding           `json:"securityReportFinding"`
	SecurityReportFindings   *PipelineSecurityReportFindingConnection `json:"securityReportFindings"`
	SecurityReportSummary    *SecurityReportSummary                   `json:"securityReportSummary"`
	Sha                      *string                                  `json:"sha"`
	SourceJob                *CiJob                                   `json:"sourceJob"`
	Stages                   *CiStageConnection                       `json:"stages"`
	StartedAt                *Time                                    `json:"startedAt"`
	Status                   EnumPipelineStatusEnum                   `json:"status"`
	TestReportSummary        TestReportSummary                        `json:"testReportSummary"`
	TestSuite                *TestSuite                               `json:"testSuite"`
	UpdatedAt                Time                                     `json:"updatedAt"`
	Upstream                 *Pipeline                                `json:"upstream"`
	User                     *UserCore                                `json:"user"`
	UserPermissions          PipelinePermissions                      `json:"userPermissions"`
	UsesNeeds                *bool                                    `json:"usesNeeds"`
	WarningMessages          []PipelineMessage                        `json:"warningMessages"`
	Warnings                 bool                                     `json:"warnings"`
}

type PipelineAnalytics struct {
	MonthPipelinesLabels     []string `json:"monthPipelinesLabels"`
	MonthPipelinesSuccessful []int64  `json:"monthPipelinesSuccessful"`
	MonthPipelinesTotals     []int64  `json:"monthPipelinesTotals"`
	PipelineTimesLabels      []string `json:"pipelineTimesLabels"`
	PipelineTimesValues      []int64  `json:"pipelineTimesValues"`
	WeekPipelinesLabels      []string `json:"weekPipelinesLabels"`
	WeekPipelinesSuccessful  []int64  `json:"weekPipelinesSuccessful"`
	WeekPipelinesTotals      []int64  `json:"weekPipelinesTotals"`
	YearPipelinesLabels      []string `json:"yearPipelinesLabels"`
	YearPipelinesSuccessful  []int64  `json:"yearPipelinesSuccessful"`
	YearPipelinesTotals      []int64  `json:"yearPipelinesTotals"`
}

type PipelineArtifactRegistry struct {
	CreatedAt              *Time                      `json:"createdAt"`
	Id                     string                     `json:"id"`
	LastSyncFailure        *string                    `json:"lastSyncFailure"`
	LastSyncedAt           *Time                      `json:"lastSyncedAt"`
	PipelineArtifactId     string                     `json:"pipelineArtifactId"`
	RetryAt                *Time                      `json:"retryAt"`
	RetryCount             *int64                     `json:"retryCount"`
	State                  *EnumRegistryState         `json:"state"`
	VerificationChecksum   *string                    `json:"verificationChecksum"`
	VerificationFailure    *string                    `json:"verificationFailure"`
	VerificationRetryAt    *Time                      `json:"verificationRetryAt"`
	VerificationRetryCount *int64                     `json:"verificationRetryCount"`
	VerificationStartedAt  *Time                      `json:"verificationStartedAt"`
	VerificationState      *EnumVerificationStateEnum `json:"verificationState"`
	VerifiedAt             *Time                      `json:"verifiedAt"`
}

type PipelineArtifactRegistryConnection struct {
	Edges    []*PipelineArtifactRegistryEdge `json:"edges"`
	Nodes    []*PipelineArtifactRegistry     `json:"nodes"`
	PageInfo PageInfo                        `json:"pageInfo"`
}

type PipelineArtifactRegistryEdge struct {
	Cursor string                    `json:"cursor"`
	Node   *PipelineArtifactRegistry `json:"node"`
}

type PipelineCancelInput struct {
	ClientMutationId *string      `json:"clientMutationId"`
	Id               CiPipelineID `json:"id"`
}

type PipelineCancelPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
}

type PipelineConnection struct {
	Count    int64           `json:"count"`
	Edges    []*PipelineEdge `json:"edges"`
	Nodes    []*Pipeline     `json:"nodes"`
	PageInfo PageInfo        `json:"pageInfo"`
}

type PipelineCounts struct {
	All      *int64 `json:"all"`
	Finished *int64 `json:"finished"`
	Pending  *int64 `json:"pending"`
	Running  *int64 `json:"running"`
}

type PipelineDestroyInput struct {
	ClientMutationId *string      `json:"clientMutationId"`
	Id               CiPipelineID `json:"id"`
}

type PipelineDestroyPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
}

type PipelineEdge struct {
	Cursor string    `json:"cursor"`
	Node   *Pipeline `json:"node"`
}

type PipelineMessage struct {
	Content string `json:"content"`
	Id      string `json:"id"`
}

type PipelinePermissions struct {
	AdminPipeline   bool `json:"adminPipeline"`
	DestroyPipeline bool `json:"destroyPipeline"`
	UpdatePipeline  bool `json:"updatePipeline"`
}

type PipelineRetryInput struct {
	ClientMutationId *string      `json:"clientMutationId"`
	Id               CiPipelineID `json:"id"`
}

type PipelineRetryPayload struct {
	ClientMutationId *string   `json:"clientMutationId"`
	Errors           []string  `json:"errors"`
	Pipeline         *Pipeline `json:"pipeline"`
}

type PipelineSchedule struct {
	Active          bool                                `json:"active"`
	CreatedAt       Time                                `json:"createdAt"`
	Cron            string                              `json:"cron"`
	CronTimezone    string                              `json:"cronTimezone"`
	Description     *string                             `json:"description"`
	EditPath        *string                             `json:"editPath"`
	ForTag          bool                                `json:"forTag"`
	Id              string                              `json:"id"`
	LastPipeline    *Pipeline                           `json:"lastPipeline"`
	NextRunAt       Time                                `json:"nextRunAt"`
	Owner           UserCore                            `json:"owner"`
	Project         *Project                            `json:"project"`
	RealNextRun     Time                                `json:"realNextRun"`
	Ref             *string                             `json:"ref"`
	RefForDisplay   *string                             `json:"refForDisplay"`
	RefPath         *string                             `json:"refPath"`
	UpdatedAt       Time                                `json:"updatedAt"`
	UserPermissions PipelineSchedulePermissions         `json:"userPermissions"`
	Variables       *PipelineScheduleVariableConnection `json:"variables"`
}

type PipelineScheduleConnection struct {
	Count    int64                   `json:"count"`
	Edges    []*PipelineScheduleEdge `json:"edges"`
	Nodes    []*PipelineSchedule     `json:"nodes"`
	PageInfo PageInfo                `json:"pageInfo"`
}

type PipelineScheduleCreateInput struct {
	Active           *bool                           `json:"active"`
	ClientMutationId *string                         `json:"clientMutationId"`
	Cron             string                          `json:"cron"`
	CronTimezone     *string                         `json:"cronTimezone"`
	Description      string                          `json:"description"`
	ProjectPath      string                          `json:"projectPath"`
	Ref              string                          `json:"ref"`
	Variables        []PipelineScheduleVariableInput `json:"variables"`
}

type PipelineScheduleCreatePayload struct {
	ClientMutationId *string           `json:"clientMutationId"`
	Errors           []string          `json:"errors"`
	PipelineSchedule *PipelineSchedule `json:"pipelineSchedule"`
}

type PipelineScheduleDeleteInput struct {
	ClientMutationId *string              `json:"clientMutationId"`
	Id               CiPipelineScheduleID `json:"id"`
}

type PipelineScheduleDeletePayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
}

type PipelineScheduleEdge struct {
	Cursor string            `json:"cursor"`
	Node   *PipelineSchedule `json:"node"`
}

type PipelineSchedulePermissions struct {
	AdminPipelineSchedule         bool `json:"adminPipelineSchedule"`
	PlayPipelineSchedule          bool `json:"playPipelineSchedule"`
	TakeOwnershipPipelineSchedule bool `json:"takeOwnershipPipelineSchedule"`
	UpdatePipelineSchedule        bool `json:"updatePipelineSchedule"`
}

type PipelineSchedulePlayInput struct {
	ClientMutationId *string              `json:"clientMutationId"`
	Id               CiPipelineScheduleID `json:"id"`
}

type PipelineSchedulePlayPayload struct {
	ClientMutationId *string           `json:"clientMutationId"`
	Errors           []string          `json:"errors"`
	PipelineSchedule *PipelineSchedule `json:"pipelineSchedule"`
}

type PipelineScheduleTakeOwnershipInput struct {
	ClientMutationId *string              `json:"clientMutationId"`
	Id               CiPipelineScheduleID `json:"id"`
}

type PipelineScheduleTakeOwnershipPayload struct {
	ClientMutationId *string           `json:"clientMutationId"`
	Errors           []string          `json:"errors"`
	PipelineSchedule *PipelineSchedule `json:"pipelineSchedule"`
}

type PipelineScheduleUpdateInput struct {
	Active           *bool                           `json:"active"`
	ClientMutationId *string                         `json:"clientMutationId"`
	Cron             *string                         `json:"cron"`
	CronTimezone     *string                         `json:"cronTimezone"`
	Description      *string                         `json:"description"`
	Id               CiPipelineScheduleID            `json:"id"`
	Ref              *string                         `json:"ref"`
	Variables        []PipelineScheduleVariableInput `json:"variables"`
}

type PipelineScheduleUpdatePayload struct {
	ClientMutationId *string           `json:"clientMutationId"`
	Errors           []string          `json:"errors"`
	PipelineSchedule *PipelineSchedule `json:"pipelineSchedule"`
}

type PipelineScheduleVariable struct {
	Id           string              `json:"id"`
	Key          *string             `json:"key"`
	Raw          *bool               `json:"raw"`
	Value        *string             `json:"value"`
	VariableType *EnumCiVariableType `json:"variableType"`
}

type PipelineScheduleVariableConnection struct {
	Edges    []*PipelineScheduleVariableEdge `json:"edges"`
	Nodes    []*PipelineScheduleVariable     `json:"nodes"`
	PageInfo PageInfo                        `json:"pageInfo"`
}

type PipelineScheduleVariableEdge struct {
	Cursor string                    `json:"cursor"`
	Node   *PipelineScheduleVariable `json:"node"`
}

type PipelineScheduleVariableInput struct {
	Destroy      *bool                         `json:"destroy"`
	Id           *CiPipelineScheduleVariableID `json:"id"`
	Key          string                        `json:"key"`
	Value        string                        `json:"value"`
	VariableType EnumCiVariableType            `json:"variableType"`
}

type PipelineSecurityReportFinding struct {
	Assets             []AssetType                       `json:"assets"`
	Description        *string                           `json:"description"`
	DescriptionHtml    *string                           `json:"descriptionHtml"`
	Details            []VulnerabilityDetail             `json:"details"`
	DismissalReason    *EnumVulnerabilityDismissalReason `json:"dismissalReason"`
	DismissedAt        *Time                             `json:"dismissedAt"`
	DismissedBy        *UserCore                         `json:"dismissedBy"`
	Evidence           *VulnerabilityEvidence            `json:"evidence"`
	FalsePositive      *bool                             `json:"falsePositive"`
	Identifiers        []VulnerabilityIdentifier         `json:"identifiers"`
	IssueLinks         *VulnerabilityIssueLinkConnection `json:"issueLinks"`
	Links              []VulnerabilityLink               `json:"links"`
	Location           *VulnerabilityLocation            `json:"location"`
	MergeRequest       *MergeRequest                     `json:"mergeRequest"`
	Project            *Project                          `json:"project"`
	ProjectFingerprint *string                           `json:"projectFingerprint"`
	Remediations       []VulnerabilityRemediationType    `json:"remediations"`
	ReportType         *EnumVulnerabilityReportType      `json:"reportType"`
	Scanner            *VulnerabilityScanner             `json:"scanner"`
	Severity           *EnumVulnerabilitySeverity        `json:"severity"`
	Solution           *string                           `json:"solution"`
	State              *EnumVulnerabilityState           `json:"state"`
	StateComment       *string                           `json:"stateComment"`
	Title              *string                           `json:"title"`
	Uuid               *string                           `json:"uuid"`
	Vulnerability      *Vulnerability                    `json:"vulnerability"`
}

type PipelineSecurityReportFindingConnection struct {
	Edges    []*PipelineSecurityReportFindingEdge `json:"edges"`
	Nodes    []*PipelineSecurityReportFinding     `json:"nodes"`
	PageInfo PageInfo                             `json:"pageInfo"`
}

type PipelineSecurityReportFindingEdge struct {
	Cursor string                         `json:"cursor"`
	Node   *PipelineSecurityReportFinding `json:"node"`
}

type PreviewBillableUserChange struct {
	NewBillableUserCount *int64 `json:"newBillableUserCount"`
	SeatsInSubscription  *int64 `json:"seatsInSubscription"`
	WillIncreaseOverage  *bool  `json:"willIncreaseOverage"`
}

type ProductAnalyticsDashboard struct {
	Description *string                                  `json:"description"`
	Panels      ProductAnalyticsDashboardPanelConnection `json:"panels"`
	Slug        string                                   `json:"slug"`
	Title       string                                   `json:"title"`
	UserDefined bool                                     `json:"userDefined"`
}

type ProductAnalyticsDashboardConnection struct {
	Edges    []*ProductAnalyticsDashboardEdge `json:"edges"`
	Nodes    []*ProductAnalyticsDashboard     `json:"nodes"`
	PageInfo PageInfo                         `json:"pageInfo"`
}

type ProductAnalyticsDashboardEdge struct {
	Cursor string                     `json:"cursor"`
	Node   *ProductAnalyticsDashboard `json:"node"`
}

type ProductAnalyticsDashboardPanel struct {
	GridAttributes *JSON                                  `json:"gridAttributes"`
	QueryOverrides *JSON                                  `json:"queryOverrides"`
	Title          string                                 `json:"title"`
	Visualization  ProductAnalyticsDashboardVisualization `json:"visualization"`
}

type ProductAnalyticsDashboardPanelConnection struct {
	Edges    []*ProductAnalyticsDashboardPanelEdge `json:"edges"`
	Nodes    []*ProductAnalyticsDashboardPanel     `json:"nodes"`
	PageInfo PageInfo                              `json:"pageInfo"`
}

type ProductAnalyticsDashboardPanelEdge struct {
	Cursor string                          `json:"cursor"`
	Node   *ProductAnalyticsDashboardPanel `json:"node"`
}

type ProductAnalyticsDashboardVisualization struct {
	Data    JSON   `json:"data"`
	Options JSON   `json:"options"`
	Slug    string `json:"slug"`
	Type    string `json:"type"`
}

type ProductAnalyticsDashboardVisualizationConnection struct {
	Edges    []*ProductAnalyticsDashboardVisualizationEdge `json:"edges"`
	Nodes    []*ProductAnalyticsDashboardVisualization     `json:"nodes"`
	PageInfo PageInfo                                      `json:"pageInfo"`
}

type ProductAnalyticsDashboardVisualizationEdge struct {
	Cursor string                                  `json:"cursor"`
	Node   *ProductAnalyticsDashboardVisualization `json:"node"`
}

type Project struct {
	ActualRepositorySizeLimit                    *float64                                          `json:"actualRepositorySizeLimit"`
	AgentConfigurations                          *AgentConfigurationConnection                     `json:"agentConfigurations"`
	AiConversations                              *ProjectConversations                             `json:"aiConversations"`
	AlertManagementAlert                         *AlertManagementAlert                             `json:"alertManagementAlert"`
	AlertManagementAlertStatusCounts             *AlertManagementAlertStatusCountsType             `json:"alertManagementAlertStatusCounts"`
	AlertManagementAlerts                        *AlertManagementAlertConnection                   `json:"alertManagementAlerts"`
	AlertManagementHttpIntegrations              *AlertManagementHttpIntegrationConnection         `json:"alertManagementHttpIntegrations"`
	AlertManagementIntegrations                  *AlertManagementIntegrationConnection             `json:"alertManagementIntegrations"`
	AlertManagementPayloadFields                 []AlertManagementPayloadAlertField                `json:"alertManagementPayloadFields"`
	AllowMergeOnSkippedPipeline                  *bool                                             `json:"allowMergeOnSkippedPipeline"`
	ApiFuzzingCiConfiguration                    *ApiFuzzingCiConfiguration                        `json:"apiFuzzingCiConfiguration"`
	Archived                                     *bool                                             `json:"archived"`
	AutocloseReferencedIssues                    *bool                                             `json:"autocloseReferencedIssues"`
	AutocompleteUsers                            []AutocompletedUser                               `json:"autocompleteUsers"`
	AvatarUrl                                    *string                                           `json:"avatarUrl"`
	Board                                        *Board                                            `json:"board"`
	Boards                                       *BoardConnection                                  `json:"boards"`
	BranchRules                                  *BranchRuleConnection                             `json:"branchRules"`
	CiAccessAuthorizedAgents                     *ClusterAgentAuthorizationCiAccessConnection      `json:"ciAccessAuthorizedAgents"`
	CiCdSettings                                 *ProjectCiCdSetting                               `json:"ciCdSettings"`
	CiConfigPathOrDefault                        string                                            `json:"ciConfigPathOrDefault"`
	CiConfigVariables                            []CiConfigVariable                                `json:"ciConfigVariables"`
	CiJobTokenScope                              *CiJobTokenScopeType                              `json:"ciJobTokenScope"`
	CiTemplate                                   *CiTemplate                                       `json:"ciTemplate"`
	CiVariables                                  *CiProjectVariableConnection                      `json:"ciVariables"`
	ClusterAgent                                 *ClusterAgent                                     `json:"clusterAgent"`
	ClusterAgents                                *ClusterAgentConnection                           `json:"clusterAgents"`
	CodeCoverageSummary                          *CodeCoverageSummary                              `json:"codeCoverageSummary"`
	CommitReferences                             *CommitReferences                                 `json:"commitReferences"`
	ComplianceFrameworks                         *ComplianceFrameworkConnection                    `json:"complianceFrameworks"`
	ContainerExpirationPolicy                    *ContainerExpirationPolicy                        `json:"containerExpirationPolicy"`
	ContainerRegistryEnabled                     *bool                                             `json:"containerRegistryEnabled"`
	ContainerRepositories                        *ContainerRepositoryConnection                    `json:"containerRepositories"`
	ContainerRepositoriesCount                   int64                                             `json:"containerRepositoriesCount"`
	Corpuses                                     *CoverageFuzzingCorpusConnection                  `json:"corpuses"`
	CreatedAt                                    *Time                                             `json:"createdAt"`
	DastProfile                                  *DastProfile                                      `json:"dastProfile"`
	DastProfiles                                 *DastProfileConnection                            `json:"dastProfiles"`
	DastScannerProfiles                          *DastScannerProfileConnection                     `json:"dastScannerProfiles"`
	DastSiteProfile                              *DastSiteProfile                                  `json:"dastSiteProfile"`
	DastSiteProfiles                             *DastSiteProfileConnection                        `json:"dastSiteProfiles"`
	DastSiteValidations                          *DastSiteValidationConnection                     `json:"dastSiteValidations"`
	DataTransfer                                 *ProjectDataTransfer                              `json:"dataTransfer"`
	Dependencies                                 *DependencyConnection                             `json:"dependencies"`
	Deployment                                   *Deployment                                       `json:"deployment"`
	Description                                  *string                                           `json:"description"`
	DescriptionHtml                              *string                                           `json:"descriptionHtml"`
	Dora                                         *Dora                                             `json:"dora"`
	Environment                                  *Environment                                      `json:"environment"`
	Environments                                 *EnvironmentConnection                            `json:"environments"`
	FlowMetrics                                  *ProjectValueStreamAnalyticsFlowMetrics           `json:"flowMetrics"`
	ForkDetails                                  *ForkDetails                                      `json:"forkDetails"`
	ForkTargets                                  *NamespaceConnection                              `json:"forkTargets"`
	ForksCount                                   int64                                             `json:"forksCount"`
	FullPath                                     string                                            `json:"fullPath"`
	GitlabSubscriptionsPreviewBillableUserChange *PreviewBillableUserChange                        `json:"gitlabSubscriptionsPreviewBillableUserChange"`
	GrafanaIntegration                           *GrafanaIntegration                               `json:"grafanaIntegration"`
	Group                                        *Group                                            `json:"group"`
	HasJiraVulnerabilityIssueCreationEnabled     bool                                              `json:"hasJiraVulnerabilityIssueCreationEnabled"`
	HttpUrlToRepo                                *string                                           `json:"httpUrlToRepo"`
	Id                                           string                                            `json:"id"`
	ImportStatus                                 *string                                           `json:"importStatus"`
	IncidentManagementEscalationPolicies         *EscalationPolicyTypeConnection                   `json:"incidentManagementEscalationPolicies"`
	IncidentManagementEscalationPolicy           *EscalationPolicyType                             `json:"incidentManagementEscalationPolicy"`
	IncidentManagementOncallSchedules            *IncidentManagementOncallScheduleConnection       `json:"incidentManagementOncallSchedules"`
	IncidentManagementTimelineEvent              *TimelineEventType                                `json:"incidentManagementTimelineEvent"`
	IncidentManagementTimelineEventTags          []TimelineEventTagType                            `json:"incidentManagementTimelineEventTags"`
	IncidentManagementTimelineEvents             *TimelineEventTypeConnection                      `json:"incidentManagementTimelineEvents"`
	InheritedCiVariables                         *InheritedCiVariableConnection                    `json:"inheritedCiVariables"`
	IsCatalogResource                            *bool                                             `json:"isCatalogResource"`
	Issue                                        *Issue                                            `json:"issue"`
	IssueStatusCounts                            *IssueStatusCountsType                            `json:"issueStatusCounts"`
	Issues                                       *IssueConnection                                  `json:"issues"`
	IssuesEnabled                                *bool                                             `json:"issuesEnabled"`
	IterationCadences                            *IterationCadenceConnection                       `json:"iterationCadences"`
	Iterations                                   *IterationConnection                              `json:"iterations"`
	JiraImportStatus                             *string                                           `json:"jiraImportStatus"`
	JiraImports                                  *JiraImportConnection                             `json:"jiraImports"`
	Job                                          *CiJob                                            `json:"job"`
	Jobs                                         *CiJobConnection                                  `json:"jobs"`
	JobsEnabled                                  *bool                                             `json:"jobsEnabled"`
	Label                                        *Label                                            `json:"label"`
	Labels                                       *LabelConnection                                  `json:"labels"`
	Languages                                    []RepositoryLanguage                              `json:"languages"`
	LastActivityAt                               *Time                                             `json:"lastActivityAt"`
	LfsEnabled                                   *bool                                             `json:"lfsEnabled"`
	MergeCommitTemplate                          *string                                           `json:"mergeCommitTemplate"`
	MergeRequest                                 *MergeRequest                                     `json:"mergeRequest"`
	MergeRequests                                *MergeRequestConnection                           `json:"mergeRequests"`
	MergeRequestsDisableCommittersApproval       bool                                              `json:"mergeRequestsDisableCommittersApproval"`
	MergeRequestsEnabled                         *bool                                             `json:"mergeRequestsEnabled"`
	MergeRequestsFfOnlyEnabled                   *bool                                             `json:"mergeRequestsFfOnlyEnabled"`
	Milestones                                   *MilestoneConnection                              `json:"milestones"`
	Name                                         string                                            `json:"name"`
	NameWithNamespace                            string                                            `json:"nameWithNamespace"`
	Namespace                                    *Namespace                                        `json:"namespace"`
	NestedEnvironments                           *NestedEnvironmentConnection                      `json:"nestedEnvironments"`
	NetworkPolicies                              *NetworkPolicyConnection                          `json:"networkPolicies"`
	OnlyAllowMergeIfAllDiscussionsAreResolved    *bool                                             `json:"onlyAllowMergeIfAllDiscussionsAreResolved"`
	OnlyAllowMergeIfAllStatusChecksPassed        *bool                                             `json:"onlyAllowMergeIfAllStatusChecksPassed"`
	OnlyAllowMergeIfPipelineSucceeds             *bool                                             `json:"onlyAllowMergeIfPipelineSucceeds"`
	OpenIssuesCount                              *int64                                            `json:"openIssuesCount"`
	Packages                                     *PackageConnection                                `json:"packages"`
	PackagesCleanupPolicy                        *PackagesCleanupPolicy                            `json:"packagesCleanupPolicy"`
	Path                                         string                                            `json:"path"`
	PathLocks                                    *PathLockConnection                               `json:"pathLocks"`
	Pipeline                                     *Pipeline                                         `json:"pipeline"`
	PipelineAnalytics                            *PipelineAnalytics                                `json:"pipelineAnalytics"`
	PipelineCounts                               *PipelineCounts                                   `json:"pipelineCounts"`
	PipelineSchedules                            *PipelineScheduleConnection                       `json:"pipelineSchedules"`
	Pipelines                                    *PipelineConnection                               `json:"pipelines"`
	PrintingMergeRequestLinkEnabled              *bool                                             `json:"printingMergeRequestLinkEnabled"`
	ProductAnalyticsDashboards                   *ProductAnalyticsDashboardConnection              `json:"productAnalyticsDashboards"`
	ProductAnalyticsInstrumentationKey           *string                                           `json:"productAnalyticsInstrumentationKey"`
	ProductAnalyticsState                        *EnumProductAnalyticsState                        `json:"productAnalyticsState"`
	ProductAnalyticsVisualizations               *ProductAnalyticsDashboardVisualizationConnection `json:"productAnalyticsVisualizations"`
	ProjectMembers                               *MemberInterfaceConnection                        `json:"projectMembers"`
	PublicJobs                                   *bool                                             `json:"publicJobs"`
	PushRules                                    *PushRules                                        `json:"pushRules"`
	RecentIssueBoards                            *BoardConnection                                  `json:"recentIssueBoards"`
	Release                                      *Release                                          `json:"release"`
	Releases                                     *ReleaseConnection                                `json:"releases"`
	RemoveSourceBranchAfterMerge                 *bool                                             `json:"removeSourceBranchAfterMerge"`
	Repository                                   *Repository                                       `json:"repository"`
	RepositorySizeExcess                         *float64                                          `json:"repositorySizeExcess"`
	RequestAccessEnabled                         *bool                                             `json:"requestAccessEnabled"`
	Requirement                                  *Requirement                                      `json:"requirement"`
	RequirementStatesCount                       *RequirementStatesCount                           `json:"requirementStatesCount"`
	Requirements                                 *RequirementConnection                            `json:"requirements"`
	Runners                                      *CiRunnerConnection                               `json:"runners"`
	SastCiConfiguration                          *SastCiConfiguration                              `json:"sastCiConfiguration"`
	ScanExecutionPolicies                        *ScanExecutionPolicyConnection                    `json:"scanExecutionPolicies"`
	ScanResultPolicies                           *ScanResultPolicyConnection                       `json:"scanResultPolicies"`
	SecurityDashboardPath                        *string                                           `json:"securityDashboardPath"`
	SecurityScanners                             *SecurityScanners                                 `json:"securityScanners"`
	SecurityTrainingProviders                    []ProjectSecurityTraining                         `json:"securityTrainingProviders"`
	SecurityTrainingUrls                         []SecurityTrainingUrl                             `json:"securityTrainingUrls"`
	SentryDetailedError                          *SentryDetailedError                              `json:"sentryDetailedError"`
	SentryErrors                                 *SentryErrorCollection                            `json:"sentryErrors"`
	ServiceDeskAddress                           *string                                           `json:"serviceDeskAddress"`
	ServiceDeskEnabled                           *bool                                             `json:"serviceDeskEnabled"`
	Services                                     *ServiceConnection                                `json:"services"`
	SharedRunnersEnabled                         *bool                                             `json:"sharedRunnersEnabled"`
	Snippets                                     *SnippetConnection                                `json:"snippets"`
	SnippetsEnabled                              *bool                                             `json:"snippetsEnabled"`
	SquashCommitTemplate                         *string                                           `json:"squashCommitTemplate"`
	SquashReadOnly                               bool                                              `json:"squashReadOnly"`
	SshUrlToRepo                                 *string                                           `json:"sshUrlToRepo"`
	StarCount                                    int64                                             `json:"starCount"`
	Statistics                                   *ProjectStatistics                                `json:"statistics"`
	StatisticsDetailsPaths                       *ProjectStatisticsRedirect                        `json:"statisticsDetailsPaths"`
	SuggestionCommitMessage                      *string                                           `json:"suggestionCommitMessage"`
	TagList                                      *string                                           `json:"tagList"`
	TerraformState                               *TerraformState                                   `json:"terraformState"`
	TerraformStates                              *TerraformStateConnection                         `json:"terraformStates"`
	TimelogCategories                            *TimeTrackingTimelogCategoryConnection            `json:"timelogCategories"`
	Timelogs                                     *TimelogConnection                                `json:"timelogs"`
	Topics                                       []string                                          `json:"topics"`
	TrackingKey                                  *string                                           `json:"trackingKey"`
	UserAccessAuthorizedAgents                   *ClusterAgentAuthorizationUserAccessConnection    `json:"userAccessAuthorizedAgents"`
	UserPermissions                              ProjectPermissions                                `json:"userPermissions"`
	Visibility                                   *string                                           `json:"visibility"`
	VisibleForks                                 *ProjectConnection                                `json:"visibleForks"`
	Vulnerabilities                              *VulnerabilityConnection                          `json:"vulnerabilities"`
	VulnerabilitiesCountByDay                    *VulnerabilitiesCountByDayConnection              `json:"vulnerabilitiesCountByDay"`
	VulnerabilityImages                          *VulnerabilityContainerImageConnection            `json:"vulnerabilityImages"`
	VulnerabilityScanners                        *VulnerabilityScannerConnection                   `json:"vulnerabilityScanners"`
	VulnerabilitySeveritiesCount                 *VulnerabilitySeveritiesCount                     `json:"vulnerabilitySeveritiesCount"`
	WebUrl                                       *string                                           `json:"webUrl"`
	WikiEnabled                                  *bool                                             `json:"wikiEnabled"`
	WorkItemTypes                                *WorkItemTypeConnection                           `json:"workItemTypes"`
	WorkItems                                    *WorkItemConnection                               `json:"workItems"`
}

type ProjectCiCdSetting struct {
	InboundJobTokenScopeEnabled *bool    `json:"inboundJobTokenScopeEnabled"`
	JobTokenScopeEnabled        *bool    `json:"jobTokenScopeEnabled"`
	KeepLatestArtifact          *bool    `json:"keepLatestArtifact"`
	MergePipelinesEnabled       *bool    `json:"mergePipelinesEnabled"`
	MergeTrainsEnabled          *bool    `json:"mergeTrainsEnabled"`
	Project                     *Project `json:"project"`
}

type ProjectCiCdSettingsUpdateInput struct {
	ClientMutationId            *string `json:"clientMutationId"`
	FullPath                    string  `json:"fullPath"`
	InboundJobTokenScopeEnabled *bool   `json:"inboundJobTokenScopeEnabled"`
	JobTokenScopeEnabled        *bool   `json:"jobTokenScopeEnabled"`
	KeepLatestArtifact          *bool   `json:"keepLatestArtifact"`
	MergePipelinesEnabled       *bool   `json:"mergePipelinesEnabled"`
	MergeTrainsEnabled          *bool   `json:"mergeTrainsEnabled"`
}

type ProjectCiCdSettingsUpdatePayload struct {
	CiCdSettings     ProjectCiCdSetting `json:"ciCdSettings"`
	ClientMutationId *string            `json:"clientMutationId"`
	Errors           []string           `json:"errors"`
}

type ProjectConnection struct {
	Count    int64          `json:"count"`
	Edges    []*ProjectEdge `json:"edges"`
	Nodes    []*Project     `json:"nodes"`
	PageInfo PageInfo       `json:"pageInfo"`
}

type ProjectConversations struct {
	CiConfigMessages *AiMessageTypeConnection `json:"ciConfigMessages"`
}

type ProjectDataTransfer struct {
	EgressNodes *EgressNodeConnection `json:"egressNodes"`
	TotalEgress *BigInt               `json:"totalEgress"`
}

type ProjectEdge struct {
	Cursor string   `json:"cursor"`
	Node   *Project `json:"node"`
}

type ProjectInitializeProductAnalyticsInput struct {
	ClientMutationId *string `json:"clientMutationId"`
	ProjectPath      string  `json:"projectPath"`
}

type ProjectInitializeProductAnalyticsPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	Project          *Project `json:"project"`
}

type ProjectMember struct {
	AccessLevel             *AccessLevel                 `json:"accessLevel"`
	CreatedAt               *Time                        `json:"createdAt"`
	CreatedBy               *UserCore                    `json:"createdBy"`
	ExpiresAt               *Time                        `json:"expiresAt"`
	Id                      string                       `json:"id"`
	MergeRequestInteraction *UserMergeRequestInteraction `json:"mergeRequestInteraction"`
	Project                 *Project                     `json:"project"`
	UpdatedAt               *Time                        `json:"updatedAt"`
	User                    *UserCore                    `json:"user"`
	UserPermissions         ProjectPermissions           `json:"userPermissions"`
}

type ProjectMemberBulkUpdateInput struct {
	AccessLevel      EnumMemberAccessLevel `json:"accessLevel"`
	ClientMutationId *string               `json:"clientMutationId"`
	ExpiresAt        *Time                 `json:"expiresAt"`
	ProjectId        ProjectID             `json:"projectId"`
	UserIds          []UserID              `json:"userIds"`
}

type ProjectMemberBulkUpdatePayload struct {
	ClientMutationId *string         `json:"clientMutationId"`
	Errors           []string        `json:"errors"`
	ProjectMembers   []ProjectMember `json:"projectMembers"`
}

type ProjectMemberConnection struct {
	Edges    []*ProjectMemberEdge `json:"edges"`
	Nodes    []*ProjectMember     `json:"nodes"`
	PageInfo PageInfo             `json:"pageInfo"`
}

type ProjectMemberEdge struct {
	Cursor string         `json:"cursor"`
	Node   *ProjectMember `json:"node"`
}

type ProjectPermissions struct {
	AdminOperations             bool `json:"adminOperations"`
	AdminPathLocks              bool `json:"adminPathLocks"`
	AdminProject                bool `json:"adminProject"`
	AdminRemoteMirror           bool `json:"adminRemoteMirror"`
	AdminWiki                   bool `json:"adminWiki"`
	ArchiveProject              bool `json:"archiveProject"`
	ChangeNamespace             bool `json:"changeNamespace"`
	ChangeVisibilityLevel       bool `json:"changeVisibilityLevel"`
	CreateDeployment            bool `json:"createDeployment"`
	CreateDesign                bool `json:"createDesign"`
	CreateIssue                 bool `json:"createIssue"`
	CreateLabel                 bool `json:"createLabel"`
	CreateMergeRequestFrom      bool `json:"createMergeRequestFrom"`
	CreateMergeRequestIn        bool `json:"createMergeRequestIn"`
	CreatePages                 bool `json:"createPages"`
	CreatePipeline              bool `json:"createPipeline"`
	CreatePipelineSchedule      bool `json:"createPipelineSchedule"`
	CreateSnippet               bool `json:"createSnippet"`
	CreateWiki                  bool `json:"createWiki"`
	DestroyDesign               bool `json:"destroyDesign"`
	DestroyPages                bool `json:"destroyPages"`
	DestroyWiki                 bool `json:"destroyWiki"`
	DownloadCode                bool `json:"downloadCode"`
	DownloadWikiCode            bool `json:"downloadWikiCode"`
	ForkProject                 bool `json:"forkProject"`
	PushCode                    bool `json:"pushCode"`
	PushToDeleteProtectedBranch bool `json:"pushToDeleteProtectedBranch"`
	ReadCommitStatus            bool `json:"readCommitStatus"`
	ReadCycleAnalytics          bool `json:"readCycleAnalytics"`
	ReadDesign                  bool `json:"readDesign"`
	ReadEnvironment             bool `json:"readEnvironment"`
	ReadMergeRequest            bool `json:"readMergeRequest"`
	ReadPagesContent            bool `json:"readPagesContent"`
	ReadProject                 bool `json:"readProject"`
	ReadProjectMember           bool `json:"readProjectMember"`
	ReadWiki                    bool `json:"readWiki"`
	RemoveForkProject           bool `json:"removeForkProject"`
	RemovePages                 bool `json:"removePages"`
	RemoveProject               bool `json:"removeProject"`
	RenameProject               bool `json:"renameProject"`
	RequestAccess               bool `json:"requestAccess"`
	UpdatePages                 bool `json:"updatePages"`
	UpdateWiki                  bool `json:"updateWiki"`
	UploadFile                  bool `json:"uploadFile"`
}

type ProjectRepositoryRegistry struct {
	CreatedAt              *Time                      `json:"createdAt"`
	Id                     string                     `json:"id"`
	LastSyncFailure        *string                    `json:"lastSyncFailure"`
	LastSyncedAt           *Time                      `json:"lastSyncedAt"`
	ProjectId              string                     `json:"projectId"`
	RetryAt                *Time                      `json:"retryAt"`
	RetryCount             *int64                     `json:"retryCount"`
	State                  *EnumRegistryState         `json:"state"`
	VerificationChecksum   *string                    `json:"verificationChecksum"`
	VerificationFailure    *string                    `json:"verificationFailure"`
	VerificationRetryAt    *Time                      `json:"verificationRetryAt"`
	VerificationRetryCount *int64                     `json:"verificationRetryCount"`
	VerificationStartedAt  *Time                      `json:"verificationStartedAt"`
	VerificationState      *EnumVerificationStateEnum `json:"verificationState"`
	VerifiedAt             *Time                      `json:"verifiedAt"`
}

type ProjectRepositoryRegistryConnection struct {
	Edges    []*ProjectRepositoryRegistryEdge `json:"edges"`
	Nodes    []*ProjectRepositoryRegistry     `json:"nodes"`
	PageInfo PageInfo                         `json:"pageInfo"`
}

type ProjectRepositoryRegistryEdge struct {
	Cursor string                     `json:"cursor"`
	Node   *ProjectRepositoryRegistry `json:"node"`
}

type ProjectSecurityPolicySource struct {
	Project *Project `json:"project"`
}

type ProjectSecurityTraining struct {
	Description *string  `json:"description"`
	Id          GlobalID `json:"id"`
	IsEnabled   bool     `json:"isEnabled"`
	IsPrimary   bool     `json:"isPrimary"`
	LogoUrl     *string  `json:"logoUrl"`
	Name        string   `json:"name"`
	Url         string   `json:"url"`
}

type ProjectSetComplianceFrameworkInput struct {
	ClientMutationId      *string                          `json:"clientMutationId"`
	ComplianceFrameworkId *ComplianceManagementFrameworkID `json:"complianceFrameworkId"`
	ProjectId             ProjectID                        `json:"projectId"`
}

type ProjectSetComplianceFrameworkPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	Project          *Project `json:"project"`
}

type ProjectSetLockedInput struct {
	ClientMutationId *string `json:"clientMutationId"`
	FilePath         string  `json:"filePath"`
	Lock             bool    `json:"lock"`
	ProjectPath      string  `json:"projectPath"`
}

type ProjectSetLockedPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	Project          *Project `json:"project"`
}

type ProjectStatistics struct {
	BuildArtifactsSize      float64  `json:"buildArtifactsSize"`
	CommitCount             float64  `json:"commitCount"`
	ContainerRegistrySize   *float64 `json:"containerRegistrySize"`
	CostFactoredStorageSize float64  `json:"costFactoredStorageSize"`
	LfsObjectsSize          float64  `json:"lfsObjectsSize"`
	PackagesSize            float64  `json:"packagesSize"`
	PipelineArtifactsSize   *float64 `json:"pipelineArtifactsSize"`
	RepositorySize          float64  `json:"repositorySize"`
	SnippetsSize            *float64 `json:"snippetsSize"`
	StorageSize             float64  `json:"storageSize"`
	UploadsSize             *float64 `json:"uploadsSize"`
	WikiSize                *float64 `json:"wikiSize"`
}

type ProjectStatisticsRedirect struct {
	BuildArtifacts    string `json:"buildArtifacts"`
	ContainerRegistry string `json:"containerRegistry"`
	Packages          string `json:"packages"`
	Repository        string `json:"repository"`
	Snippets          string `json:"snippets"`
	Wiki              string `json:"wiki"`
}

type ProjectSyncForkInput struct {
	ClientMutationId *string `json:"clientMutationId"`
	ProjectPath      string  `json:"projectPath"`
	TargetBranch     string  `json:"targetBranch"`
}

type ProjectSyncForkPayload struct {
	ClientMutationId *string      `json:"clientMutationId"`
	Details          *ForkDetails `json:"details"`
	Errors           []string     `json:"errors"`
}

type ProjectValueStreamAnalyticsFlowMetrics struct {
	CycleTime            *ValueStreamAnalyticsMetric `json:"cycleTime"`
	DeploymentCount      *ValueStreamAnalyticsMetric `json:"deploymentCount"`
	IssueCount           *ValueStreamAnalyticsMetric `json:"issueCount"`
	IssuesCompletedCount *ValueStreamAnalyticsMetric `json:"issuesCompletedCount"`
	LeadTime             *ValueStreamAnalyticsMetric `json:"leadTime"`
}

type ProjectWikiRepositoryRegistry struct {
	CreatedAt               *Time                      `json:"createdAt"`
	Id                      string                     `json:"id"`
	LastSyncFailure         *string                    `json:"lastSyncFailure"`
	LastSyncedAt            *Time                      `json:"lastSyncedAt"`
	ProjectWikiRepositoryId string                     `json:"projectWikiRepositoryId"`
	RetryAt                 *Time                      `json:"retryAt"`
	RetryCount              *int64                     `json:"retryCount"`
	State                   *EnumRegistryState         `json:"state"`
	VerificationChecksum    *string                    `json:"verificationChecksum"`
	VerificationFailure     *string                    `json:"verificationFailure"`
	VerificationRetryAt     *Time                      `json:"verificationRetryAt"`
	VerificationRetryCount  *int64                     `json:"verificationRetryCount"`
	VerificationStartedAt   *Time                      `json:"verificationStartedAt"`
	VerificationState       *EnumVerificationStateEnum `json:"verificationState"`
	VerifiedAt              *Time                      `json:"verifiedAt"`
}

type ProjectWikiRepositoryRegistryConnection struct {
	Edges    []*ProjectWikiRepositoryRegistryEdge `json:"edges"`
	Nodes    []*ProjectWikiRepositoryRegistry     `json:"nodes"`
	PageInfo PageInfo                             `json:"pageInfo"`
}

type ProjectWikiRepositoryRegistryEdge struct {
	Cursor string                         `json:"cursor"`
	Node   *ProjectWikiRepositoryRegistry `json:"node"`
}

type PrometheusAlert struct {
	HumanizedText string `json:"humanizedText"`
	Id            string `json:"id"`
}

type PrometheusIntegrationCreateInput struct {
	Active           bool    `json:"active"`
	ApiUrl           *string `json:"apiUrl"`
	ClientMutationId *string `json:"clientMutationId"`
	ProjectPath      string  `json:"projectPath"`
}

type PrometheusIntegrationCreatePayload struct {
	ClientMutationId *string                               `json:"clientMutationId"`
	Errors           []string                              `json:"errors"`
	Integration      *AlertManagementPrometheusIntegration `json:"integration"`
}

type PrometheusIntegrationResetTokenInput struct {
	ClientMutationId *string                  `json:"clientMutationId"`
	Id               IntegrationsPrometheusID `json:"id"`
}

type PrometheusIntegrationResetTokenPayload struct {
	ClientMutationId *string                               `json:"clientMutationId"`
	Errors           []string                              `json:"errors"`
	Integration      *AlertManagementPrometheusIntegration `json:"integration"`
}

type PrometheusIntegrationUpdateInput struct {
	Active           *bool                    `json:"active"`
	ApiUrl           *string                  `json:"apiUrl"`
	ClientMutationId *string                  `json:"clientMutationId"`
	Id               IntegrationsPrometheusID `json:"id"`
}

type PrometheusIntegrationUpdatePayload struct {
	ClientMutationId *string                               `json:"clientMutationId"`
	Errors           []string                              `json:"errors"`
	Integration      *AlertManagementPrometheusIntegration `json:"integration"`
}

type PromoteToEpicInput struct {
	ClientMutationId *string `json:"clientMutationId"`
	GroupPath        *string `json:"groupPath"`
	Iid              string  `json:"iid"`
	ProjectPath      string  `json:"projectPath"`
}

type PromoteToEpicPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Epic             *Epic    `json:"epic"`
	Errors           []string `json:"errors"`
	Issue            *Issue   `json:"issue"`
}

type ProtectedEnvironment struct {
	ApprovalRules         *ProtectedEnvironmentApprovalRuleConnection      `json:"approvalRules"`
	DeployAccessLevels    *ProtectedEnvironmentDeployAccessLevelConnection `json:"deployAccessLevels"`
	Group                 *Group                                           `json:"group"`
	Name                  *string                                          `json:"name"`
	Project               *Project                                         `json:"project"`
	RequiredApprovalCount *int64                                           `json:"requiredApprovalCount"`
}

type ProtectedEnvironmentApprovalRule struct {
	AccessLevel       *AccessLevel `json:"accessLevel"`
	Group             *Group       `json:"group"`
	RequiredApprovals *int64       `json:"requiredApprovals"`
	User              *UserCore    `json:"user"`
}

type ProtectedEnvironmentApprovalRuleConnection struct {
	Edges    []*ProtectedEnvironmentApprovalRuleEdge `json:"edges"`
	Nodes    []*ProtectedEnvironmentApprovalRule     `json:"nodes"`
	PageInfo PageInfo                                `json:"pageInfo"`
}

type ProtectedEnvironmentApprovalRuleEdge struct {
	Cursor string                            `json:"cursor"`
	Node   *ProtectedEnvironmentApprovalRule `json:"node"`
}

type ProtectedEnvironmentApprovalRuleForSummary struct {
	AccessLevel          *AccessLevel                         `json:"accessLevel"`
	Approvals            []DeploymentApproval                 `json:"approvals"`
	ApprovedCount        *int64                               `json:"approvedCount"`
	Group                *Group                               `json:"group"`
	PendingApprovalCount *int64                               `json:"pendingApprovalCount"`
	RequiredApprovals    *int64                               `json:"requiredApprovals"`
	Status               *EnumDeploymentApprovalSummaryStatus `json:"status"`
	User                 *UserCore                            `json:"user"`
}

type ProtectedEnvironmentConnection struct {
	Edges    []*ProtectedEnvironmentEdge `json:"edges"`
	Nodes    []*ProtectedEnvironment     `json:"nodes"`
	PageInfo PageInfo                    `json:"pageInfo"`
}

type ProtectedEnvironmentDeployAccessLevel struct {
	AccessLevel *AccessLevel `json:"accessLevel"`
	Group       *Group       `json:"group"`
	User        *UserCore    `json:"user"`
}

type ProtectedEnvironmentDeployAccessLevelConnection struct {
	Edges    []*ProtectedEnvironmentDeployAccessLevelEdge `json:"edges"`
	Nodes    []*ProtectedEnvironmentDeployAccessLevel     `json:"nodes"`
	PageInfo PageInfo                                     `json:"pageInfo"`
}

type ProtectedEnvironmentDeployAccessLevelEdge struct {
	Cursor string                                 `json:"cursor"`
	Node   *ProtectedEnvironmentDeployAccessLevel `json:"node"`
}

type ProtectedEnvironmentEdge struct {
	Cursor string                `json:"cursor"`
	Node   *ProtectedEnvironment `json:"node"`
}

type PushAccessLevel struct {
	AccessLevel            int64                 `json:"accessLevel"`
	AccessLevelDescription string                `json:"accessLevelDescription"`
	DeployKey              *AccessLevelDeployKey `json:"deployKey"`
	Group                  *AccessLevelGroup     `json:"group"`
	User                   *AccessLevelUser      `json:"user"`
}

type PushAccessLevelConnection struct {
	Edges    []*PushAccessLevelEdge `json:"edges"`
	Nodes    []*PushAccessLevel     `json:"nodes"`
	PageInfo PageInfo               `json:"pageInfo"`
}

type PushAccessLevelEdge struct {
	Cursor string           `json:"cursor"`
	Node   *PushAccessLevel `json:"node"`
}

type PushRules struct {
	RejectUnsignedCommits bool `json:"rejectUnsignedCommits"`
}

type PypiMetadata struct {
	Id             PackagesPypiMetadatumID `json:"id"`
	RequiredPython *string                 `json:"requiredPython"`
}

type QueryComplexity struct {
	Limit *int64 `json:"limit"`
	Score *int64 `json:"score"`
}

type RecentFailures struct {
	BaseBranch *string `json:"baseBranch"`
	Count      *int64  `json:"count"`
}

type Registrable struct {
	TypeName string `json:"__typeName"`
	CiSecureFileRegistry
	ContainerRepositoryRegistry
	DependencyProxyBlobRegistry
	DependencyProxyManifestRegistry
	DesignManagementRepositoryRegistry
	GroupWikiRepositoryRegistry
	JobArtifactRegistry
	LfsObjectRegistry
	MergeRequestDiffRegistry
	PackageFileRegistry
	PagesDeploymentRegistry
	PipelineArtifactRegistry
	ProjectWikiRepositoryRegistry
	SnippetRepositoryRegistry
	TerraformStateVersionRegistry
	UploadRegistry
}

type Release struct {
	Assets            *ReleaseAssets             `json:"assets"`
	Author            *UserCore                  `json:"author"`
	Commit            *Commit                    `json:"commit"`
	CreatedAt         *Time                      `json:"createdAt"`
	Description       *string                    `json:"description"`
	DescriptionHtml   *string                    `json:"descriptionHtml"`
	Evidences         *ReleaseEvidenceConnection `json:"evidences"`
	HistoricalRelease *bool                      `json:"historicalRelease"`
	Id                ReleaseID                  `json:"id"`
	Links             *ReleaseLinks              `json:"links"`
	Milestones        *MilestoneConnection       `json:"milestones"`
	Name              *string                    `json:"name"`
	ReleasedAt        *Time                      `json:"releasedAt"`
	TagName           *string                    `json:"tagName"`
	TagPath           *string                    `json:"tagPath"`
	UpcomingRelease   *bool                      `json:"upcomingRelease"`
}

type ReleaseAssetLink struct {
	DirectAssetPath *string                   `json:"directAssetPath"`
	DirectAssetUrl  *string                   `json:"directAssetUrl"`
	Id              string                    `json:"id"`
	LinkType        *EnumReleaseAssetLinkType `json:"linkType"`
	Name            *string                   `json:"name"`
	Url             *string                   `json:"url"`
}

type ReleaseAssetLinkConnection struct {
	Edges    []*ReleaseAssetLinkEdge `json:"edges"`
	Nodes    []*ReleaseAssetLink     `json:"nodes"`
	PageInfo PageInfo                `json:"pageInfo"`
}

type ReleaseAssetLinkCreateInput struct {
	ClientMutationId *string                   `json:"clientMutationId"`
	DirectAssetPath  *string                   `json:"directAssetPath"`
	LinkType         *EnumReleaseAssetLinkType `json:"linkType"`
	Name             string                    `json:"name"`
	ProjectPath      string                    `json:"projectPath"`
	TagName          string                    `json:"tagName"`
	Url              string                    `json:"url"`
}

type ReleaseAssetLinkCreatePayload struct {
	ClientMutationId *string           `json:"clientMutationId"`
	Errors           []string          `json:"errors"`
	Link             *ReleaseAssetLink `json:"link"`
}

type ReleaseAssetLinkDeleteInput struct {
	ClientMutationId *string        `json:"clientMutationId"`
	Id               ReleasesLinkID `json:"id"`
}

type ReleaseAssetLinkDeletePayload struct {
	ClientMutationId *string           `json:"clientMutationId"`
	Errors           []string          `json:"errors"`
	Link             *ReleaseAssetLink `json:"link"`
}

type ReleaseAssetLinkEdge struct {
	Cursor string            `json:"cursor"`
	Node   *ReleaseAssetLink `json:"node"`
}

type ReleaseAssetLinkInput struct {
	DirectAssetPath *string                   `json:"directAssetPath"`
	LinkType        *EnumReleaseAssetLinkType `json:"linkType"`
	Name            string                    `json:"name"`
	Url             string                    `json:"url"`
}

type ReleaseAssetLinkUpdateInput struct {
	ClientMutationId *string                   `json:"clientMutationId"`
	DirectAssetPath  *string                   `json:"directAssetPath"`
	Id               ReleasesLinkID            `json:"id"`
	LinkType         *EnumReleaseAssetLinkType `json:"linkType"`
	Name             *string                   `json:"name"`
	Url              *string                   `json:"url"`
}

type ReleaseAssetLinkUpdatePayload struct {
	ClientMutationId *string           `json:"clientMutationId"`
	Errors           []string          `json:"errors"`
	Link             *ReleaseAssetLink `json:"link"`
}

type ReleaseAssets struct {
	Count   *int64                      `json:"count"`
	Links   *ReleaseAssetLinkConnection `json:"links"`
	Sources *ReleaseSourceConnection    `json:"sources"`
}

type ReleaseAssetsInput struct {
	Links []ReleaseAssetLinkInput `json:"links"`
}

type ReleaseConnection struct {
	Count    int64          `json:"count"`
	Edges    []*ReleaseEdge `json:"edges"`
	Nodes    []*Release     `json:"nodes"`
	PageInfo PageInfo       `json:"pageInfo"`
}

type ReleaseCreateInput struct {
	Assets           *ReleaseAssetsInput `json:"assets"`
	ClientMutationId *string             `json:"clientMutationId"`
	Description      *string             `json:"description"`
	Milestones       []string            `json:"milestones"`
	Name             *string             `json:"name"`
	ProjectPath      string              `json:"projectPath"`
	Ref              *string             `json:"ref"`
	ReleasedAt       *Time               `json:"releasedAt"`
	TagMessage       *string             `json:"tagMessage"`
	TagName          string              `json:"tagName"`
}

type ReleaseCreatePayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	Release          *Release `json:"release"`
}

type ReleaseDeleteInput struct {
	ClientMutationId *string `json:"clientMutationId"`
	ProjectPath      string  `json:"projectPath"`
	TagName          string  `json:"tagName"`
}

type ReleaseDeletePayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	Release          *Release `json:"release"`
}

type ReleaseEdge struct {
	Cursor string   `json:"cursor"`
	Node   *Release `json:"node"`
}

type ReleaseEvidence struct {
	CollectedAt *Time   `json:"collectedAt"`
	Filepath    *string `json:"filepath"`
	Id          string  `json:"id"`
	Sha         *string `json:"sha"`
}

type ReleaseEvidenceConnection struct {
	Edges    []*ReleaseEvidenceEdge `json:"edges"`
	Nodes    []*ReleaseEvidence     `json:"nodes"`
	PageInfo PageInfo               `json:"pageInfo"`
}

type ReleaseEvidenceEdge struct {
	Cursor string           `json:"cursor"`
	Node   *ReleaseEvidence `json:"node"`
}

type ReleaseLinks struct {
	ClosedIssuesUrl        *string `json:"closedIssuesUrl"`
	ClosedMergeRequestsUrl *string `json:"closedMergeRequestsUrl"`
	EditUrl                *string `json:"editUrl"`
	MergedMergeRequestsUrl *string `json:"mergedMergeRequestsUrl"`
	OpenedIssuesUrl        *string `json:"openedIssuesUrl"`
	OpenedMergeRequestsUrl *string `json:"openedMergeRequestsUrl"`
	SelfUrl                *string `json:"selfUrl"`
}

type ReleaseSource struct {
	Format *string `json:"format"`
	Url    *string `json:"url"`
}

type ReleaseSourceConnection struct {
	Edges    []*ReleaseSourceEdge `json:"edges"`
	Nodes    []*ReleaseSource     `json:"nodes"`
	PageInfo PageInfo             `json:"pageInfo"`
}

type ReleaseSourceEdge struct {
	Cursor string         `json:"cursor"`
	Node   *ReleaseSource `json:"node"`
}

type ReleaseUpdateInput struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Description      *string  `json:"description"`
	Milestones       []string `json:"milestones"`
	Name             *string  `json:"name"`
	ProjectPath      string   `json:"projectPath"`
	ReleasedAt       *Time    `json:"releasedAt"`
	TagName          string   `json:"tagName"`
}

type ReleaseUpdatePayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	Release          *Release `json:"release"`
}

type RemoveProjectFromSecurityDashboardInput struct {
	ClientMutationId *string   `json:"clientMutationId"`
	Id               ProjectID `json:"id"`
}

type RemoveProjectFromSecurityDashboardPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
}

type RepositionImageDiffNoteInput struct {
	ClientMutationId *string                      `json:"clientMutationId"`
	Id               DiffNoteID                   `json:"id"`
	Position         UpdateDiffImagePositionInput `json:"position"`
}

type RepositionImageDiffNotePayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	Note             *Note    `json:"note"`
}

type Repository struct {
	Blobs                 *RepositoryBlobConnection      `json:"blobs"`
	BranchNames           []string                       `json:"branchNames"`
	CodeOwnersPath        *string                        `json:"codeOwnersPath"`
	DiskPath              *string                        `json:"diskPath"`
	Empty                 bool                           `json:"empty"`
	Exists                bool                           `json:"exists"`
	PaginatedTree         *TreeConnection                `json:"paginatedTree"`
	RootRef               *string                        `json:"rootRef"`
	Tree                  *Tree                          `json:"tree"`
	ValidateCodeownerFile *RepositoryCodeownerValidation `json:"validateCodeownerFile"`
}

type RepositoryBlob struct {
	Archived                          *bool       `json:"archived"`
	BlamePath                         *string     `json:"blamePath"`
	CanCurrentUserPushToBranch        *bool       `json:"canCurrentUserPushToBranch"`
	CanModifyBlob                     *bool       `json:"canModifyBlob"`
	CodeNavigationPath                *string     `json:"codeNavigationPath"`
	CodeOwners                        []UserCore  `json:"codeOwners"`
	EditBlobPath                      *string     `json:"editBlobPath"`
	EnvironmentExternalUrlForRouteMap *string     `json:"environmentExternalUrlForRouteMap"`
	EnvironmentFormattedExternalUrl   *string     `json:"environmentFormattedExternalUrl"`
	ExternalStorage                   *string     `json:"externalStorage"`
	ExternalStorageUrl                *string     `json:"externalStorageUrl"`
	FileType                          *string     `json:"fileType"`
	FindFilePath                      *string     `json:"findFilePath"`
	ForkAndEditPath                   *string     `json:"forkAndEditPath"`
	ForkAndViewPath                   *string     `json:"forkAndViewPath"`
	GitpodBlobUrl                     *string     `json:"gitpodBlobUrl"`
	HistoryPath                       *string     `json:"historyPath"`
	Id                                string      `json:"id"`
	IdeEditPath                       *string     `json:"ideEditPath"`
	IdeForkAndEditPath                *string     `json:"ideForkAndEditPath"`
	Language                          *string     `json:"language"`
	LfsOid                            *string     `json:"lfsOid"`
	Mode                              *string     `json:"mode"`
	Name                              *string     `json:"name"`
	Oid                               string      `json:"oid"`
	Path                              string      `json:"path"`
	PermalinkPath                     *string     `json:"permalinkPath"`
	PipelineEditorPath                *string     `json:"pipelineEditorPath"`
	PlainData                         *string     `json:"plainData"`
	ProjectBlobPathRoot               *string     `json:"projectBlobPathRoot"`
	RawBlob                           *string     `json:"rawBlob"`
	RawPath                           *string     `json:"rawPath"`
	RawSize                           *BigInt     `json:"rawSize"`
	RawTextBlob                       *string     `json:"rawTextBlob"`
	ReplacePath                       *string     `json:"replacePath"`
	RichViewer                        *BlobViewer `json:"richViewer"`
	SimpleViewer                      BlobViewer  `json:"simpleViewer"`
	Size                              *BigInt     `json:"size"`
	StoredExternally                  *bool       `json:"storedExternally"`
	WebPath                           *string     `json:"webPath"`
}

type RepositoryBlobConnection struct {
	Edges    []*RepositoryBlobEdge `json:"edges"`
	Nodes    []*RepositoryBlob     `json:"nodes"`
	PageInfo PageInfo              `json:"pageInfo"`
}

type RepositoryBlobEdge struct {
	Cursor string          `json:"cursor"`
	Node   *RepositoryBlob `json:"node"`
}

type RepositoryCodeownerError struct {
	Code  string  `json:"code"`
	Lines []int64 `json:"lines"`
}

type RepositoryCodeownerValidation struct {
	Total            int64                      `json:"total"`
	ValidationErrors []RepositoryCodeownerError `json:"validationErrors"`
}

type RepositoryLanguage struct {
	Color *Color   `json:"color"`
	Name  string   `json:"name"`
	Share *float64 `json:"share"`
}

type Requirement struct {
	Author                        UserCore               `json:"author"`
	CreatedAt                     Time                   `json:"createdAt"`
	Description                   *string                `json:"description"`
	DescriptionHtml               *string                `json:"descriptionHtml"`
	Id                            string                 `json:"id"`
	Iid                           string                 `json:"iid"`
	LastTestReportManuallyCreated *bool                  `json:"lastTestReportManuallyCreated"`
	LastTestReportState           *EnumTestReportState   `json:"lastTestReportState"`
	Project                       Project                `json:"project"`
	State                         EnumRequirementState   `json:"state"`
	TestReports                   *TestReportConnection  `json:"testReports"`
	Title                         *string                `json:"title"`
	TitleHtml                     *string                `json:"titleHtml"`
	UpdatedAt                     Time                   `json:"updatedAt"`
	UserPermissions               RequirementPermissions `json:"userPermissions"`
	WorkItemIid                   string                 `json:"workItemIid"`
}

type RequirementConnection struct {
	Edges    []*RequirementEdge `json:"edges"`
	Nodes    []*Requirement     `json:"nodes"`
	PageInfo PageInfo           `json:"pageInfo"`
}

type RequirementEdge struct {
	Cursor string       `json:"cursor"`
	Node   *Requirement `json:"node"`
}

type RequirementLegacyFilterInput struct {
	LegacyIids []string `json:"legacyIids"`
}

type RequirementPermissions struct {
	AdminRequirement   bool `json:"adminRequirement"`
	CreateRequirement  bool `json:"createRequirement"`
	DestroyRequirement bool `json:"destroyRequirement"`
	ReadRequirement    bool `json:"readRequirement"`
	UpdateRequirement  bool `json:"updateRequirement"`
}

type RequirementStatesCount struct {
	Archived *int64 `json:"archived"`
	Opened   *int64 `json:"opened"`
}

type RootStorageStatistics struct {
	BuildArtifactsSize               float64 `json:"buildArtifactsSize"`
	ContainerRegistrySize            float64 `json:"containerRegistrySize"`
	ContainerRegistrySizeIsEstimated bool    `json:"containerRegistrySizeIsEstimated"`
	CostFactoredStorageSize          float64 `json:"costFactoredStorageSize"`
	DependencyProxySize              float64 `json:"dependencyProxySize"`
	LfsObjectsSize                   float64 `json:"lfsObjectsSize"`
	PackagesSize                     float64 `json:"packagesSize"`
	PipelineArtifactsSize            float64 `json:"pipelineArtifactsSize"`
	RegistrySizeEstimated            bool    `json:"registrySizeEstimated"`
	RepositorySize                   float64 `json:"repositorySize"`
	SnippetsSize                     float64 `json:"snippetsSize"`
	StorageSize                      float64 `json:"storageSize"`
	UploadsSize                      float64 `json:"uploadsSize"`
	WikiSize                         float64 `json:"wikiSize"`
}

type RunnerArchitecture struct {
	DownloadLocation string `json:"downloadLocation"`
	Name             string `json:"name"`
}

type RunnerArchitectureConnection struct {
	Edges    []*RunnerArchitectureEdge `json:"edges"`
	Nodes    []*RunnerArchitecture     `json:"nodes"`
	PageInfo PageInfo                  `json:"pageInfo"`
}

type RunnerArchitectureEdge struct {
	Cursor string              `json:"cursor"`
	Node   *RunnerArchitecture `json:"node"`
}

type RunnerCreateInput struct {
	AccessLevel      *EnumCiRunnerAccessLevel `json:"accessLevel"`
	ClientMutationId *string                  `json:"clientMutationId"`
	Description      *string                  `json:"description"`
	GroupId          *GroupID                 `json:"groupId"`
	Locked           *bool                    `json:"locked"`
	MaintenanceNote  *string                  `json:"maintenanceNote"`
	MaximumTimeout   *int64                   `json:"maximumTimeout"`
	Paused           *bool                    `json:"paused"`
	ProjectId        *ProjectID               `json:"projectId"`
	RunUntagged      *bool                    `json:"runUntagged"`
	RunnerType       EnumCiRunnerType         `json:"runnerType"`
	TagList          []string                 `json:"tagList"`
}

type RunnerCreatePayload struct {
	ClientMutationId *string   `json:"clientMutationId"`
	Errors           []string  `json:"errors"`
	Runner           *CiRunner `json:"runner"`
}

type RunnerDeleteInput struct {
	ClientMutationId *string    `json:"clientMutationId"`
	Id               CiRunnerID `json:"id"`
}

type RunnerDeletePayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
}

type RunnerPermissions struct {
	AssignRunner bool `json:"assignRunner"`
	DeleteRunner bool `json:"deleteRunner"`
	ReadRunner   bool `json:"readRunner"`
	UpdateRunner bool `json:"updateRunner"`
}

type RunnerPlatform struct {
	Architectures     *RunnerArchitectureConnection `json:"architectures"`
	HumanReadableName string                        `json:"humanReadableName"`
	Name              string                        `json:"name"`
}

type RunnerPlatformConnection struct {
	Edges    []*RunnerPlatformEdge `json:"edges"`
	Nodes    []*RunnerPlatform     `json:"nodes"`
	PageInfo PageInfo              `json:"pageInfo"`
}

type RunnerPlatformEdge struct {
	Cursor string          `json:"cursor"`
	Node   *RunnerPlatform `json:"node"`
}

type RunnerSetup struct {
	InstallInstructions  string  `json:"installInstructions"`
	RegisterInstructions *string `json:"registerInstructions"`
}

type RunnerUpdateInput struct {
	AccessLevel                      *EnumCiRunnerAccessLevel `json:"accessLevel"`
	Active                           *bool                    `json:"active"`
	AssociatedProjects               []ProjectID              `json:"associatedProjects"`
	ClientMutationId                 *string                  `json:"clientMutationId"`
	Description                      *string                  `json:"description"`
	Id                               CiRunnerID               `json:"id"`
	Locked                           *bool                    `json:"locked"`
	MaintenanceNote                  *string                  `json:"maintenanceNote"`
	MaximumTimeout                   *int64                   `json:"maximumTimeout"`
	Paused                           *bool                    `json:"paused"`
	PrivateProjectsMinutesCostFactor *float64                 `json:"privateProjectsMinutesCostFactor"`
	PublicProjectsMinutesCostFactor  *float64                 `json:"publicProjectsMinutesCostFactor"`
	RunUntagged                      *bool                    `json:"runUntagged"`
	TagList                          []string                 `json:"tagList"`
}

type RunnerUpdatePayload struct {
	ClientMutationId *string   `json:"clientMutationId"`
	Errors           []string  `json:"errors"`
	Runner           *CiRunner `json:"runner"`
}

type RunnersRegistrationTokenResetInput struct {
	ClientMutationId *string          `json:"clientMutationId"`
	Id               *string          `json:"id"`
	Type             EnumCiRunnerType `json:"type"`
}

type RunnersRegistrationTokenResetPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	Token            *string  `json:"token"`
}

type SastCiConfiguration struct {
	Analyzers *SastCiConfigurationAnalyzersEntityConnection `json:"analyzers"`
	Global    *SastCiConfigurationEntityConnection          `json:"global"`
	Pipeline  *SastCiConfigurationEntityConnection          `json:"pipeline"`
}

type SastCiConfigurationAnalyzersEntity struct {
	Description *string                              `json:"description"`
	Enabled     *bool                                `json:"enabled"`
	Label       *string                              `json:"label"`
	Name        *string                              `json:"name"`
	Variables   *SastCiConfigurationEntityConnection `json:"variables"`
}

type SastCiConfigurationAnalyzersEntityConnection struct {
	Edges    []*SastCiConfigurationAnalyzersEntityEdge `json:"edges"`
	Nodes    []*SastCiConfigurationAnalyzersEntity     `json:"nodes"`
	PageInfo PageInfo                                  `json:"pageInfo"`
}

type SastCiConfigurationAnalyzersEntityEdge struct {
	Cursor string                              `json:"cursor"`
	Node   *SastCiConfigurationAnalyzersEntity `json:"node"`
}

type SastCiConfigurationAnalyzersEntityInput struct {
	Enabled   bool                             `json:"enabled"`
	Name      string                           `json:"name"`
	Variables []SastCiConfigurationEntityInput `json:"variables"`
}

type SastCiConfigurationEntity struct {
	DefaultValue *string                                     `json:"defaultValue"`
	Description  *string                                     `json:"description"`
	Field        *string                                     `json:"field"`
	Label        *string                                     `json:"label"`
	Options      *SastCiConfigurationOptionsEntityConnection `json:"options"`
	Size         *EnumSastUiComponentSize                    `json:"size"`
	Type         *string                                     `json:"type"`
	Value        *string                                     `json:"value"`
}

type SastCiConfigurationEntityConnection struct {
	Edges    []*SastCiConfigurationEntityEdge `json:"edges"`
	Nodes    []*SastCiConfigurationEntity     `json:"nodes"`
	PageInfo PageInfo                         `json:"pageInfo"`
}

type SastCiConfigurationEntityEdge struct {
	Cursor string                     `json:"cursor"`
	Node   *SastCiConfigurationEntity `json:"node"`
}

type SastCiConfigurationEntityInput struct {
	DefaultValue string `json:"defaultValue"`
	Field        string `json:"field"`
	Value        string `json:"value"`
}

type SastCiConfigurationInput struct {
	Analyzers []SastCiConfigurationAnalyzersEntityInput `json:"analyzers"`
	Global    []SastCiConfigurationEntityInput          `json:"global"`
	Pipeline  []SastCiConfigurationEntityInput          `json:"pipeline"`
}

type SastCiConfigurationOptionsEntity struct {
	Label *string `json:"label"`
	Value *string `json:"value"`
}

type SastCiConfigurationOptionsEntityConnection struct {
	Edges    []*SastCiConfigurationOptionsEntityEdge `json:"edges"`
	Nodes    []*SastCiConfigurationOptionsEntity     `json:"nodes"`
	PageInfo PageInfo                                `json:"pageInfo"`
}

type SastCiConfigurationOptionsEntityEdge struct {
	Cursor string                            `json:"cursor"`
	Node   *SastCiConfigurationOptionsEntity `json:"node"`
}

type SavedReply struct {
	Content string            `json:"content"`
	Id      UsersSavedReplyID `json:"id"`
	Name    string            `json:"name"`
}

type SavedReplyConnection struct {
	Count    int64             `json:"count"`
	Edges    []*SavedReplyEdge `json:"edges"`
	Nodes    []*SavedReply     `json:"nodes"`
	PageInfo PageInfo          `json:"pageInfo"`
}

type SavedReplyCreateInput struct {
	ClientMutationId *string `json:"clientMutationId"`
	Content          string  `json:"content"`
	Name             string  `json:"name"`
}

type SavedReplyCreatePayload struct {
	ClientMutationId *string     `json:"clientMutationId"`
	Errors           []string    `json:"errors"`
	SavedReply       *SavedReply `json:"savedReply"`
}

type SavedReplyDestroyInput struct {
	ClientMutationId *string           `json:"clientMutationId"`
	Id               UsersSavedReplyID `json:"id"`
}

type SavedReplyDestroyPayload struct {
	ClientMutationId *string     `json:"clientMutationId"`
	Errors           []string    `json:"errors"`
	SavedReply       *SavedReply `json:"savedReply"`
}

type SavedReplyEdge struct {
	Cursor string      `json:"cursor"`
	Node   *SavedReply `json:"node"`
}

type SavedReplyUpdateInput struct {
	ClientMutationId *string           `json:"clientMutationId"`
	Content          string            `json:"content"`
	Id               UsersSavedReplyID `json:"id"`
	Name             string            `json:"name"`
}

type SavedReplyUpdatePayload struct {
	ClientMutationId *string     `json:"clientMutationId"`
	Errors           []string    `json:"errors"`
	SavedReply       *SavedReply `json:"savedReply"`
}

type Scan struct {
	Errors   []string       `json:"errors"`
	Name     string         `json:"name"`
	Status   EnumScanStatus `json:"status"`
	Warnings []string       `json:"warnings"`
}

type ScanConnection struct {
	Edges    []*ScanEdge `json:"edges"`
	Nodes    []*Scan     `json:"nodes"`
	PageInfo PageInfo    `json:"pageInfo"`
}

type ScanEdge struct {
	Cursor string `json:"cursor"`
	Node   *Scan  `json:"node"`
}

type ScanExecutionPolicy struct {
	Description string               `json:"description"`
	Enabled     bool                 `json:"enabled"`
	Name        string               `json:"name"`
	Source      SecurityPolicySource `json:"source"`
	UpdatedAt   Time                 `json:"updatedAt"`
	Yaml        string               `json:"yaml"`
}

type ScanExecutionPolicyCommitInput struct {
	ClientMutationId *string                   `json:"clientMutationId"`
	FullPath         *string                   `json:"fullPath"`
	Name             string                    `json:"name"`
	OperationMode    EnumMutationOperationMode `json:"operationMode"`
	PolicyYaml       string                    `json:"policyYaml"`
	ProjectPath      *string                   `json:"projectPath"`
}

type ScanExecutionPolicyCommitPayload struct {
	Branch           *string                         `json:"branch"`
	ClientMutationId *string                         `json:"clientMutationId"`
	Errors           []string                        `json:"errors"`
	ValidationErrors []SecurityPolicyValidationError `json:"validationErrors"`
}

type ScanExecutionPolicyConnection struct {
	Edges    []*ScanExecutionPolicyEdge `json:"edges"`
	Nodes    []*ScanExecutionPolicy     `json:"nodes"`
	PageInfo PageInfo                   `json:"pageInfo"`
}

type ScanExecutionPolicyEdge struct {
	Cursor string               `json:"cursor"`
	Node   *ScanExecutionPolicy `json:"node"`
}

type ScanResultPolicy struct {
	Description    string                      `json:"description"`
	Enabled        bool                        `json:"enabled"`
	GroupApprovers []Group                     `json:"groupApprovers"`
	Name           string                      `json:"name"`
	RoleApprovers  []EnumMemberAccessLevelName `json:"roleApprovers"`
	Source         SecurityPolicySource        `json:"source"`
	UpdatedAt      Time                        `json:"updatedAt"`
	UserApprovers  []UserCore                  `json:"userApprovers"`
	Yaml           string                      `json:"yaml"`
}

type ScanResultPolicyConnection struct {
	Edges    []*ScanResultPolicyEdge `json:"edges"`
	Nodes    []*ScanResultPolicy     `json:"nodes"`
	PageInfo PageInfo                `json:"pageInfo"`
}

type ScanResultPolicyEdge struct {
	Cursor string            `json:"cursor"`
	Node   *ScanResultPolicy `json:"node"`
}

type ScannedResource struct {
	RequestMethod *string `json:"requestMethod"`
	Url           *string `json:"url"`
}

type ScannedResourceConnection struct {
	Edges    []*ScannedResourceEdge `json:"edges"`
	Nodes    []*ScannedResource     `json:"nodes"`
	PageInfo PageInfo               `json:"pageInfo"`
}

type ScannedResourceEdge struct {
	Cursor string           `json:"cursor"`
	Node   *ScannedResource `json:"node"`
}

type SecurityFindingCreateIssueInput struct {
	ClientMutationId *string   `json:"clientMutationId"`
	Project          ProjectID `json:"project"`
	Uuid             string    `json:"uuid"`
}

type SecurityFindingCreateIssuePayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	Issue            *Issue   `json:"issue"`
}

type SecurityFindingCreateMergeRequestInput struct {
	ClientMutationId *string `json:"clientMutationId"`
	Uuid             string  `json:"uuid"`
}

type SecurityFindingCreateMergeRequestPayload struct {
	ClientMutationId *string       `json:"clientMutationId"`
	Errors           []string      `json:"errors"`
	MergeRequest     *MergeRequest `json:"mergeRequest"`
}

type SecurityFindingDismissInput struct {
	ClientMutationId *string                           `json:"clientMutationId"`
	Comment          *string                           `json:"comment"`
	DismissalReason  *EnumVulnerabilityDismissalReason `json:"dismissalReason"`
	Uuid             string                            `json:"uuid"`
}

type SecurityFindingDismissPayload struct {
	ClientMutationId *string                        `json:"clientMutationId"`
	Errors           []string                       `json:"errors"`
	SecurityFinding  *PipelineSecurityReportFinding `json:"securityFinding"`
	Uuid             *string                        `json:"uuid"`
}

type SecurityFindingRevertToDetectedInput struct {
	ClientMutationId *string `json:"clientMutationId"`
	Uuid             string  `json:"uuid"`
}

type SecurityFindingRevertToDetectedPayload struct {
	ClientMutationId *string                        `json:"clientMutationId"`
	Errors           []string                       `json:"errors"`
	SecurityFinding  *PipelineSecurityReportFinding `json:"securityFinding"`
}

type SecurityPolicyProjectAssignInput struct {
	ClientMutationId        *string   `json:"clientMutationId"`
	FullPath                *string   `json:"fullPath"`
	ProjectPath             *string   `json:"projectPath"`
	SecurityPolicyProjectId ProjectID `json:"securityPolicyProjectId"`
}

type SecurityPolicyProjectAssignPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
}

type SecurityPolicyProjectCreateInput struct {
	ClientMutationId *string `json:"clientMutationId"`
	FullPath         *string `json:"fullPath"`
	ProjectPath      *string `json:"projectPath"`
}

type SecurityPolicyProjectCreatePayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	Project          *Project `json:"project"`
}

type SecurityPolicyProjectUnassignInput struct {
	ClientMutationId *string `json:"clientMutationId"`
	FullPath         *string `json:"fullPath"`
	ProjectPath      *string `json:"projectPath"`
}

type SecurityPolicyProjectUnassignPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
}

type SecurityPolicySource struct {
	TypeName string `json:"__typeName"`
	GroupSecurityPolicySource
	ProjectSecurityPolicySource
}

type SecurityPolicyValidationError struct {
	Field   string  `json:"field"`
	Level   string  `json:"level"`
	Message string  `json:"message"`
	Title   *string `json:"title"`
}

type SecurityReportSummary struct {
	ApiFuzzing           *SecurityReportSummarySection `json:"apiFuzzing"`
	ClusterImageScanning *SecurityReportSummarySection `json:"clusterImageScanning"`
	ContainerScanning    *SecurityReportSummarySection `json:"containerScanning"`
	CoverageFuzzing      *SecurityReportSummarySection `json:"coverageFuzzing"`
	Dast                 *SecurityReportSummarySection `json:"dast"`
	DependencyScanning   *SecurityReportSummarySection `json:"dependencyScanning"`
	Generic              *SecurityReportSummarySection `json:"generic"`
	Sast                 *SecurityReportSummarySection `json:"sast"`
	SecretDetection      *SecurityReportSummarySection `json:"secretDetection"`
}

type SecurityReportSummarySection struct {
	ScannedResources        *ScannedResourceConnection `json:"scannedResources"`
	ScannedResourcesCount   *int64                     `json:"scannedResourcesCount"`
	ScannedResourcesCsvPath *string                    `json:"scannedResourcesCsvPath"`
	Scans                   ScanConnection             `json:"scans"`
	VulnerabilitiesCount    *int64                     `json:"vulnerabilitiesCount"`
}

type SecurityScanners struct {
	Available   []EnumSecurityScannerType `json:"available"`
	Enabled     []EnumSecurityScannerType `json:"enabled"`
	PipelineRun []EnumSecurityScannerType `json:"pipelineRun"`
}

type SecurityTrainingUpdateInput struct {
	ClientMutationId *string                    `json:"clientMutationId"`
	IsEnabled        bool                       `json:"isEnabled"`
	IsPrimary        *bool                      `json:"isPrimary"`
	ProjectPath      string                     `json:"projectPath"`
	ProviderId       SecurityTrainingProviderID `json:"providerId"`
}

type SecurityTrainingUpdatePayload struct {
	ClientMutationId *string                  `json:"clientMutationId"`
	Errors           []string                 `json:"errors"`
	Training         *ProjectSecurityTraining `json:"training"`
}

type SecurityTrainingUrl struct {
	Identifier *string                       `json:"identifier"`
	Name       *string                       `json:"name"`
	Status     *EnumTrainingUrlRequestStatus `json:"status"`
	Url        *string                       `json:"url"`
}

type SentryDetailedError struct {
	Count                    int64                  `json:"count"`
	Culprit                  string                 `json:"culprit"`
	ExternalBaseUrl          string                 `json:"externalBaseUrl"`
	ExternalUrl              string                 `json:"externalUrl"`
	FirstReleaseLastCommit   *string                `json:"firstReleaseLastCommit"`
	FirstReleaseShortVersion *string                `json:"firstReleaseShortVersion"`
	FirstReleaseVersion      *string                `json:"firstReleaseVersion"`
	FirstSeen                Time                   `json:"firstSeen"`
	Frequency                []SentryErrorFrequency `json:"frequency"`
	GitlabCommit             *string                `json:"gitlabCommit"`
	GitlabCommitPath         *string                `json:"gitlabCommitPath"`
	GitlabIssuePath          *string                `json:"gitlabIssuePath"`
	Id                       string                 `json:"id"`
	Integrated               *bool                  `json:"integrated"`
	LastReleaseLastCommit    *string                `json:"lastReleaseLastCommit"`
	LastReleaseShortVersion  *string                `json:"lastReleaseShortVersion"`
	LastReleaseVersion       *string                `json:"lastReleaseVersion"`
	LastSeen                 Time                   `json:"lastSeen"`
	Message                  *string                `json:"message"`
	SentryId                 string                 `json:"sentryId"`
	SentryProjectId          string                 `json:"sentryProjectId"`
	SentryProjectName        string                 `json:"sentryProjectName"`
	SentryProjectSlug        string                 `json:"sentryProjectSlug"`
	ShortId                  string                 `json:"shortId"`
	Status                   EnumSentryErrorStatus  `json:"status"`
	Tags                     SentryErrorTags        `json:"tags"`
	Title                    string                 `json:"title"`
	Type                     string                 `json:"type"`
	UserCount                int64                  `json:"userCount"`
}

type SentryError struct {
	Count             int64                  `json:"count"`
	Culprit           string                 `json:"culprit"`
	ExternalUrl       string                 `json:"externalUrl"`
	FirstSeen         Time                   `json:"firstSeen"`
	Frequency         []SentryErrorFrequency `json:"frequency"`
	Id                string                 `json:"id"`
	LastSeen          Time                   `json:"lastSeen"`
	Message           *string                `json:"message"`
	SentryId          string                 `json:"sentryId"`
	SentryProjectId   string                 `json:"sentryProjectId"`
	SentryProjectName string                 `json:"sentryProjectName"`
	SentryProjectSlug string                 `json:"sentryProjectSlug"`
	ShortId           string                 `json:"shortId"`
	Status            EnumSentryErrorStatus  `json:"status"`
	Title             string                 `json:"title"`
	Type              string                 `json:"type"`
	UserCount         int64                  `json:"userCount"`
}

type SentryErrorCollection struct {
	DetailedError   *SentryDetailedError   `json:"detailedError"`
	ErrorStackTrace *SentryErrorStackTrace `json:"errorStackTrace"`
	Errors          *SentryErrorConnection `json:"errors"`
	ExternalUrl     *string                `json:"externalUrl"`
}

type SentryErrorConnection struct {
	Edges    []*SentryErrorEdge `json:"edges"`
	Nodes    []*SentryError     `json:"nodes"`
	PageInfo PageInfo           `json:"pageInfo"`
}

type SentryErrorEdge struct {
	Cursor string       `json:"cursor"`
	Node   *SentryError `json:"node"`
}

type SentryErrorFrequency struct {
	Count int64 `json:"count"`
	Time  Time  `json:"time"`
}

type SentryErrorStackTrace struct {
	DateReceived      string                       `json:"dateReceived"`
	IssueId           string                       `json:"issueId"`
	StackTraceEntries []SentryErrorStackTraceEntry `json:"stackTraceEntries"`
}

type SentryErrorStackTraceContext struct {
	Code string `json:"code"`
	Line int64  `json:"line"`
}

type SentryErrorStackTraceEntry struct {
	Col          *string                        `json:"col"`
	FileName     *string                        `json:"fileName"`
	Function     *string                        `json:"function"`
	Line         *string                        `json:"line"`
	TraceContext []SentryErrorStackTraceContext `json:"traceContext"`
}

type SentryErrorTags struct {
	Level  *string `json:"level"`
	Logger *string `json:"logger"`
}

type ServiceConnection struct {
	Edges    []*ServiceEdge `json:"edges"`
	Nodes    []*Service     `json:"nodes"`
	PageInfo PageInfo       `json:"pageInfo"`
}

type ServiceEdge struct {
	Cursor string   `json:"cursor"`
	Node   *Service `json:"node"`
}

type Snippet struct {
	Author          *UserCore                `json:"author"`
	Blobs           *SnippetBlobConnection   `json:"blobs"`
	Commenters      UserCoreConnection       `json:"commenters"`
	CreatedAt       Time                     `json:"createdAt"`
	Description     *string                  `json:"description"`
	DescriptionHtml *string                  `json:"descriptionHtml"`
	Discussions     DiscussionConnection     `json:"discussions"`
	FileName        *string                  `json:"fileName"`
	HttpUrlToRepo   *string                  `json:"httpUrlToRepo"`
	Id              SnippetID                `json:"id"`
	Notes           NoteConnection           `json:"notes"`
	Project         *Project                 `json:"project"`
	RawUrl          string                   `json:"rawUrl"`
	SshUrlToRepo    *string                  `json:"sshUrlToRepo"`
	Title           string                   `json:"title"`
	UpdatedAt       Time                     `json:"updatedAt"`
	UserPermissions SnippetPermissions       `json:"userPermissions"`
	VisibilityLevel EnumVisibilityLevelsEnum `json:"visibilityLevel"`
	WebUrl          string                   `json:"webUrl"`
}

type SnippetBlob struct {
	Binary          bool               `json:"binary"`
	ExternalStorage *string            `json:"externalStorage"`
	Mode            *string            `json:"mode"`
	Name            *string            `json:"name"`
	Path            *string            `json:"path"`
	PlainData       *string            `json:"plainData"`
	RawPath         string             `json:"rawPath"`
	RawPlainData    *string            `json:"rawPlainData"`
	RenderedAsText  bool               `json:"renderedAsText"`
	RichData        *string            `json:"richData"`
	RichViewer      *SnippetBlobViewer `json:"richViewer"`
	SimpleViewer    SnippetBlobViewer  `json:"simpleViewer"`
	Size            int64              `json:"size"`
}

type SnippetBlobActionInputType struct {
	Action       EnumSnippetBlobActionEnum `json:"action"`
	Content      *string                   `json:"content"`
	FilePath     string                    `json:"filePath"`
	PreviousPath *string                   `json:"previousPath"`
}

type SnippetBlobConnection struct {
	Edges                 []*SnippetBlobEdge `json:"edges"`
	HasUnretrievableBlobs bool               `json:"hasUnretrievableBlobs"`
	Nodes                 []*SnippetBlob     `json:"nodes"`
	PageInfo              PageInfo           `json:"pageInfo"`
}

type SnippetBlobEdge struct {
	Cursor string       `json:"cursor"`
	Node   *SnippetBlob `json:"node"`
}

type SnippetBlobViewer struct {
	Collapsed          bool                `json:"collapsed"`
	FileType           string              `json:"fileType"`
	LoadAsync          bool                `json:"loadAsync"`
	LoadingPartialName string              `json:"loadingPartialName"`
	RenderError        *string             `json:"renderError"`
	TooLarge           bool                `json:"tooLarge"`
	Type               EnumBlobViewersType `json:"type"`
}

type SnippetConnection struct {
	Edges    []*SnippetEdge `json:"edges"`
	Nodes    []*Snippet     `json:"nodes"`
	PageInfo PageInfo       `json:"pageInfo"`
}

type SnippetEdge struct {
	Cursor string   `json:"cursor"`
	Node   *Snippet `json:"node"`
}

type SnippetPermissions struct {
	AdminSnippet  bool `json:"adminSnippet"`
	AwardEmoji    bool `json:"awardEmoji"`
	CreateNote    bool `json:"createNote"`
	ReadSnippet   bool `json:"readSnippet"`
	ReportSnippet bool `json:"reportSnippet"`
	UpdateSnippet bool `json:"updateSnippet"`
}

type SnippetRepositoryRegistry struct {
	CreatedAt              *Time                      `json:"createdAt"`
	Id                     string                     `json:"id"`
	LastSyncFailure        *string                    `json:"lastSyncFailure"`
	LastSyncedAt           *Time                      `json:"lastSyncedAt"`
	RetryAt                *Time                      `json:"retryAt"`
	RetryCount             *int64                     `json:"retryCount"`
	SnippetRepositoryId    string                     `json:"snippetRepositoryId"`
	State                  *EnumRegistryState         `json:"state"`
	VerificationChecksum   *string                    `json:"verificationChecksum"`
	VerificationFailure    *string                    `json:"verificationFailure"`
	VerificationRetryAt    *Time                      `json:"verificationRetryAt"`
	VerificationRetryCount *int64                     `json:"verificationRetryCount"`
	VerificationStartedAt  *Time                      `json:"verificationStartedAt"`
	VerificationState      *EnumVerificationStateEnum `json:"verificationState"`
	VerifiedAt             *Time                      `json:"verifiedAt"`
}

type SnippetRepositoryRegistryConnection struct {
	Edges    []*SnippetRepositoryRegistryEdge `json:"edges"`
	Nodes    []*SnippetRepositoryRegistry     `json:"nodes"`
	PageInfo PageInfo                         `json:"pageInfo"`
}

type SnippetRepositoryRegistryEdge struct {
	Cursor string                     `json:"cursor"`
	Node   *SnippetRepositoryRegistry `json:"node"`
}

type SshSignature struct {
	CommitSha            *string                 `json:"commitSha"`
	Key                  *Key                    `json:"key"`
	KeyFingerprintSha256 *string                 `json:"keyFingerprintSha256"`
	Project              *Project                `json:"project"`
	User                 *UserCore               `json:"user"`
	VerificationStatus   *EnumVerificationStatus `json:"verificationStatus"`
}

type StatusAction struct {
	ButtonTitle *string `json:"buttonTitle"`
	Icon        *string `json:"icon"`
	Id          string  `json:"id"`
	Method      *string `json:"method"`
	Path        *string `json:"path"`
	Title       *string `json:"title"`
}

type StatusFilterInput struct {
	Status EnumRequirementStatusFilter `json:"status"`
}

type StatusInput struct {
	Status EnumTestReportState `json:"status"`
}

type Submodule struct {
	FlatPath string        `json:"flatPath"`
	Id       string        `json:"id"`
	Name     string        `json:"name"`
	Path     string        `json:"path"`
	Sha      string        `json:"sha"`
	TreeUrl  *string       `json:"treeUrl"`
	Type     EnumEntryType `json:"type"`
	WebUrl   *string       `json:"webUrl"`
}

type SubmoduleConnection struct {
	Edges    []*SubmoduleEdge `json:"edges"`
	Nodes    []*Submodule     `json:"nodes"`
	PageInfo PageInfo         `json:"pageInfo"`
}

type SubmoduleEdge struct {
	Cursor string     `json:"cursor"`
	Node   *Submodule `json:"node"`
}

type Subscription struct {
	AiCompletionResponse             *AiResponse  `json:"aiCompletionResponse"`
	IssuableAssigneesUpdated         *Issuable    `json:"issuableAssigneesUpdated"`
	IssuableDatesUpdated             *Issuable    `json:"issuableDatesUpdated"`
	IssuableDescriptionUpdated       *Issuable    `json:"issuableDescriptionUpdated"`
	IssuableEpicUpdated              *Issuable    `json:"issuableEpicUpdated"`
	IssuableHealthStatusUpdated      *Issuable    `json:"issuableHealthStatusUpdated"`
	IssuableIterationUpdated         *Issuable    `json:"issuableIterationUpdated"`
	IssuableLabelsUpdated            *Issuable    `json:"issuableLabelsUpdated"`
	IssuableMilestoneUpdated         *Issuable    `json:"issuableMilestoneUpdated"`
	IssuableTitleUpdated             *Issuable    `json:"issuableTitleUpdated"`
	IssuableWeightUpdated            *Issuable    `json:"issuableWeightUpdated"`
	IssueCrmContactsUpdated          *Issuable    `json:"issueCrmContactsUpdated"`
	MergeRequestApprovalStateUpdated *Issuable    `json:"mergeRequestApprovalStateUpdated"`
	MergeRequestMergeStatusUpdated   *Issuable    `json:"mergeRequestMergeStatusUpdated"`
	MergeRequestReviewersUpdated     *Issuable    `json:"mergeRequestReviewersUpdated"`
	WorkItemNoteCreated              *Note        `json:"workItemNoteCreated"`
	WorkItemNoteDeleted              *DeletedNote `json:"workItemNoteDeleted"`
	WorkItemNoteUpdated              *Note        `json:"workItemNoteUpdated"`
	WorkItemUpdated                  *WorkItem    `json:"workItemUpdated"`
}

type SubscriptionFutureEntry struct {
	Company             *string `json:"company"`
	Email               *string `json:"email"`
	ExpiresAt           *Date   `json:"expiresAt"`
	Name                *string `json:"name"`
	Plan                string  `json:"plan"`
	StartsAt            *Date   `json:"startsAt"`
	Type                string  `json:"type"`
	UsersInLicenseCount *int64  `json:"usersInLicenseCount"`
}

type SubscriptionFutureEntryConnection struct {
	Edges    []*SubscriptionFutureEntryEdge `json:"edges"`
	Nodes    []*SubscriptionFutureEntry     `json:"nodes"`
	PageInfo PageInfo                       `json:"pageInfo"`
}

type SubscriptionFutureEntryEdge struct {
	Cursor string                   `json:"cursor"`
	Node   *SubscriptionFutureEntry `json:"node"`
}

type SuggestedReviewersType struct {
	Accepted  []string `json:"accepted"`
	CreatedAt Time     `json:"createdAt"`
	Suggested []string `json:"suggested"`
	UpdatedAt Time     `json:"updatedAt"`
}

type SystemNoteMetadata struct {
	Action             *string              `json:"action"`
	DescriptionVersion *DescriptionVersion  `json:"descriptionVersion"`
	Id                 SystemNoteMetadataID `json:"id"`
}

type TaskCompletionStatus struct {
	CompletedCount int64 `json:"completedCount"`
	Count          int64 `json:"count"`
}

type TerraformState struct {
	CreatedAt     Time                   `json:"createdAt"`
	DeletedAt     *Time                  `json:"deletedAt"`
	Id            string                 `json:"id"`
	LatestVersion *TerraformStateVersion `json:"latestVersion"`
	LockedAt      *Time                  `json:"lockedAt"`
	LockedByUser  *UserCore              `json:"lockedByUser"`
	Name          string                 `json:"name"`
	UpdatedAt     Time                   `json:"updatedAt"`
}

type TerraformStateConnection struct {
	Count    int64                 `json:"count"`
	Edges    []*TerraformStateEdge `json:"edges"`
	Nodes    []*TerraformState     `json:"nodes"`
	PageInfo PageInfo              `json:"pageInfo"`
}

type TerraformStateDeleteInput struct {
	ClientMutationId *string          `json:"clientMutationId"`
	Id               TerraformStateID `json:"id"`
}

type TerraformStateDeletePayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
}

type TerraformStateEdge struct {
	Cursor string          `json:"cursor"`
	Node   *TerraformState `json:"node"`
}

type TerraformStateLockInput struct {
	ClientMutationId *string          `json:"clientMutationId"`
	Id               TerraformStateID `json:"id"`
}

type TerraformStateLockPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
}

type TerraformStateUnlockInput struct {
	ClientMutationId *string          `json:"clientMutationId"`
	Id               TerraformStateID `json:"id"`
}

type TerraformStateUnlockPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
}

type TerraformStateVersion struct {
	CreatedAt     Time      `json:"createdAt"`
	CreatedByUser *UserCore `json:"createdByUser"`
	DownloadPath  *string   `json:"downloadPath"`
	Id            string    `json:"id"`
	Job           *CiJob    `json:"job"`
	Serial        *int64    `json:"serial"`
	UpdatedAt     Time      `json:"updatedAt"`
}

type TerraformStateVersionRegistry struct {
	CreatedAt               *Time                      `json:"createdAt"`
	Id                      string                     `json:"id"`
	LastSyncFailure         *string                    `json:"lastSyncFailure"`
	LastSyncedAt            *Time                      `json:"lastSyncedAt"`
	RetryAt                 *Time                      `json:"retryAt"`
	RetryCount              *int64                     `json:"retryCount"`
	State                   *EnumRegistryState         `json:"state"`
	TerraformStateVersionId string                     `json:"terraformStateVersionId"`
	VerificationChecksum    *string                    `json:"verificationChecksum"`
	VerificationFailure     *string                    `json:"verificationFailure"`
	VerificationRetryAt     *Time                      `json:"verificationRetryAt"`
	VerificationRetryCount  *int64                     `json:"verificationRetryCount"`
	VerificationStartedAt   *Time                      `json:"verificationStartedAt"`
	VerificationState       *EnumVerificationStateEnum `json:"verificationState"`
	VerifiedAt              *Time                      `json:"verifiedAt"`
}

type TerraformStateVersionRegistryConnection struct {
	Edges    []*TerraformStateVersionRegistryEdge `json:"edges"`
	Nodes    []*TerraformStateVersionRegistry     `json:"nodes"`
	PageInfo PageInfo                             `json:"pageInfo"`
}

type TerraformStateVersionRegistryEdge struct {
	Cursor string                         `json:"cursor"`
	Node   *TerraformStateVersionRegistry `json:"node"`
}

type TestCase struct {
	AttachmentUrl  *string             `json:"attachmentUrl"`
	Classname      *string             `json:"classname"`
	ExecutionTime  *float64            `json:"executionTime"`
	File           *string             `json:"file"`
	Name           *string             `json:"name"`
	RecentFailures *RecentFailures     `json:"recentFailures"`
	StackTrace     *string             `json:"stackTrace"`
	Status         *EnumTestCaseStatus `json:"status"`
	SystemOutput   *string             `json:"systemOutput"`
}

type TestCaseConnection struct {
	Count    int64           `json:"count"`
	Edges    []*TestCaseEdge `json:"edges"`
	Nodes    []*TestCase     `json:"nodes"`
	PageInfo PageInfo        `json:"pageInfo"`
}

type TestCaseEdge struct {
	Cursor string    `json:"cursor"`
	Node   *TestCase `json:"node"`
}

type TestReport struct {
	Author        *UserCore           `json:"author"`
	CreatedAt     Time                `json:"createdAt"`
	Id            string              `json:"id"`
	State         EnumTestReportState `json:"state"`
	UsesLegacyIid *bool               `json:"usesLegacyIid"`
}

type TestReportConnection struct {
	Edges    []*TestReportEdge `json:"edges"`
	Nodes    []*TestReport     `json:"nodes"`
	PageInfo PageInfo          `json:"pageInfo"`
}

type TestReportEdge struct {
	Cursor string      `json:"cursor"`
	Node   *TestReport `json:"node"`
}

type TestReportSummary struct {
	TestSuites TestSuiteSummaryConnection `json:"testSuites"`
	Total      TestReportTotal            `json:"total"`
}

type TestReportTotal struct {
	Count      *int64   `json:"count"`
	Error      *int64   `json:"error"`
	Failed     *int64   `json:"failed"`
	Skipped    *int64   `json:"skipped"`
	Success    *int64   `json:"success"`
	SuiteError *string  `json:"suiteError"`
	Time       *float64 `json:"time"`
}

type TestSuite struct {
	ErrorCount   *int64              `json:"errorCount"`
	FailedCount  *int64              `json:"failedCount"`
	Name         *string             `json:"name"`
	SkippedCount *int64              `json:"skippedCount"`
	SuccessCount *int64              `json:"successCount"`
	SuiteError   *string             `json:"suiteError"`
	TestCases    *TestCaseConnection `json:"testCases"`
	TotalCount   *int64              `json:"totalCount"`
	TotalTime    *float64            `json:"totalTime"`
}

type TestSuiteSummary struct {
	BuildIds     []string `json:"buildIds"`
	ErrorCount   *int64   `json:"errorCount"`
	FailedCount  *int64   `json:"failedCount"`
	Name         *string  `json:"name"`
	SkippedCount *int64   `json:"skippedCount"`
	SuccessCount *int64   `json:"successCount"`
	SuiteError   *string  `json:"suiteError"`
	TotalCount   *int64   `json:"totalCount"`
	TotalTime    *float64 `json:"totalTime"`
}

type TestSuiteSummaryConnection struct {
	Count    int64                   `json:"count"`
	Edges    []*TestSuiteSummaryEdge `json:"edges"`
	Nodes    []*TestSuiteSummary     `json:"nodes"`
	PageInfo PageInfo                `json:"pageInfo"`
}

type TestSuiteSummaryEdge struct {
	Cursor string            `json:"cursor"`
	Node   *TestSuiteSummary `json:"node"`
}

type TimeReportStats struct {
	Complete   *TimeboxMetrics `json:"complete"`
	Incomplete *TimeboxMetrics `json:"incomplete"`
	Total      *TimeboxMetrics `json:"total"`
}

type TimeTrackingTimelogCategory struct {
	Billable    *bool    `json:"billable"`
	BillingRate *float64 `json:"billingRate"`
	Color       *Color   `json:"color"`
	CreatedAt   Time     `json:"createdAt"`
	Description *string  `json:"description"`
	Id          string   `json:"id"`
	Name        string   `json:"name"`
	UpdatedAt   Time     `json:"updatedAt"`
}

type TimeTrackingTimelogCategoryConnection struct {
	Edges    []*TimeTrackingTimelogCategoryEdge `json:"edges"`
	Nodes    []*TimeTrackingTimelogCategory     `json:"nodes"`
	PageInfo PageInfo                           `json:"pageInfo"`
}

type TimeTrackingTimelogCategoryEdge struct {
	Cursor string                       `json:"cursor"`
	Node   *TimeTrackingTimelogCategory `json:"node"`
}

type TimeboxMetrics struct {
	Count  int64 `json:"count"`
	Weight int64 `json:"weight"`
}

type TimeboxReport struct {
	BurnupTimeSeries []BurnupChartDailyTotals `json:"burnupTimeSeries"`
	Error            *TimeboxReportError      `json:"error"`
	Stats            *TimeReportStats         `json:"stats"`
}

type TimeboxReportError struct {
	Code    *EnumTimeboxReportErrorReason `json:"code"`
	Message *string                       `json:"message"`
}

type Timeframe struct {
	End   Date `json:"end"`
	Start Date `json:"start"`
}

type TimelineEventCreateInput struct {
	ClientMutationId      *string  `json:"clientMutationId"`
	IncidentId            IssueID  `json:"incidentId"`
	Note                  string   `json:"note"`
	OccurredAt            Time     `json:"occurredAt"`
	TimelineEventTagNames []string `json:"timelineEventTagNames"`
}

type TimelineEventCreatePayload struct {
	ClientMutationId *string            `json:"clientMutationId"`
	Errors           []string           `json:"errors"`
	TimelineEvent    *TimelineEventType `json:"timelineEvent"`
}

type TimelineEventDestroyInput struct {
	ClientMutationId *string                           `json:"clientMutationId"`
	Id               IncidentManagementTimelineEventID `json:"id"`
}

type TimelineEventDestroyPayload struct {
	ClientMutationId *string            `json:"clientMutationId"`
	Errors           []string           `json:"errors"`
	TimelineEvent    *TimelineEventType `json:"timelineEvent"`
}

type TimelineEventPromoteFromNoteInput struct {
	ClientMutationId *string `json:"clientMutationId"`
	NoteId           NoteID  `json:"noteId"`
}

type TimelineEventPromoteFromNotePayload struct {
	ClientMutationId *string            `json:"clientMutationId"`
	Errors           []string           `json:"errors"`
	TimelineEvent    *TimelineEventType `json:"timelineEvent"`
}

type TimelineEventTagCreateInput struct {
	ClientMutationId *string `json:"clientMutationId"`
	Name             string  `json:"name"`
	ProjectPath      string  `json:"projectPath"`
}

type TimelineEventTagCreatePayload struct {
	ClientMutationId *string               `json:"clientMutationId"`
	Errors           []string              `json:"errors"`
	TimelineEventTag *TimelineEventTagType `json:"timelineEventTag"`
}

type TimelineEventTagType struct {
	Id   IncidentManagementTimelineEventTagID `json:"id"`
	Name string                               `json:"name"`
}

type TimelineEventTagTypeConnection struct {
	Edges    []*TimelineEventTagTypeEdge `json:"edges"`
	Nodes    []*TimelineEventTagType     `json:"nodes"`
	PageInfo PageInfo                    `json:"pageInfo"`
}

type TimelineEventTagTypeEdge struct {
	Cursor string                `json:"cursor"`
	Node   *TimelineEventTagType `json:"node"`
}

type TimelineEventType struct {
	Action            string                            `json:"action"`
	Author            *UserCore                         `json:"author"`
	CreatedAt         Time                              `json:"createdAt"`
	Editable          bool                              `json:"editable"`
	Id                IncidentManagementTimelineEventID `json:"id"`
	Incident          Issue                             `json:"incident"`
	Note              *string                           `json:"note"`
	NoteHtml          *string                           `json:"noteHtml"`
	OccurredAt        Time                              `json:"occurredAt"`
	PromotedFromNote  *Note                             `json:"promotedFromNote"`
	TimelineEventTags *TimelineEventTagTypeConnection   `json:"timelineEventTags"`
	UpdatedAt         Time                              `json:"updatedAt"`
	UpdatedByUser     *UserCore                         `json:"updatedByUser"`
}

type TimelineEventTypeConnection struct {
	Edges    []*TimelineEventTypeEdge `json:"edges"`
	Nodes    []*TimelineEventType     `json:"nodes"`
	PageInfo PageInfo                 `json:"pageInfo"`
}

type TimelineEventTypeEdge struct {
	Cursor string             `json:"cursor"`
	Node   *TimelineEventType `json:"node"`
}

type TimelineEventUpdateInput struct {
	ClientMutationId      *string                           `json:"clientMutationId"`
	Id                    IncidentManagementTimelineEventID `json:"id"`
	Note                  *string                           `json:"note"`
	OccurredAt            *Time                             `json:"occurredAt"`
	TimelineEventTagNames []string                          `json:"timelineEventTagNames"`
}

type TimelineEventUpdatePayload struct {
	ClientMutationId *string            `json:"clientMutationId"`
	Errors           []string           `json:"errors"`
	TimelineEvent    *TimelineEventType `json:"timelineEvent"`
}

type Timelog struct {
	Id              string             `json:"id"`
	Issue           *Issue             `json:"issue"`
	MergeRequest    *MergeRequest      `json:"mergeRequest"`
	Note            *Note              `json:"note"`
	Project         Project            `json:"project"`
	SpentAt         *Time              `json:"spentAt"`
	Summary         *string            `json:"summary"`
	TimeSpent       int64              `json:"timeSpent"`
	User            UserCore           `json:"user"`
	UserPermissions TimelogPermissions `json:"userPermissions"`
}

type TimelogConnection struct {
	Count          int64          `json:"count"`
	Edges          []*TimelogEdge `json:"edges"`
	Nodes          []*Timelog     `json:"nodes"`
	PageInfo       PageInfo       `json:"pageInfo"`
	TotalSpentTime BigInt         `json:"totalSpentTime"`
}

type TimelogCreateInput struct {
	ClientMutationId *string    `json:"clientMutationId"`
	IssuableId       IssuableID `json:"issuableId"`
	SpentAt          Time       `json:"spentAt"`
	Summary          string     `json:"summary"`
	TimeSpent        string     `json:"timeSpent"`
}

type TimelogCreatePayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	Timelog          *Timelog `json:"timelog"`
}

type TimelogDeleteInput struct {
	ClientMutationId *string   `json:"clientMutationId"`
	Id               TimelogID `json:"id"`
}

type TimelogDeletePayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	Timelog          *Timelog `json:"timelog"`
}

type TimelogEdge struct {
	Cursor string   `json:"cursor"`
	Node   *Timelog `json:"node"`
}

type TimelogPermissions struct {
	AdminTimelog bool `json:"adminTimelog"`
}

type Todo struct {
	Action     EnumTodoActionEnum `json:"action"`
	Author     UserCore           `json:"author"`
	Body       string             `json:"body"`
	CreatedAt  Time               `json:"createdAt"`
	Group      *Group             `json:"group"`
	Id         string             `json:"id"`
	Note       *Note              `json:"note"`
	Project    *Project           `json:"project"`
	State      EnumTodoStateEnum  `json:"state"`
	Target     Todoable           `json:"target"`
	TargetType EnumTodoTargetEnum `json:"targetType"`
}

type TodoConnection struct {
	Edges    []*TodoEdge `json:"edges"`
	Nodes    []*Todo     `json:"nodes"`
	PageInfo PageInfo    `json:"pageInfo"`
}

type TodoCreateInput struct {
	ClientMutationId *string    `json:"clientMutationId"`
	TargetId         TodoableID `json:"targetId"`
}

type TodoCreatePayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	Todo             *Todo    `json:"todo"`
}

type TodoEdge struct {
	Cursor string `json:"cursor"`
	Node   *Todo  `json:"node"`
}

type TodoMarkDoneInput struct {
	ClientMutationId *string `json:"clientMutationId"`
	Id               TodoID  `json:"id"`
}

type TodoMarkDonePayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	Todo             Todo     `json:"todo"`
}

type TodoRestoreInput struct {
	ClientMutationId *string `json:"clientMutationId"`
	Id               TodoID  `json:"id"`
}

type TodoRestoreManyInput struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Ids              []TodoID `json:"ids"`
}

type TodoRestoreManyPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	Todos            []Todo   `json:"todos"`
}

type TodoRestorePayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	Todo             Todo     `json:"todo"`
}

type TodosMarkAllDoneInput struct {
	ClientMutationId *string     `json:"clientMutationId"`
	TargetId         *TodoableID `json:"targetId"`
}

type TodosMarkAllDonePayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	Todos            []Todo   `json:"todos"`
}

type Topic struct {
	AvatarUrl       *string `json:"avatarUrl"`
	Description     *string `json:"description"`
	DescriptionHtml *string `json:"descriptionHtml"`
	Id              string  `json:"id"`
	Name            string  `json:"name"`
	Title           string  `json:"title"`
}

type TopicConnection struct {
	Edges    []*TopicEdge `json:"edges"`
	Nodes    []*Topic     `json:"nodes"`
	PageInfo PageInfo     `json:"pageInfo"`
}

type TopicEdge struct {
	Cursor string `json:"cursor"`
	Node   *Topic `json:"node"`
}

type Tree struct {
	Blobs      BlobConnection      `json:"blobs"`
	LastCommit *Commit             `json:"lastCommit"`
	Submodules SubmoduleConnection `json:"submodules"`
	Trees      TreeEntryConnection `json:"trees"`
}

type TreeConnection struct {
	Edges    []*TreeEdge `json:"edges"`
	Nodes    []*Tree     `json:"nodes"`
	PageInfo PageInfo    `json:"pageInfo"`
}

type TreeEdge struct {
	Cursor string `json:"cursor"`
	Node   *Tree  `json:"node"`
}

type TreeEntry struct {
	FlatPath string        `json:"flatPath"`
	Id       string        `json:"id"`
	Name     string        `json:"name"`
	Path     string        `json:"path"`
	Sha      string        `json:"sha"`
	Type     EnumEntryType `json:"type"`
	WebPath  *string       `json:"webPath"`
	WebUrl   *string       `json:"webUrl"`
}

type TreeEntryConnection struct {
	Edges    []*TreeEntryEdge `json:"edges"`
	Nodes    []*TreeEntry     `json:"nodes"`
	PageInfo PageInfo         `json:"pageInfo"`
}

type TreeEntryEdge struct {
	Cursor string     `json:"cursor"`
	Node   *TreeEntry `json:"node"`
}

type UnionedEpicFilterInput struct {
	AuthorUsername []string `json:"authorUsername"`
	LabelName      []string `json:"labelName"`
}

type UnionedIssueFilterInput struct {
	AssigneeUsernames []string `json:"assigneeUsernames"`
	AuthorUsernames   []string `json:"authorUsernames"`
	LabelNames        []string `json:"labelNames"`
}

type UnprotectAccessLevel struct {
	AccessLevel            int64             `json:"accessLevel"`
	AccessLevelDescription string            `json:"accessLevelDescription"`
	Group                  *AccessLevelGroup `json:"group"`
	User                   *AccessLevelUser  `json:"user"`
}

type UnprotectAccessLevelConnection struct {
	Edges    []*UnprotectAccessLevelEdge `json:"edges"`
	Nodes    []*UnprotectAccessLevel     `json:"nodes"`
	PageInfo PageInfo                    `json:"pageInfo"`
}

type UnprotectAccessLevelEdge struct {
	Cursor string                `json:"cursor"`
	Node   *UnprotectAccessLevel `json:"node"`
}

type UpdateAlertStatusInput struct {
	ClientMutationId *string                   `json:"clientMutationId"`
	Iid              string                    `json:"iid"`
	ProjectPath      string                    `json:"projectPath"`
	Status           EnumAlertManagementStatus `json:"status"`
}

type UpdateAlertStatusPayload struct {
	Alert            *AlertManagementAlert `json:"alert"`
	ClientMutationId *string               `json:"clientMutationId"`
	Errors           []string              `json:"errors"`
	Issue            *Issue                `json:"issue"`
	Todo             *Todo                 `json:"todo"`
}

type UpdateBoardEpicUserPreferencesInput struct {
	BoardId          BoardID `json:"boardId"`
	ClientMutationId *string `json:"clientMutationId"`
	Collapsed        bool    `json:"collapsed"`
	EpicId           EpicID  `json:"epicId"`
}

type UpdateBoardEpicUserPreferencesPayload struct {
	ClientMutationId    *string                   `json:"clientMutationId"`
	EpicUserPreferences *BoardEpicUserPreferences `json:"epicUserPreferences"`
	Errors              []string                  `json:"errors"`
}

type UpdateBoardInput struct {
	AssigneeId         *UserID              `json:"assigneeId"`
	ClientMutationId   *string              `json:"clientMutationId"`
	HideBacklogList    *bool                `json:"hideBacklogList"`
	HideClosedList     *bool                `json:"hideClosedList"`
	Id                 BoardID              `json:"id"`
	IterationCadenceId *IterationsCadenceID `json:"iterationCadenceId"`
	IterationId        *IterationID         `json:"iterationId"`
	LabelIds           []LabelID            `json:"labelIds"`
	Labels             []string             `json:"labels"`
	MilestoneId        *MilestoneID         `json:"milestoneId"`
	Name               *string              `json:"name"`
	Weight             *int64               `json:"weight"`
}

type UpdateBoardListInput struct {
	ClientMutationId *string `json:"clientMutationId"`
	Collapsed        *bool   `json:"collapsed"`
	ListId           ListID  `json:"listId"`
	Position         *int64  `json:"position"`
}

type UpdateBoardListPayload struct {
	ClientMutationId *string    `json:"clientMutationId"`
	Errors           []string   `json:"errors"`
	List             *BoardList `json:"list"`
}

type UpdateBoardPayload struct {
	Board            *Board   `json:"board"`
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
}

type UpdateComplianceFrameworkInput struct {
	ClientMutationId *string                         `json:"clientMutationId"`
	Id               ComplianceManagementFrameworkID `json:"id"`
	Params           ComplianceFrameworkInput        `json:"params"`
}

type UpdateComplianceFrameworkPayload struct {
	ClientMutationId    *string              `json:"clientMutationId"`
	ComplianceFramework *ComplianceFramework `json:"complianceFramework"`
	Errors              []string             `json:"errors"`
}

type UpdateContainerExpirationPolicyInput struct {
	Cadence          *EnumContainerExpirationPolicyCadenceEnum   `json:"cadence"`
	ClientMutationId *string                                     `json:"clientMutationId"`
	Enabled          *bool                                       `json:"enabled"`
	KeepN            *EnumContainerExpirationPolicyKeepEnum      `json:"keepN"`
	NameRegex        *UntrustedRegexp                            `json:"nameRegex"`
	NameRegexKeep    *UntrustedRegexp                            `json:"nameRegexKeep"`
	OlderThan        *EnumContainerExpirationPolicyOlderThanEnum `json:"olderThan"`
	ProjectPath      string                                      `json:"projectPath"`
}

type UpdateContainerExpirationPolicyPayload struct {
	ClientMutationId          *string                    `json:"clientMutationId"`
	ContainerExpirationPolicy *ContainerExpirationPolicy `json:"containerExpirationPolicy"`
	Errors                    []string                   `json:"errors"`
}

type UpdateDependencyProxyImageTtlGroupPolicyInput struct {
	ClientMutationId *string `json:"clientMutationId"`
	Enabled          *bool   `json:"enabled"`
	GroupPath        string  `json:"groupPath"`
	Ttl              *int64  `json:"ttl"`
}

type UpdateDependencyProxyImageTtlGroupPolicyPayload struct {
	ClientMutationId              *string                             `json:"clientMutationId"`
	DependencyProxyImageTtlPolicy *DependencyProxyImageTtlGroupPolicy `json:"dependencyProxyImageTtlPolicy"`
	Errors                        []string                            `json:"errors"`
}

type UpdateDependencyProxySettingsInput struct {
	ClientMutationId *string `json:"clientMutationId"`
	Enabled          *bool   `json:"enabled"`
	GroupPath        string  `json:"groupPath"`
}

type UpdateDependencyProxySettingsPayload struct {
	ClientMutationId       *string                 `json:"clientMutationId"`
	DependencyProxySetting *DependencyProxySetting `json:"dependencyProxySetting"`
	Errors                 []string                `json:"errors"`
}

type UpdateDiffImagePositionInput struct {
	Height *int64 `json:"height"`
	Width  *int64 `json:"width"`
	X      *int64 `json:"x"`
	Y      *int64 `json:"y"`
}

type UpdateEpicBoardListInput struct {
	ClientMutationId *string          `json:"clientMutationId"`
	Collapsed        *bool            `json:"collapsed"`
	ListId           BoardsEpicListID `json:"listId"`
	Position         *int64           `json:"position"`
}

type UpdateEpicBoardListPayload struct {
	ClientMutationId *string   `json:"clientMutationId"`
	Errors           []string  `json:"errors"`
	List             *EpicList `json:"list"`
}

type UpdateEpicInput struct {
	AddLabelIds      []string            `json:"addLabelIds"`
	AddLabels        []string            `json:"addLabels"`
	ClientMutationId *string             `json:"clientMutationId"`
	Color            *Color              `json:"color"`
	Confidential     *bool               `json:"confidential"`
	Description      *string             `json:"description"`
	DueDateFixed     *string             `json:"dueDateFixed"`
	DueDateIsFixed   *bool               `json:"dueDateIsFixed"`
	GroupPath        string              `json:"groupPath"`
	Iid              string              `json:"iid"`
	RemoveLabelIds   []string            `json:"removeLabelIds"`
	RemoveLabels     []string            `json:"removeLabels"`
	StartDateFixed   *string             `json:"startDateFixed"`
	StartDateIsFixed *bool               `json:"startDateIsFixed"`
	StateEvent       *EnumEpicStateEvent `json:"stateEvent"`
	Title            *string             `json:"title"`
}

type UpdateEpicPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Epic             *Epic    `json:"epic"`
	Errors           []string `json:"errors"`
}

type UpdateImageDiffNoteInput struct {
	Body             *string                       `json:"body"`
	ClientMutationId *string                       `json:"clientMutationId"`
	Id               NoteID                        `json:"id"`
	Position         *UpdateDiffImagePositionInput `json:"position"`
}

type UpdateImageDiffNotePayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	Note             *Note    `json:"note"`
}

type UpdateIssueInput struct {
	AddLabelIds      []string             `json:"addLabelIds"`
	ClientMutationId *string              `json:"clientMutationId"`
	Confidential     *bool                `json:"confidential"`
	Description      *string              `json:"description"`
	DueDate          *ISO8601Date         `json:"dueDate"`
	EpicId           *EpicID              `json:"epicId"`
	HealthStatus     *EnumHealthStatus    `json:"healthStatus"`
	Iid              string               `json:"iid"`
	LabelIds         []string             `json:"labelIds"`
	Locked           *bool                `json:"locked"`
	MilestoneId      *string              `json:"milestoneId"`
	ProjectPath      string               `json:"projectPath"`
	RemoveLabelIds   []string             `json:"removeLabelIds"`
	StateEvent       *EnumIssueStateEvent `json:"stateEvent"`
	TimeEstimate     *string              `json:"timeEstimate"`
	Title            *string              `json:"title"`
	Type             *EnumIssueType       `json:"type"`
	Weight           *int64               `json:"weight"`
}

type UpdateIssuePayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	Issue            *Issue   `json:"issue"`
}

type UpdateIterationInput struct {
	ClientMutationId *string `json:"clientMutationId"`
	Description      *string `json:"description"`
	DueDate          *string `json:"dueDate"`
	GroupPath        string  `json:"groupPath"`
	Id               string  `json:"id"`
	StartDate        *string `json:"startDate"`
	Title            *string `json:"title"`
}

type UpdateIterationPayload struct {
	ClientMutationId *string    `json:"clientMutationId"`
	Errors           []string   `json:"errors"`
	Iteration        *Iteration `json:"iteration"`
}

type UpdateNamespacePackageSettingsInput struct {
	ClientMutationId                   *string          `json:"clientMutationId"`
	GenericDuplicateExceptionRegex     *UntrustedRegexp `json:"genericDuplicateExceptionRegex"`
	GenericDuplicatesAllowed           *bool            `json:"genericDuplicatesAllowed"`
	LockMavenPackageRequestsForwarding *bool            `json:"lockMavenPackageRequestsForwarding"`
	LockNpmPackageRequestsForwarding   *bool            `json:"lockNpmPackageRequestsForwarding"`
	LockPypiPackageRequestsForwarding  *bool            `json:"lockPypiPackageRequestsForwarding"`
	MavenDuplicateExceptionRegex       *UntrustedRegexp `json:"mavenDuplicateExceptionRegex"`
	MavenDuplicatesAllowed             *bool            `json:"mavenDuplicatesAllowed"`
	MavenPackageRequestsForwarding     *bool            `json:"mavenPackageRequestsForwarding"`
	NamespacePath                      string           `json:"namespacePath"`
	NpmPackageRequestsForwarding       *bool            `json:"npmPackageRequestsForwarding"`
	PypiPackageRequestsForwarding      *bool            `json:"pypiPackageRequestsForwarding"`
}

type UpdateNamespacePackageSettingsPayload struct {
	ClientMutationId *string          `json:"clientMutationId"`
	Errors           []string         `json:"errors"`
	PackageSettings  *PackageSettings `json:"packageSettings"`
}

type UpdateNoteInput struct {
	Body             *string `json:"body"`
	ClientMutationId *string `json:"clientMutationId"`
	Confidential     *bool   `json:"confidential"`
	Id               NoteID  `json:"id"`
}

type UpdateNotePayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	Note             *Note    `json:"note"`
}

type UpdatePackagesCleanupPolicyInput struct {
	ClientMutationId            *string                                            `json:"clientMutationId"`
	KeepNDuplicatedPackageFiles *EnumPackagesCleanupKeepDuplicatedPackageFilesEnum `json:"keepNDuplicatedPackageFiles"`
	ProjectPath                 string                                             `json:"projectPath"`
}

type UpdatePackagesCleanupPolicyPayload struct {
	ClientMutationId      *string                `json:"clientMutationId"`
	Errors                []string               `json:"errors"`
	PackagesCleanupPolicy *PackagesCleanupPolicy `json:"packagesCleanupPolicy"`
}

type UpdateRequirementInput struct {
	ClientMutationId    *string               `json:"clientMutationId"`
	Description         *string               `json:"description"`
	Iid                 *string               `json:"iid"`
	LastTestReportState *EnumTestReportState  `json:"lastTestReportState"`
	ProjectPath         string                `json:"projectPath"`
	State               *EnumRequirementState `json:"state"`
	Title               *string               `json:"title"`
	WorkItemIid         *string               `json:"workItemIid"`
}

type UpdateRequirementPayload struct {
	ClientMutationId *string      `json:"clientMutationId"`
	Errors           []string     `json:"errors"`
	Requirement      *Requirement `json:"requirement"`
}

type UpdateSnippetInput struct {
	BlobActions      []SnippetBlobActionInputType `json:"blobActions"`
	ClientMutationId *string                      `json:"clientMutationId"`
	Description      *string                      `json:"description"`
	Id               SnippetID                    `json:"id"`
	Title            *string                      `json:"title"`
	VisibilityLevel  *EnumVisibilityLevelsEnum    `json:"visibilityLevel"`
}

type UpdateSnippetPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	Snippet          *Snippet `json:"snippet"`
}

type UploadDeleteInput struct {
	ClientMutationId *string `json:"clientMutationId"`
	Filename         string  `json:"filename"`
	GroupPath        *string `json:"groupPath"`
	ProjectPath      *string `json:"projectPath"`
	Secret           string  `json:"secret"`
}

type UploadDeletePayload struct {
	ClientMutationId *string     `json:"clientMutationId"`
	Errors           []string    `json:"errors"`
	Upload           *FileUpload `json:"upload"`
}

type UploadRegistry struct {
	CreatedAt              *Time                      `json:"createdAt"`
	FileId                 string                     `json:"fileId"`
	Id                     string                     `json:"id"`
	LastSyncFailure        *string                    `json:"lastSyncFailure"`
	LastSyncedAt           *Time                      `json:"lastSyncedAt"`
	RetryAt                *Time                      `json:"retryAt"`
	RetryCount             *int64                     `json:"retryCount"`
	State                  *EnumRegistryState         `json:"state"`
	VerificationChecksum   *string                    `json:"verificationChecksum"`
	VerificationFailure    *string                    `json:"verificationFailure"`
	VerificationRetryAt    *Time                      `json:"verificationRetryAt"`
	VerificationRetryCount *int64                     `json:"verificationRetryCount"`
	VerificationStartedAt  *Time                      `json:"verificationStartedAt"`
	VerificationState      *EnumVerificationStateEnum `json:"verificationState"`
	VerifiedAt             *Time                      `json:"verifiedAt"`
}

type UploadRegistryConnection struct {
	Edges    []*UploadRegistryEdge `json:"edges"`
	Nodes    []*UploadRegistry     `json:"nodes"`
	PageInfo PageInfo              `json:"pageInfo"`
}

type UploadRegistryEdge struct {
	Cursor string          `json:"cursor"`
	Node   *UploadRegistry `json:"node"`
}

type UsageTrendsMeasurement struct {
	Count      int64                     `json:"count"`
	Identifier EnumMeasurementIdentifier `json:"identifier"`
	RecordedAt *Time                     `json:"recordedAt"`
}

type UsageTrendsMeasurementConnection struct {
	Edges    []*UsageTrendsMeasurementEdge `json:"edges"`
	Nodes    []*UsageTrendsMeasurement     `json:"nodes"`
	PageInfo PageInfo                      `json:"pageInfo"`
}

type UsageTrendsMeasurementEdge struct {
	Cursor string                  `json:"cursor"`
	Node   *UsageTrendsMeasurement `json:"node"`
}

type UserAchievement struct {
	Achievement   Achievement                   `json:"achievement"`
	AwardedByUser UserCore                      `json:"awardedByUser"`
	CreatedAt     Time                          `json:"createdAt"`
	Id            AchievementsUserAchievementID `json:"id"`
	RevokedAt     *Time                         `json:"revokedAt"`
	RevokedByUser *UserCore                     `json:"revokedByUser"`
	UpdatedAt     Time                          `json:"updatedAt"`
	User          UserCore                      `json:"user"`
}

type UserAchievementConnection struct {
	Count    int64                  `json:"count"`
	Edges    []*UserAchievementEdge `json:"edges"`
	Nodes    []*UserAchievement     `json:"nodes"`
	PageInfo PageInfo               `json:"pageInfo"`
}

type UserAchievementEdge struct {
	Cursor string           `json:"cursor"`
	Node   *UserAchievement `json:"node"`
}

type UserAchievementsDeleteInput struct {
	ClientMutationId  *string                       `json:"clientMutationId"`
	UserAchievementId AchievementsUserAchievementID `json:"userAchievementId"`
}

type UserAchievementsDeletePayload struct {
	ClientMutationId *string          `json:"clientMutationId"`
	Errors           []string         `json:"errors"`
	UserAchievement  *UserAchievement `json:"userAchievement"`
}

type UserAddOnAssignmentCreateInput struct {
	AddOnPurchaseId  GitlabSubscriptionsAddOnPurchaseID `json:"addOnPurchaseId"`
	ClientMutationId *string                            `json:"clientMutationId"`
	UserId           UserID                             `json:"userId"`
}

type UserAddOnAssignmentCreatePayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
}

type UserAddOnAssignmentRemoveInput struct {
	AddOnPurchaseId  GitlabSubscriptionsAddOnPurchaseID `json:"addOnPurchaseId"`
	ClientMutationId *string                            `json:"clientMutationId"`
	UserId           UserID                             `json:"userId"`
}

type UserAddOnAssignmentRemovePayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
}

type UserCallout struct {
	DismissedAt *Time                           `json:"dismissedAt"`
	FeatureName *EnumUserCalloutFeatureNameEnum `json:"featureName"`
}

type UserCalloutConnection struct {
	Edges    []*UserCalloutEdge `json:"edges"`
	Nodes    []*UserCallout     `json:"nodes"`
	PageInfo PageInfo           `json:"pageInfo"`
}

type UserCalloutCreateInput struct {
	ClientMutationId *string `json:"clientMutationId"`
	FeatureName      string  `json:"featureName"`
}

type UserCalloutCreatePayload struct {
	ClientMutationId *string     `json:"clientMutationId"`
	Errors           []string    `json:"errors"`
	UserCallout      UserCallout `json:"userCallout"`
}

type UserCalloutEdge struct {
	Cursor string       `json:"cursor"`
	Node   *UserCallout `json:"node"`
}

type UserCore struct {
	AssignedMergeRequests        *MergeRequestConnection         `json:"assignedMergeRequests"`
	AuthoredMergeRequests        *MergeRequestConnection         `json:"authoredMergeRequests"`
	AvatarUrl                    *string                         `json:"avatarUrl"`
	Bio                          *string                         `json:"bio"`
	Bot                          bool                            `json:"bot"`
	Callouts                     *UserCalloutConnection          `json:"callouts"`
	CommitEmail                  *string                         `json:"commitEmail"`
	CreatedAt                    *Time                           `json:"createdAt"`
	Discord                      *string                         `json:"discord"`
	Email                        *string                         `json:"email"`
	Emails                       *EmailConnection                `json:"emails"`
	GitpodEnabled                *bool                           `json:"gitpodEnabled"`
	GroupCount                   *int64                          `json:"groupCount"`
	GroupMemberships             *GroupMemberConnection          `json:"groupMemberships"`
	Groups                       *GroupConnection                `json:"groups"`
	Id                           string                          `json:"id"`
	Ide                          *Ide                            `json:"ide"`
	JobTitle                     *string                         `json:"jobTitle"`
	Linkedin                     *string                         `json:"linkedin"`
	Location                     *string                         `json:"location"`
	Name                         string                          `json:"name"`
	Namespace                    *Namespace                      `json:"namespace"`
	NamespaceCommitEmails        *NamespaceCommitEmailConnection `json:"namespaceCommitEmails"`
	Organization                 *string                         `json:"organization"`
	PreferencesGitpodPath        *string                         `json:"preferencesGitpodPath"`
	ProfileEnableGitpodPath      *string                         `json:"profileEnableGitpodPath"`
	ProjectMemberships           *ProjectMemberConnection        `json:"projectMemberships"`
	Pronouns                     *string                         `json:"pronouns"`
	PublicEmail                  *string                         `json:"publicEmail"`
	ReviewRequestedMergeRequests *MergeRequestConnection         `json:"reviewRequestedMergeRequests"`
	SavedReplies                 *SavedReplyConnection           `json:"savedReplies"`
	SavedReply                   *SavedReply                     `json:"savedReply"`
	Snippets                     *SnippetConnection              `json:"snippets"`
	StarredProjects              *ProjectConnection              `json:"starredProjects"`
	State                        EnumUserState                   `json:"state"`
	Status                       *UserStatus                     `json:"status"`
	Timelogs                     *TimelogConnection              `json:"timelogs"`
	Todos                        *TodoConnection                 `json:"todos"`
	Twitter                      *string                         `json:"twitter"`
	UserAchievements             *UserAchievementConnection      `json:"userAchievements"`
	UserPermissions              UserPermissions                 `json:"userPermissions"`
	Username                     string                          `json:"username"`
	WebPath                      string                          `json:"webPath"`
	WebUrl                       string                          `json:"webUrl"`
	Workspaces                   *WorkspaceConnection            `json:"workspaces"`
}

type UserCoreConnection struct {
	Edges    []*UserCoreEdge `json:"edges"`
	Nodes    []*UserCore     `json:"nodes"`
	PageInfo PageInfo        `json:"pageInfo"`
}

type UserCoreEdge struct {
	Cursor string    `json:"cursor"`
	Node   *UserCore `json:"node"`
}

type UserMergeRequestInteraction struct {
	ApplicableApprovalRules []ApprovalRule               `json:"applicableApprovalRules"`
	Approved                bool                         `json:"approved"`
	CanMerge                bool                         `json:"canMerge"`
	CanUpdate               bool                         `json:"canUpdate"`
	ReviewState             *EnumMergeRequestReviewState `json:"reviewState"`
	Reviewed                bool                         `json:"reviewed"`
}

type UserPermissions struct {
	CreateSnippet bool `json:"createSnippet"`
}

type UserPreferences struct {
	IssuesSort               *EnumIssueSort                `json:"issuesSort"`
	VisibilityPipelineIdType *EnumVisibilityPipelineIdType `json:"visibilityPipelineIdType"`
}

type UserPreferencesUpdateInput struct {
	ClientMutationId         *string                       `json:"clientMutationId"`
	IssuesSort               *EnumIssueSort                `json:"issuesSort"`
	VisibilityPipelineIdType *EnumVisibilityPipelineIdType `json:"visibilityPipelineIdType"`
}

type UserPreferencesUpdatePayload struct {
	ClientMutationId *string          `json:"clientMutationId"`
	Errors           []string         `json:"errors"`
	UserPreferences  *UserPreferences `json:"userPreferences"`
}

type UserSetNamespaceCommitEmailInput struct {
	ClientMutationId *string     `json:"clientMutationId"`
	EmailId          *EmailID    `json:"emailId"`
	NamespaceId      NamespaceID `json:"namespaceId"`
}

type UserSetNamespaceCommitEmailPayload struct {
	ClientMutationId     *string               `json:"clientMutationId"`
	Errors               []string              `json:"errors"`
	NamespaceCommitEmail *NamespaceCommitEmail `json:"namespaceCommitEmail"`
}

type UserStatus struct {
	Availability EnumAvailabilityEnum `json:"availability"`
	Emoji        *string              `json:"emoji"`
	Message      *string              `json:"message"`
	MessageHtml  *string              `json:"messageHtml"`
}

type ValueStreamAnalyticsMetric struct {
	Identifier string                      `json:"identifier"`
	Links      []ValueStreamMetricLinkType `json:"links"`
	Title      string                      `json:"title"`
	Unit       *string                     `json:"unit"`
	Value      *float64                    `json:"value"`
}

type ValueStreamMetricLinkType struct {
	DocsLink *bool  `json:"docsLink"`
	Label    string `json:"label"`
	Name     string `json:"name"`
	Url      string `json:"url"`
}

type VulnerabilitiesCountByDay struct {
	Critical int64       `json:"critical"`
	Date     ISO8601Date `json:"date"`
	High     int64       `json:"high"`
	Info     int64       `json:"info"`
	Low      int64       `json:"low"`
	Medium   int64       `json:"medium"`
	Total    int64       `json:"total"`
	Unknown  int64       `json:"unknown"`
}

type VulnerabilitiesCountByDayConnection struct {
	Edges    []*VulnerabilitiesCountByDayEdge `json:"edges"`
	Nodes    []*VulnerabilitiesCountByDay     `json:"nodes"`
	PageInfo PageInfo                         `json:"pageInfo"`
}

type VulnerabilitiesCountByDayEdge struct {
	Cursor string                     `json:"cursor"`
	Node   *VulnerabilitiesCountByDay `json:"node"`
}

type VulnerabilitiesDismissInput struct {
	ClientMutationId *string                           `json:"clientMutationId"`
	Comment          *string                           `json:"comment"`
	DismissalReason  *EnumVulnerabilityDismissalReason `json:"dismissalReason"`
	VulnerabilityIds []VulnerabilityID                 `json:"vulnerabilityIds"`
}

type VulnerabilitiesDismissPayload struct {
	ClientMutationId *string         `json:"clientMutationId"`
	Errors           []string        `json:"errors"`
	Vulnerabilities  []Vulnerability `json:"vulnerabilities"`
}

type Vulnerability struct {
	Commenters              UserCoreConnection                          `json:"commenters"`
	ConfirmedAt             *Time                                       `json:"confirmedAt"`
	ConfirmedBy             *UserCore                                   `json:"confirmedBy"`
	Description             *string                                     `json:"description"`
	DescriptionHtml         *string                                     `json:"descriptionHtml"`
	Details                 []VulnerabilityDetail                       `json:"details"`
	DetectedAt              Time                                        `json:"detectedAt"`
	Discussions             DiscussionConnection                        `json:"discussions"`
	DismissalReason         *EnumVulnerabilityDismissalReason           `json:"dismissalReason"`
	DismissedAt             *Time                                       `json:"dismissedAt"`
	DismissedBy             *UserCore                                   `json:"dismissedBy"`
	ExternalIssueLinks      VulnerabilityExternalIssueLinkConnection    `json:"externalIssueLinks"`
	FalsePositive           *bool                                       `json:"falsePositive"`
	HasRemediations         *bool                                       `json:"hasRemediations"`
	HasSolutions            *bool                                       `json:"hasSolutions"`
	Id                      string                                      `json:"id"`
	Identifiers             []VulnerabilityIdentifier                   `json:"identifiers"`
	IssueLinks              VulnerabilityIssueLinkConnection            `json:"issueLinks"`
	Links                   []VulnerabilityLink                         `json:"links"`
	Location                *VulnerabilityLocation                      `json:"location"`
	MergeRequest            *MergeRequest                               `json:"mergeRequest"`
	Message                 *string                                     `json:"message"`
	Notes                   NoteConnection                              `json:"notes"`
	PrimaryIdentifier       *VulnerabilityIdentifier                    `json:"primaryIdentifier"`
	Project                 *Project                                    `json:"project"`
	ReportType              *EnumVulnerabilityReportType                `json:"reportType"`
	ResolvedAt              *Time                                       `json:"resolvedAt"`
	ResolvedBy              *UserCore                                   `json:"resolvedBy"`
	ResolvedOnDefaultBranch bool                                        `json:"resolvedOnDefaultBranch"`
	Scanner                 *VulnerabilityScanner                       `json:"scanner"`
	Severity                *EnumVulnerabilitySeverity                  `json:"severity"`
	State                   *EnumVulnerabilityState                     `json:"state"`
	StateComment            *string                                     `json:"stateComment"`
	StateTransitions        *VulnerabilityStateTransitionTypeConnection `json:"stateTransitions"`
	Title                   *string                                     `json:"title"`
	UpdatedAt               *Time                                       `json:"updatedAt"`
	UserNotesCount          int64                                       `json:"userNotesCount"`
	UserPermissions         VulnerabilityPermissions                    `json:"userPermissions"`
	VulnerabilityPath       *string                                     `json:"vulnerabilityPath"`
	WebUrl                  *string                                     `json:"webUrl"`
}

type VulnerabilityConfirmInput struct {
	ClientMutationId *string         `json:"clientMutationId"`
	Comment          *string         `json:"comment"`
	Id               VulnerabilityID `json:"id"`
}

type VulnerabilityConfirmPayload struct {
	ClientMutationId *string        `json:"clientMutationId"`
	Errors           []string       `json:"errors"`
	Vulnerability    *Vulnerability `json:"vulnerability"`
}

type VulnerabilityConnection struct {
	Edges    []*VulnerabilityEdge `json:"edges"`
	Nodes    []*Vulnerability     `json:"nodes"`
	PageInfo PageInfo             `json:"pageInfo"`
}

type VulnerabilityContainerImage struct {
	Name *string `json:"name"`
}

type VulnerabilityContainerImageConnection struct {
	Edges    []*VulnerabilityContainerImageEdge `json:"edges"`
	Nodes    []*VulnerabilityContainerImage     `json:"nodes"`
	PageInfo PageInfo                           `json:"pageInfo"`
}

type VulnerabilityContainerImageEdge struct {
	Cursor string                       `json:"cursor"`
	Node   *VulnerabilityContainerImage `json:"node"`
}

type VulnerabilityCreateInput struct {
	ClientMutationId *string                        `json:"clientMutationId"`
	Confidence       *EnumVulnerabilityConfidence   `json:"confidence"`
	ConfirmedAt      *Time                          `json:"confirmedAt"`
	Description      string                         `json:"description"`
	DetectedAt       *Time                          `json:"detectedAt"`
	DismissedAt      *Time                          `json:"dismissedAt"`
	Identifiers      []VulnerabilityIdentifierInput `json:"identifiers"`
	Message          *string                        `json:"message"`
	Name             string                         `json:"name"`
	Project          ProjectID                      `json:"project"`
	ResolvedAt       *Time                          `json:"resolvedAt"`
	Scanner          VulnerabilityScannerInput      `json:"scanner"`
	Severity         *EnumVulnerabilitySeverity     `json:"severity"`
	Solution         *string                        `json:"solution"`
	State            *EnumVulnerabilityState        `json:"state"`
}

type VulnerabilityCreatePayload struct {
	ClientMutationId *string        `json:"clientMutationId"`
	Errors           []string       `json:"errors"`
	Vulnerability    *Vulnerability `json:"vulnerability"`
}

type VulnerabilityDetail struct {
	TypeName string `json:"__typeName"`
	VulnerabilityDetailBase
	VulnerabilityDetailBoolean
	VulnerabilityDetailCode
	VulnerabilityDetailCommit
	VulnerabilityDetailDiff
	VulnerabilityDetailFileLocation
	VulnerabilityDetailInt
	VulnerabilityDetailList
	VulnerabilityDetailMarkdown
	VulnerabilityDetailModuleLocation
	VulnerabilityDetailNamedList
	VulnerabilityDetailTable
	VulnerabilityDetailText
	VulnerabilityDetailUrl
}

type VulnerabilityDetailBase struct {
	Description *string `json:"description"`
	FieldName   *string `json:"fieldName"`
	Name        *string `json:"name"`
}

type VulnerabilityDetailBoolean struct {
	Description *string `json:"description"`
	FieldName   *string `json:"fieldName"`
	Name        *string `json:"name"`
	Value       bool    `json:"value"`
}

type VulnerabilityDetailCode struct {
	Description *string `json:"description"`
	FieldName   *string `json:"fieldName"`
	Lang        *string `json:"lang"`
	Name        *string `json:"name"`
	Value       string  `json:"value"`
}

type VulnerabilityDetailCommit struct {
	Description *string `json:"description"`
	FieldName   *string `json:"fieldName"`
	Name        *string `json:"name"`
	Value       string  `json:"value"`
}

type VulnerabilityDetailDiff struct {
	After       string  `json:"after"`
	Before      string  `json:"before"`
	Description *string `json:"description"`
	FieldName   *string `json:"fieldName"`
	Name        *string `json:"name"`
}

type VulnerabilityDetailFileLocation struct {
	Description *string `json:"description"`
	FieldName   *string `json:"fieldName"`
	FileName    string  `json:"fileName"`
	LineEnd     int64   `json:"lineEnd"`
	LineStart   int64   `json:"lineStart"`
	Name        *string `json:"name"`
}

type VulnerabilityDetailInt struct {
	Description *string `json:"description"`
	FieldName   *string `json:"fieldName"`
	Name        *string `json:"name"`
	Value       int64   `json:"value"`
}

type VulnerabilityDetailList struct {
	Description *string               `json:"description"`
	FieldName   *string               `json:"fieldName"`
	Items       []VulnerabilityDetail `json:"items"`
	Name        *string               `json:"name"`
}

type VulnerabilityDetailMarkdown struct {
	Description *string `json:"description"`
	FieldName   *string `json:"fieldName"`
	Name        *string `json:"name"`
	Value       string  `json:"value"`
}

type VulnerabilityDetailModuleLocation struct {
	Description *string `json:"description"`
	FieldName   *string `json:"fieldName"`
	ModuleName  string  `json:"moduleName"`
	Name        *string `json:"name"`
	Offset      int64   `json:"offset"`
}

type VulnerabilityDetailNamedList struct {
	Description *string                            `json:"description"`
	FieldName   *string                            `json:"fieldName"`
	Items       []VulnerabilityDetailNamedListItem `json:"items"`
	Name        *string                            `json:"name"`
}

type VulnerabilityDetailNamedListItem struct {
	Description *string             `json:"description"`
	FieldName   *string             `json:"fieldName"`
	Name        *string             `json:"name"`
	Value       VulnerabilityDetail `json:"value"`
}

type VulnerabilityDetailRow struct {
	Description *string               `json:"description"`
	FieldName   *string               `json:"fieldName"`
	Name        *string               `json:"name"`
	Row         []VulnerabilityDetail `json:"row"`
}

type VulnerabilityDetailTable struct {
	Description *string                  `json:"description"`
	FieldName   *string                  `json:"fieldName"`
	Headers     []VulnerabilityDetail    `json:"headers"`
	Name        *string                  `json:"name"`
	Rows        []VulnerabilityDetailRow `json:"rows"`
}

type VulnerabilityDetailText struct {
	Description *string `json:"description"`
	FieldName   *string `json:"fieldName"`
	Name        *string `json:"name"`
	Value       string  `json:"value"`
}

type VulnerabilityDetailUrl struct {
	Description *string `json:"description"`
	FieldName   *string `json:"fieldName"`
	Href        string  `json:"href"`
	Name        *string `json:"name"`
	Text        *string `json:"text"`
}

type VulnerabilityDismissInput struct {
	ClientMutationId *string                           `json:"clientMutationId"`
	Comment          *string                           `json:"comment"`
	DismissalReason  *EnumVulnerabilityDismissalReason `json:"dismissalReason"`
	Id               VulnerabilityID                   `json:"id"`
}

type VulnerabilityDismissPayload struct {
	ClientMutationId *string        `json:"clientMutationId"`
	Errors           []string       `json:"errors"`
	Vulnerability    *Vulnerability `json:"vulnerability"`
}

type VulnerabilityEdge struct {
	Cursor string         `json:"cursor"`
	Node   *Vulnerability `json:"node"`
}

type VulnerabilityEvidence struct {
	Request            *VulnerabilityRequest                    `json:"request"`
	Response           *VulnerabilityResponse                   `json:"response"`
	Source             *VulnerabilityEvidenceSource             `json:"source"`
	Summary            *string                                  `json:"summary"`
	SupportingMessages []VulnerabilityEvidenceSupportingMessage `json:"supportingMessages"`
}

type VulnerabilityEvidenceSource struct {
	Identifier string  `json:"identifier"`
	Name       string  `json:"name"`
	Url        *string `json:"url"`
}

type VulnerabilityEvidenceSupportingMessage struct {
	Name     string                 `json:"name"`
	Request  *VulnerabilityRequest  `json:"request"`
	Response *VulnerabilityResponse `json:"response"`
}

type VulnerabilityExternalIssueLink struct {
	ExternalIssue *ExternalIssue                         `json:"externalIssue"`
	Id            VulnerabilitiesExternalIssueLinkID     `json:"id"`
	LinkType      EnumVulnerabilityExternalIssueLinkType `json:"linkType"`
}

type VulnerabilityExternalIssueLinkConnection struct {
	Edges    []*VulnerabilityExternalIssueLinkEdge `json:"edges"`
	Nodes    []*VulnerabilityExternalIssueLink     `json:"nodes"`
	PageInfo PageInfo                              `json:"pageInfo"`
}

type VulnerabilityExternalIssueLinkCreateInput struct {
	ClientMutationId *string                                           `json:"clientMutationId"`
	ExternalTracker  EnumVulnerabilityExternalIssueLinkExternalTracker `json:"externalTracker"`
	Id               VulnerabilityID                                   `json:"id"`
	LinkType         EnumVulnerabilityExternalIssueLinkType            `json:"linkType"`
}

type VulnerabilityExternalIssueLinkCreatePayload struct {
	ClientMutationId  *string                         `json:"clientMutationId"`
	Errors            []string                        `json:"errors"`
	ExternalIssueLink *VulnerabilityExternalIssueLink `json:"externalIssueLink"`
}

type VulnerabilityExternalIssueLinkDestroyInput struct {
	ClientMutationId *string                            `json:"clientMutationId"`
	Id               VulnerabilitiesExternalIssueLinkID `json:"id"`
}

type VulnerabilityExternalIssueLinkDestroyPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
}

type VulnerabilityExternalIssueLinkEdge struct {
	Cursor string                          `json:"cursor"`
	Node   *VulnerabilityExternalIssueLink `json:"node"`
}

type VulnerabilityIdentifier struct {
	ExternalId   *string `json:"externalId"`
	ExternalType *string `json:"externalType"`
	Name         *string `json:"name"`
	Url          *string `json:"url"`
}

type VulnerabilityIdentifierInput struct {
	ExternalId   *string `json:"externalId"`
	ExternalType *string `json:"externalType"`
	Name         string  `json:"name"`
	Url          string  `json:"url"`
}

type VulnerabilityIssueLink struct {
	Id       string                         `json:"id"`
	Issue    *Issue                         `json:"issue"`
	LinkType EnumVulnerabilityIssueLinkType `json:"linkType"`
}

type VulnerabilityIssueLinkConnection struct {
	Edges    []*VulnerabilityIssueLinkEdge `json:"edges"`
	Nodes    []*VulnerabilityIssueLink     `json:"nodes"`
	PageInfo PageInfo                      `json:"pageInfo"`
}

type VulnerabilityIssueLinkCreateInput struct {
	ClientMutationId *string           `json:"clientMutationId"`
	IssueId          IssueID           `json:"issueId"`
	VulnerabilityIds []VulnerabilityID `json:"vulnerabilityIds"`
}

type VulnerabilityIssueLinkCreatePayload struct {
	ClientMutationId *string                  `json:"clientMutationId"`
	Errors           []string                 `json:"errors"`
	IssueLinks       []VulnerabilityIssueLink `json:"issueLinks"`
}

type VulnerabilityIssueLinkEdge struct {
	Cursor string                  `json:"cursor"`
	Node   *VulnerabilityIssueLink `json:"node"`
}

type VulnerabilityLink struct {
	Name *string `json:"name"`
	Url  string  `json:"url"`
}

type VulnerabilityLocation struct {
	TypeName string `json:"__typeName"`
	VulnerabilityLocationClusterImageScanning
	VulnerabilityLocationContainerScanning
	VulnerabilityLocationCoverageFuzzing
	VulnerabilityLocationDast
	VulnerabilityLocationDependencyScanning
	VulnerabilityLocationGeneric
	VulnerabilityLocationSast
	VulnerabilityLocationSecretDetection
}

type VulnerabilityLocationClusterImageScanning struct {
	Dependency         *VulnerableDependency         `json:"dependency"`
	Image              *string                       `json:"image"`
	KubernetesResource *VulnerableKubernetesResource `json:"kubernetesResource"`
	OperatingSystem    *string                       `json:"operatingSystem"`
}

type VulnerabilityLocationContainerScanning struct {
	Dependency      *VulnerableDependency `json:"dependency"`
	Image           *string               `json:"image"`
	OperatingSystem *string               `json:"operatingSystem"`
}

type VulnerabilityLocationCoverageFuzzing struct {
	BlobPath          *string `json:"blobPath"`
	CrashAddress      *string `json:"crashAddress"`
	CrashType         *string `json:"crashType"`
	EndLine           *string `json:"endLine"`
	File              *string `json:"file"`
	StacktraceSnippet *string `json:"stacktraceSnippet"`
	StartLine         *string `json:"startLine"`
	VulnerableClass   *string `json:"vulnerableClass"`
	VulnerableMethod  *string `json:"vulnerableMethod"`
}

type VulnerabilityLocationDast struct {
	Hostname      *string `json:"hostname"`
	Param         *string `json:"param"`
	Path          *string `json:"path"`
	RequestMethod *string `json:"requestMethod"`
}

type VulnerabilityLocationDependencyScanning struct {
	BlobPath   *string               `json:"blobPath"`
	Dependency *VulnerableDependency `json:"dependency"`
	File       *string               `json:"file"`
}

type VulnerabilityLocationGeneric struct {
	Description *string `json:"description"`
}

type VulnerabilityLocationSast struct {
	BlobPath         *string `json:"blobPath"`
	EndLine          *string `json:"endLine"`
	File             *string `json:"file"`
	StartLine        *string `json:"startLine"`
	VulnerableClass  *string `json:"vulnerableClass"`
	VulnerableMethod *string `json:"vulnerableMethod"`
}

type VulnerabilityLocationSecretDetection struct {
	BlobPath         *string `json:"blobPath"`
	EndLine          *string `json:"endLine"`
	File             *string `json:"file"`
	StartLine        *string `json:"startLine"`
	VulnerableClass  *string `json:"vulnerableClass"`
	VulnerableMethod *string `json:"vulnerableMethod"`
}

type VulnerabilityPermissions struct {
	AdminVulnerability                  bool `json:"adminVulnerability"`
	AdminVulnerabilityExternalIssueLink bool `json:"adminVulnerabilityExternalIssueLink"`
	AdminVulnerabilityIssueLink         bool `json:"adminVulnerabilityIssueLink"`
	CreateVulnerabilityExport           bool `json:"createVulnerabilityExport"`
	CreateVulnerabilityFeedback         bool `json:"createVulnerabilityFeedback"`
	DestroyVulnerabilityFeedback        bool `json:"destroyVulnerabilityFeedback"`
	ReadVulnerability                   bool `json:"readVulnerability"`
	ReadVulnerabilityFeedback           bool `json:"readVulnerabilityFeedback"`
	UpdateVulnerabilityFeedback         bool `json:"updateVulnerabilityFeedback"`
}

type VulnerabilityRemediationType struct {
	Diff    *string `json:"diff"`
	Summary *string `json:"summary"`
}

type VulnerabilityRequest struct {
	Body    *string                              `json:"body"`
	Headers []VulnerabilityRequestResponseHeader `json:"headers"`
	Method  *string                              `json:"method"`
	Url     *string                              `json:"url"`
}

type VulnerabilityRequestResponseHeader struct {
	Name  *string `json:"name"`
	Value *string `json:"value"`
}

type VulnerabilityResolveInput struct {
	ClientMutationId *string         `json:"clientMutationId"`
	Comment          *string         `json:"comment"`
	Id               VulnerabilityID `json:"id"`
}

type VulnerabilityResolvePayload struct {
	ClientMutationId *string        `json:"clientMutationId"`
	Errors           []string       `json:"errors"`
	Vulnerability    *Vulnerability `json:"vulnerability"`
}

type VulnerabilityResponse struct {
	Body         *string                              `json:"body"`
	Headers      []VulnerabilityRequestResponseHeader `json:"headers"`
	ReasonPhrase *string                              `json:"reasonPhrase"`
	StatusCode   *int64                               `json:"statusCode"`
}

type VulnerabilityRevertToDetectedInput struct {
	ClientMutationId *string         `json:"clientMutationId"`
	Comment          *string         `json:"comment"`
	Id               VulnerabilityID `json:"id"`
}

type VulnerabilityRevertToDetectedPayload struct {
	ClientMutationId *string        `json:"clientMutationId"`
	Errors           []string       `json:"errors"`
	Vulnerability    *Vulnerability `json:"vulnerability"`
}

type VulnerabilityScanner struct {
	ExternalId          *string                      `json:"externalId"`
	Id                  *string                      `json:"id"`
	Name                *string                      `json:"name"`
	ReportType          *EnumVulnerabilityReportType `json:"reportType"`
	ReportTypeHumanized *string                      `json:"reportTypeHumanized"`
	Vendor              *string                      `json:"vendor"`
}

type VulnerabilityScannerConnection struct {
	Edges    []*VulnerabilityScannerEdge `json:"edges"`
	Nodes    []*VulnerabilityScanner     `json:"nodes"`
	PageInfo PageInfo                    `json:"pageInfo"`
}

type VulnerabilityScannerEdge struct {
	Cursor string                `json:"cursor"`
	Node   *VulnerabilityScanner `json:"node"`
}

type VulnerabilityScannerInput struct {
	Id      string                           `json:"id"`
	Name    string                           `json:"name"`
	Url     string                           `json:"url"`
	Vendor  *VulnerabilityScannerVendorInput `json:"vendor"`
	Version string                           `json:"version"`
}

type VulnerabilityScannerVendorInput struct {
	Name string `json:"name"`
}

type VulnerabilitySeveritiesCount struct {
	Critical *int64 `json:"critical"`
	High     *int64 `json:"high"`
	Info     *int64 `json:"info"`
	Low      *int64 `json:"low"`
	Medium   *int64 `json:"medium"`
	Unknown  *int64 `json:"unknown"`
}

type VulnerabilityStateTransitionType struct {
	Author          *UserCore                         `json:"author"`
	Comment         *string                           `json:"comment"`
	CreatedAt       Time                              `json:"createdAt"`
	DismissalReason *EnumVulnerabilityDismissalReason `json:"dismissalReason"`
	FromState       EnumVulnerabilityState            `json:"fromState"`
	ToState         EnumVulnerabilityState            `json:"toState"`
}

type VulnerabilityStateTransitionTypeConnection struct {
	Edges    []*VulnerabilityStateTransitionTypeEdge `json:"edges"`
	Nodes    []*VulnerabilityStateTransitionType     `json:"nodes"`
	PageInfo PageInfo                                `json:"pageInfo"`
}

type VulnerabilityStateTransitionTypeEdge struct {
	Cursor string                            `json:"cursor"`
	Node   *VulnerabilityStateTransitionType `json:"node"`
}

type VulnerableDependency struct {
	Package *VulnerablePackage `json:"package"`
	Version *string            `json:"version"`
}

type VulnerableKubernetesResource struct {
	Agent         *ClusterAgent      `json:"agent"`
	ClusterId     *ClustersClusterID `json:"clusterId"`
	ContainerName string             `json:"containerName"`
	Kind          string             `json:"kind"`
	Name          string             `json:"name"`
	Namespace     string             `json:"namespace"`
}

type VulnerablePackage struct {
	Name *string `json:"name"`
}

type VulnerableProjectsByGrade struct {
	Count    int64                  `json:"count"`
	Grade    EnumVulnerabilityGrade `json:"grade"`
	Projects ProjectConnection      `json:"projects"`
}

type WorkItem struct {
	Author          *UserCore           `json:"author"`
	ClosedAt        *Time               `json:"closedAt"`
	Confidential    bool                `json:"confidential"`
	CreateNoteEmail *string             `json:"createNoteEmail"`
	CreatedAt       Time                `json:"createdAt"`
	Description     *string             `json:"description"`
	DescriptionHtml *string             `json:"descriptionHtml"`
	Id              WorkItemID          `json:"id"`
	Iid             string              `json:"iid"`
	LockVersion     int64               `json:"lockVersion"`
	Namespace       *Namespace          `json:"namespace"`
	Project         *Project            `json:"project"`
	Reference       string              `json:"reference"`
	State           EnumWorkItemState   `json:"state"`
	Title           string              `json:"title"`
	TitleHtml       *string             `json:"titleHtml"`
	UpdatedAt       Time                `json:"updatedAt"`
	UserPermissions WorkItemPermissions `json:"userPermissions"`
	WebUrl          *string             `json:"webUrl"`
	Widgets         []WorkItemWidget    `json:"widgets"`
	WorkItemType    WorkItemType        `json:"workItemType"`
}

type WorkItemConnection struct {
	Edges    []*WorkItemEdge `json:"edges"`
	Nodes    []*WorkItem     `json:"nodes"`
	PageInfo PageInfo        `json:"pageInfo"`
}

type WorkItemConvertInput struct {
	ClientMutationId *string         `json:"clientMutationId"`
	Id               WorkItemID      `json:"id"`
	WorkItemTypeId   WorkItemsTypeID `json:"workItemTypeId"`
}

type WorkItemConvertPayload struct {
	ClientMutationId *string   `json:"clientMutationId"`
	Errors           []string  `json:"errors"`
	WorkItem         *WorkItem `json:"workItem"`
}

type WorkItemConvertTaskInput struct {
	LineNumberEnd   int64           `json:"lineNumberEnd"`
	LineNumberStart int64           `json:"lineNumberStart"`
	LockVersion     int64           `json:"lockVersion"`
	Title           string          `json:"title"`
	WorkItemTypeId  WorkItemsTypeID `json:"workItemTypeId"`
}

type WorkItemCreateFromTaskInput struct {
	ClientMutationId *string                  `json:"clientMutationId"`
	Id               WorkItemID               `json:"id"`
	WorkItemData     WorkItemConvertTaskInput `json:"workItemData"`
}

type WorkItemCreateFromTaskPayload struct {
	ClientMutationId *string   `json:"clientMutationId"`
	Errors           []string  `json:"errors"`
	NewWorkItem      *WorkItem `json:"newWorkItem"`
	WorkItem         *WorkItem `json:"workItem"`
}

type WorkItemCreateInput struct {
	ClientMutationId *string                             `json:"clientMutationId"`
	Confidential     *bool                               `json:"confidential"`
	Description      *string                             `json:"description"`
	HierarchyWidget  *WorkItemWidgetHierarchyCreateInput `json:"hierarchyWidget"`
	IterationWidget  *WorkItemWidgetIterationInput       `json:"iterationWidget"`
	MilestoneWidget  *WorkItemWidgetMilestoneInput       `json:"milestoneWidget"`
	NamespacePath    *string                             `json:"namespacePath"`
	ProjectPath      *string                             `json:"projectPath"`
	Title            string                              `json:"title"`
	WorkItemTypeId   WorkItemsTypeID                     `json:"workItemTypeId"`
}

type WorkItemCreatePayload struct {
	ClientMutationId *string   `json:"clientMutationId"`
	Errors           []string  `json:"errors"`
	WorkItem         *WorkItem `json:"workItem"`
}

type WorkItemDeleteInput struct {
	ClientMutationId *string    `json:"clientMutationId"`
	Id               WorkItemID `json:"id"`
}

type WorkItemDeletePayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	Project          *Project `json:"project"`
}

type WorkItemDeleteTaskInput struct {
	ClientMutationId *string                  `json:"clientMutationId"`
	Id               WorkItemID               `json:"id"`
	LockVersion      int64                    `json:"lockVersion"`
	TaskData         WorkItemDeletedTaskInput `json:"taskData"`
}

type WorkItemDeleteTaskPayload struct {
	ClientMutationId *string   `json:"clientMutationId"`
	Errors           []string  `json:"errors"`
	WorkItem         *WorkItem `json:"workItem"`
}

type WorkItemDeletedTaskInput struct {
	Id              WorkItemID `json:"id"`
	LineNumberEnd   int64      `json:"lineNumberEnd"`
	LineNumberStart int64      `json:"lineNumberStart"`
}

type WorkItemEdge struct {
	Cursor string    `json:"cursor"`
	Node   *WorkItem `json:"node"`
}

type WorkItemExportInput struct {
	AuthorUsername   *string                       `json:"authorUsername"`
	ClientMutationId *string                       `json:"clientMutationId"`
	Iids             []string                      `json:"iids"`
	In               []EnumIssuableSearchableField `json:"in"`
	ProjectPath      string                        `json:"projectPath"`
	Search           *string                       `json:"search"`
	SelectedFields   []EnumAvailableExportFields   `json:"selectedFields"`
	State            *EnumIssuableState            `json:"state"`
	Types            []EnumIssueType               `json:"types"`
}

type WorkItemExportPayload struct {
	ClientMutationId *string  `json:"clientMutationId"`
	Errors           []string `json:"errors"`
	Message          *string  `json:"message"`
}

type WorkItemPermissions struct {
	AdminParentLink     bool `json:"adminParentLink"`
	AdminWorkItem       bool `json:"adminWorkItem"`
	CreateNote          bool `json:"createNote"`
	DeleteWorkItem      bool `json:"deleteWorkItem"`
	ReadWorkItem        bool `json:"readWorkItem"`
	SetWorkItemMetadata bool `json:"setWorkItemMetadata"`
	UpdateWorkItem      bool `json:"updateWorkItem"`
}

type WorkItemSubscribeInput struct {
	ClientMutationId *string    `json:"clientMutationId"`
	Id               WorkItemID `json:"id"`
	Subscribed       bool       `json:"subscribed"`
}

type WorkItemSubscribePayload struct {
	ClientMutationId *string   `json:"clientMutationId"`
	Errors           []string  `json:"errors"`
	WorkItem         *WorkItem `json:"workItem"`
}

type WorkItemType struct {
	IconName *string         `json:"iconName"`
	Id       WorkItemsTypeID `json:"id"`
	Name     string          `json:"name"`
}

type WorkItemTypeConnection struct {
	Edges    []*WorkItemTypeEdge `json:"edges"`
	Nodes    []*WorkItemType     `json:"nodes"`
	PageInfo PageInfo            `json:"pageInfo"`
}

type WorkItemTypeEdge struct {
	Cursor string        `json:"cursor"`
	Node   *WorkItemType `json:"node"`
}

type WorkItemUpdateInput struct {
	AssigneesWidget        *WorkItemWidgetAssigneesInput             `json:"assigneesWidget"`
	AwardEmojiWidget       *WorkItemWidgetAwardEmojiUpdateInput      `json:"awardEmojiWidget"`
	ClientMutationId       *string                                   `json:"clientMutationId"`
	Confidential           *bool                                     `json:"confidential"`
	CurrentUserTodosWidget *WorkItemWidgetCurrentUserTodosInput      `json:"currentUserTodosWidget"`
	DescriptionWidget      *WorkItemWidgetDescriptionInput           `json:"descriptionWidget"`
	HealthStatusWidget     *WorkItemWidgetHealthStatusInput          `json:"healthStatusWidget"`
	HierarchyWidget        *WorkItemWidgetHierarchyUpdateInput       `json:"hierarchyWidget"`
	Id                     WorkItemID                                `json:"id"`
	IterationWidget        *WorkItemWidgetIterationInput             `json:"iterationWidget"`
	LabelsWidget           *WorkItemWidgetLabelsUpdateInput          `json:"labelsWidget"`
	MilestoneWidget        *WorkItemWidgetMilestoneInput             `json:"milestoneWidget"`
	NotificationsWidget    *WorkItemWidgetNotificationsUpdateInput   `json:"notificationsWidget"`
	ProgressWidget         *WorkItemWidgetProgressInput              `json:"progressWidget"`
	StartAndDueDateWidget  *WorkItemWidgetStartAndDueDateUpdateInput `json:"startAndDueDateWidget"`
	StateEvent             *EnumWorkItemStateEvent                   `json:"stateEvent"`
	StatusWidget           *StatusInput                              `json:"statusWidget"`
	Title                  *string                                   `json:"title"`
	WeightWidget           *WorkItemWidgetWeightInput                `json:"weightWidget"`
}

type WorkItemUpdatePayload struct {
	ClientMutationId *string   `json:"clientMutationId"`
	Errors           []string  `json:"errors"`
	WorkItem         *WorkItem `json:"workItem"`
}

type WorkItemUpdateTaskInput struct {
	ClientMutationId *string                  `json:"clientMutationId"`
	Id               WorkItemID               `json:"id"`
	TaskData         WorkItemUpdatedTaskInput `json:"taskData"`
}

type WorkItemUpdateTaskPayload struct {
	ClientMutationId *string   `json:"clientMutationId"`
	Errors           []string  `json:"errors"`
	Task             *WorkItem `json:"task"`
	WorkItem         *WorkItem `json:"workItem"`
}

type WorkItemUpdatedTaskInput struct {
	AssigneesWidget        *WorkItemWidgetAssigneesInput             `json:"assigneesWidget"`
	AwardEmojiWidget       *WorkItemWidgetAwardEmojiUpdateInput      `json:"awardEmojiWidget"`
	Confidential           *bool                                     `json:"confidential"`
	CurrentUserTodosWidget *WorkItemWidgetCurrentUserTodosInput      `json:"currentUserTodosWidget"`
	DescriptionWidget      *WorkItemWidgetDescriptionInput           `json:"descriptionWidget"`
	HierarchyWidget        *WorkItemWidgetHierarchyUpdateInput       `json:"hierarchyWidget"`
	Id                     WorkItemID                                `json:"id"`
	LabelsWidget           *WorkItemWidgetLabelsUpdateInput          `json:"labelsWidget"`
	MilestoneWidget        *WorkItemWidgetMilestoneInput             `json:"milestoneWidget"`
	NotificationsWidget    *WorkItemWidgetNotificationsUpdateInput   `json:"notificationsWidget"`
	StartAndDueDateWidget  *WorkItemWidgetStartAndDueDateUpdateInput `json:"startAndDueDateWidget"`
	StateEvent             *EnumWorkItemStateEvent                   `json:"stateEvent"`
	Title                  *string                                   `json:"title"`
}

type WorkItemWidgetAssignees struct {
	AllowsMultipleAssignees *bool                   `json:"allowsMultipleAssignees"`
	Assignees               *UserCoreConnection     `json:"assignees"`
	CanInviteMembers        bool                    `json:"canInviteMembers"`
	Type                    *EnumWorkItemWidgetType `json:"type"`
}

type WorkItemWidgetAssigneesInput struct {
	AssigneeIds []UserID `json:"assigneeIds"`
}

type WorkItemWidgetAwardEmoji struct {
	AwardEmoji *AwardEmojiConnection   `json:"awardEmoji"`
	Downvotes  int64                   `json:"downvotes"`
	Type       *EnumWorkItemWidgetType `json:"type"`
	Upvotes    int64                   `json:"upvotes"`
}

type WorkItemWidgetAwardEmojiUpdateInput struct {
	Action EnumWorkItemAwardEmojiUpdateAction `json:"action"`
	Name   string                             `json:"name"`
}

type WorkItemWidgetCurrentUserTodos struct {
	CurrentUserTodos TodoConnection          `json:"currentUserTodos"`
	Type             *EnumWorkItemWidgetType `json:"type"`
}

type WorkItemWidgetCurrentUserTodosInput struct {
	Action EnumWorkItemTodoUpdateAction `json:"action"`
	TodoId *TodoID                      `json:"todoId"`
}

type WorkItemWidgetDescription struct {
	Description     *string                 `json:"description"`
	DescriptionHtml *string                 `json:"descriptionHtml"`
	Edited          bool                    `json:"edited"`
	LastEditedAt    *Time                   `json:"lastEditedAt"`
	LastEditedBy    *UserCore               `json:"lastEditedBy"`
	Type            *EnumWorkItemWidgetType `json:"type"`
}

type WorkItemWidgetDescriptionInput struct {
	Description string `json:"description"`
}

type WorkItemWidgetHealthStatus struct {
	HealthStatus *EnumHealthStatus       `json:"healthStatus"`
	Type         *EnumWorkItemWidgetType `json:"type"`
}

type WorkItemWidgetHealthStatusInput struct {
	HealthStatus *EnumHealthStatus `json:"healthStatus"`
}

type WorkItemWidgetHierarchy struct {
	Children    *WorkItemConnection     `json:"children"`
	HasChildren bool                    `json:"hasChildren"`
	Parent      *WorkItem               `json:"parent"`
	Type        *EnumWorkItemWidgetType `json:"type"`
}

type WorkItemWidgetHierarchyCreateInput struct {
	ParentId *WorkItemID `json:"parentId"`
}

type WorkItemWidgetHierarchyUpdateInput struct {
	AdjacentWorkItemId *WorkItemID               `json:"adjacentWorkItemId"`
	ChildrenIds        []WorkItemID              `json:"childrenIds"`
	ParentId           *WorkItemID               `json:"parentId"`
	RelativePosition   *EnumRelativePositionType `json:"relativePosition"`
}

type WorkItemWidgetIteration struct {
	Iteration *Iteration              `json:"iteration"`
	Type      *EnumWorkItemWidgetType `json:"type"`
}

type WorkItemWidgetIterationInput struct {
	IterationId *IterationID `json:"iterationId"`
}

type WorkItemWidgetLabels struct {
	AllowsScopedLabels *bool                   `json:"allowsScopedLabels"`
	Labels             *LabelConnection        `json:"labels"`
	Type               *EnumWorkItemWidgetType `json:"type"`
}

type WorkItemWidgetLabelsUpdateInput struct {
	AddLabelIds    []LabelID `json:"addLabelIds"`
	RemoveLabelIds []LabelID `json:"removeLabelIds"`
}

type WorkItemWidgetMilestone struct {
	Milestone *Milestone              `json:"milestone"`
	Type      *EnumWorkItemWidgetType `json:"type"`
}

type WorkItemWidgetMilestoneInput struct {
	MilestoneId *MilestoneID `json:"milestoneId"`
}

type WorkItemWidgetNotes struct {
	Discussions *DiscussionConnection   `json:"discussions"`
	Type        *EnumWorkItemWidgetType `json:"type"`
}

type WorkItemWidgetNotifications struct {
	Subscribed bool                    `json:"subscribed"`
	Type       *EnumWorkItemWidgetType `json:"type"`
}

type WorkItemWidgetNotificationsUpdateInput struct {
	Subscribed bool `json:"subscribed"`
}

type WorkItemWidgetProgress struct {
	Progress  *int64                  `json:"progress"`
	Type      *EnumWorkItemWidgetType `json:"type"`
	UpdatedAt *Time                   `json:"updatedAt"`
}

type WorkItemWidgetProgressInput struct {
	CurrentValue int64 `json:"currentValue"`
}

type WorkItemWidgetRequirementLegacy struct {
	LegacyIid *int64                  `json:"legacyIid"`
	Type      *EnumWorkItemWidgetType `json:"type"`
}

type WorkItemWidgetStartAndDueDate struct {
	DueDate   *Date                   `json:"dueDate"`
	StartDate *Date                   `json:"startDate"`
	Type      *EnumWorkItemWidgetType `json:"type"`
}

type WorkItemWidgetStartAndDueDateUpdateInput struct {
	DueDate   *Date `json:"dueDate"`
	StartDate *Date `json:"startDate"`
}

type WorkItemWidgetStatus struct {
	Status *string                 `json:"status"`
	Type   *EnumWorkItemWidgetType `json:"type"`
}

type WorkItemWidgetTestReports struct {
	TestReports *TestReportConnection   `json:"testReports"`
	Type        *EnumWorkItemWidgetType `json:"type"`
}

type WorkItemWidgetWeight struct {
	Type   *EnumWorkItemWidgetType `json:"type"`
	Weight *int64                  `json:"weight"`
}

type WorkItemWidgetWeightInput struct {
	Weight *int64 `json:"weight"`
}

type Workspace struct {
	ActualState               string                       `json:"actualState"`
	ClusterAgent              ClusterAgent                 `json:"clusterAgent"`
	CreatedAt                 Time                         `json:"createdAt"`
	DeploymentResourceVersion *int64                       `json:"deploymentResourceVersion"`
	DesiredState              string                       `json:"desiredState"`
	DesiredStateUpdatedAt     Time                         `json:"desiredStateUpdatedAt"`
	Devfile                   string                       `json:"devfile"`
	DevfilePath               string                       `json:"devfilePath"`
	DevfileRef                string                       `json:"devfileRef"`
	Editor                    string                       `json:"editor"`
	Id                        RemoteDevelopmentWorkspaceID `json:"id"`
	MaxHoursBeforeTermination int64                        `json:"maxHoursBeforeTermination"`
	Name                      string                       `json:"name"`
	Namespace                 string                       `json:"namespace"`
	ProcessedDevfile          string                       `json:"processedDevfile"`
	ProjectId                 string                       `json:"projectId"`
	RespondedToAgentAt        *Time                        `json:"respondedToAgentAt"`
	UpdatedAt                 Time                         `json:"updatedAt"`
	Url                       string                       `json:"url"`
	User                      UserCore                     `json:"user"`
}

type WorkspaceConnection struct {
	Edges    []*WorkspaceEdge `json:"edges"`
	Nodes    []*Workspace     `json:"nodes"`
	PageInfo PageInfo         `json:"pageInfo"`
}

type WorkspaceCreateInput struct {
	ClientMutationId          *string         `json:"clientMutationId"`
	ClusterAgentId            ClustersAgentID `json:"clusterAgentId"`
	DesiredState              string          `json:"desiredState"`
	DevfilePath               string          `json:"devfilePath"`
	DevfileRef                string          `json:"devfileRef"`
	Editor                    string          `json:"editor"`
	MaxHoursBeforeTermination int64           `json:"maxHoursBeforeTermination"`
	ProjectId                 ProjectID       `json:"projectId"`
}

type WorkspaceCreatePayload struct {
	ClientMutationId *string    `json:"clientMutationId"`
	Errors           []string   `json:"errors"`
	Workspace        *Workspace `json:"workspace"`
}

type WorkspaceEdge struct {
	Cursor string     `json:"cursor"`
	Node   *Workspace `json:"node"`
}

type WorkspaceUpdateInput struct {
	ClientMutationId *string                      `json:"clientMutationId"`
	DesiredState     string                       `json:"desiredState"`
	Id               RemoteDevelopmentWorkspaceID `json:"id"`
}

type WorkspaceUpdatePayload struct {
	ClientMutationId *string    `json:"clientMutationId"`
	Errors           []string   `json:"errors"`
	Workspace        *Workspace `json:"workspace"`
}

type X509Certificate struct {
	CertificateStatus    string     `json:"certificateStatus"`
	CreatedAt            Time       `json:"createdAt"`
	Email                string     `json:"email"`
	Id                   string     `json:"id"`
	SerialNumber         string     `json:"serialNumber"`
	Subject              string     `json:"subject"`
	SubjectKeyIdentifier string     `json:"subjectKeyIdentifier"`
	UpdatedAt            Time       `json:"updatedAt"`
	X509Issuer           X509Issuer `json:"x509Issuer"`
}

type X509Issuer struct {
	CreatedAt            *Time   `json:"createdAt"`
	CrlUrl               *string `json:"crlUrl"`
	Id                   *string `json:"id"`
	Subject              *string `json:"subject"`
	SubjectKeyIdentifier *string `json:"subjectKeyIdentifier"`
	UpdatedAt            *Time   `json:"updatedAt"`
}

type X509Signature struct {
	CommitSha          *string                 `json:"commitSha"`
	Project            *Project                `json:"project"`
	User               *UserCore               `json:"user"`
	VerificationStatus *EnumVerificationStatus `json:"verificationStatus"`
	X509Certificate    *X509Certificate        `json:"x509Certificate"`
}

type iterationCreateInput struct {
	ClientMutationId    *string              `json:"clientMutationId"`
	Description         *string              `json:"description"`
	DueDate             *string              `json:"dueDate"`
	GroupPath           *string              `json:"groupPath"`
	IterationsCadenceId *IterationsCadenceID `json:"iterationsCadenceId"`
	ProjectPath         *string              `json:"projectPath"`
	StartDate           *string              `json:"startDate"`
	Title               *string              `json:"title"`
}

type iterationCreatePayload struct {
	ClientMutationId *string    `json:"clientMutationId"`
	Errors           []string   `json:"errors"`
	Iteration        *Iteration `json:"iteration"`
}
